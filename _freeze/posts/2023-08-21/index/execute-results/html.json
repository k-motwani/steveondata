{
  "hash": "a4f74494c6d56f52a0aed582f369c781",
  "result": {
    "markdown": "---\ntitle: \"Exploring Box Plots with Mean Values using Base R and ggplot2\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-08-21\"\ncategories: [rtip, viz]\n---\n\n\n# Introduction\n\nData visualization is a powerful tool for understanding and interpreting data. In this blog post, we will explore how to create box plots with mean values using both base R and ggplot2. We will use the famous iris dataset as an example. So, grab your coding tools and let's dive into the world of box plots!\n\n# Examples\n\n## Example 1: Box Plots with Mean Value in Base R\nTo start, let's use base R to create box plots with mean values. Here's the code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the mean for each species\nmean_values <- aggregate(iris$Sepal.Length, by = list(iris$Species), FUN = mean)\n\n# Create a box plot with mean value\nboxplot(iris$Sepal.Length ~ iris$Species, \n        main = \"Box Plot with Mean Value\",\n        xlab = \"Species\", ylab = \"Sepal Length\", \n        col = \"lightblue\")\npoints(mean_values$x ~ mean_values$Group.1, col = \"red\", pch = 19)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nIn this code, we first load the iris dataset using the `data()` function. Then, we calculate the mean value for each species using the `aggregate()` function. Finally, we create a box plot using `boxplot()` and add the mean values as red points using `points()`.\n\n## Example 2: Single Boxplot with mean line\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a basic box plot with mean using Base R\nboxplot(iris$Sepal.Length, main=\"Box Plot with Mean (Sepal.Length)\", \n        ylab=\"Sepal Length\", col=\"lightblue\")\nabline(h=mean(iris$Sepal.Length), col=\"red\", lwd=2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nIn this code snippet, we load the Iris dataset and generate a box plot for the Sepal.Length attribute. The abline() function adds a horizontal line at the mean value, highlighted in red. Don't hesitate to modify attributes like color, line width, or title to customize your plot to your heart's content!\n\n## Example 3: Box Plots with Mean Value in ggplot2\n\nNow let's use the `ggplot2` library.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary library\nlibrary(ggplot2)\n\n# Create a box plot with mean using ggplot2\nggplot(iris, aes(x = Species, y = Sepal.Length)) +\n  geom_boxplot() +\n  geom_point(data = aggregate(Sepal.Length ~ Species, data = iris, mean),\n             aes(x = Species, y = Sepal.Length), color = \"red\", size = 3) +\n  labs(title = \"Box Plot of Sepal Length by Species\",\n       x = \"Species\",\n       y = \"Sepal Length\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n-    We load the ggplot2 library using library(ggplot2).\n-    We use the ggplot() function to create a ggplot object and specify the dataset and aesthetic mappings with the aes() function.\n-    We use geom_boxplot() to create the box plot.\n-    We use geom_point() to add red points representing the mean values using the aggregate() result.\n-    labs() is used to set the plot title and axis labels.\n-    We use theme_minimal() to apply a clean and minimal theme to the plot.\n\n## Example 4: Single Boxplot with mean line ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a box plot with mean using ggplot2\nggplot(iris, aes(x=\"\", y=Sepal.Length)) +\n  geom_boxplot(fill=\"lightblue\", color=\"black\") +\n  geom_hline(yintercept = mean(iris$Sepal.Length), color=\"red\", linetype=\"dashed\") +\n  labs(title=\"Box Plot with Mean using ggplot2\",\n       y=\"Sepal Length\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nHere, we use the ggplot() function to set up the plot structure and aesthetics. The geom_boxplot() function generates the box plot, and the geom_hline() function adds the mean line. Customize the color palette, line types, titles, and themes to make your visualization shine!\n\n# Conclusion:\nIn this blog post, we explored how to create box plots with mean values using both base R and ggplot2. We used the iris dataset as an example and provided code snippets for each approach. Box plots are a great way to visualize the distribution of data and the addition of mean values provides further insights. We encourage you to try these examples with the iris dataset or apply them to your own data. Happy coding and happy visualizing!\n\nRemember, data visualization is an art form, so feel free to experiment with different customizations and explore other types of plots. The more you practice, the better you'll become at creating informative and visually appealing visualizations. So, keep coding and keep exploring the world of data visualization!\n\n# References:\n-   (https://stackoverflow.com/questions/64732557/add-mean-to-grouped-box-plot-in-r-with-ggplot2)\n-   https://gexijin.github.io/learnR/visualizing-the-iris-flower-data-set.html\n-   https://rgraphs.com/make-a-boxplot-in-r-using-already-computed-statistics/\n-   https://www.kaggle.com/code/susree64/ggplot-basic-data-visualization-on-iris-data\n-   https://www.sarfarazalam.com/post/r_ggplot_tutorial_barplot_boxplot/r_tutorial_barplot_boxplot\n-   https://rstudio-pubs-static.s3.amazonaws.com/669797_ce311ad305e249c2a7278de2fc1c6aac.html",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}