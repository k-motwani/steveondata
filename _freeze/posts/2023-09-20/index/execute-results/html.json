{
  "hash": "48ad9de53554d2a65c2497534caa8ac3",
  "result": {
    "markdown": "---\ntitle: \"Mastering Data Visualization in R: Plotting Predicted Values with the mtcars Dataset\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-09-20\"\ncategories: [rtip, viz]\n---\n\n\n# Introduction\n\nData visualization is a powerful tool in a data scientist's toolkit. It not only helps us understand our data but also presents it in a way that is easy to comprehend. In this blog post, we will explore how to plot predicted values in R using the mtcars dataset. We will train a simple regression model to predict the miles per gallon (mpg) of cars based on their attributes and then visualize the predictions. By the end of this tutorial, you'll have a clear understanding of how to plot predicted values and can apply this knowledge to your own data analysis projects.\n\n**Step 1: Load the Required Libraries**\n\nBefore we dive into the code, let's make sure we have the necessary libraries installed. We'll be using `ggplot2` for plotting and `caret` for model training and evaluation. You can install them if you haven't already using:\n\n```R\ninstall.packages(\"ggplot2\")\ninstall.packages(\"caret\")\n```\n\nNow, let's load the libraries:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(caret)\n```\n:::\n\n\n**Step 2: Load and Explore the Data**\n\nWe'll use the classic `mtcars` dataset, which contains various attributes of different car models. Our goal is to predict the fuel efficiency (mpg) of these cars. Let's load and explore the dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n```\n:::\n:::\n\n\nThis will display the first few rows of the dataset, giving you an idea of what it looks like.\n\n**Step 3: Split the Data into Training and Testing Sets**\n\nBefore we proceed with modeling and prediction, we need to split our data into training and testing sets. We'll use 80% of the data for training and the remaining 20% for testing:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  # for reproducibility\nsplitIndex <- createDataPartition(mtcars$mpg, p = 0.8, list = FALSE)\ntraining_data <- mtcars[splitIndex, ]\ntesting_data <- mtcars[-splitIndex, ]\n```\n:::\n\n\n**Step 4: Build a Simple Linear Regression Model**\n\nNow, let's build a simple linear regression model to predict `mpg` based on other attributes. We'll use the `lm()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(mpg ~ ., data = training_data)\n```\n:::\n\n\nThis line of code fits the linear regression model using the training data.\n\n**Step 5: Make Predictions**\n\nWith our model trained, we can now make predictions on the testing data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredictions <- predict(model, newdata = testing_data)\n```\n:::\n\n\n**Step 6: Create a Scatter Plot of Predicted vs. Actual Values**\n\nThe most exciting part is visualizing the predicted values. We can do this using a scatter plot. Let's create one:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine actual and predicted values\nplot_data <- data.frame(Actual = testing_data$mpg, Predicted = predictions)\n\n# Create a scatter plot\nggplot(plot_data, aes(x = Actual, y = Predicted)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~ x, color = \"red\") +\n  labs(\n    x = \"Actual MPG\", \n    y = \"Predicted MPG\", \n    title = \"Actual vs. Predicted MPG\"\n    ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThis code generates a scatter plot with the actual MPG values on the x-axis and predicted MPG values on the y-axis. The red line represents a linear regression line that helps us see how well our predictions align with the actual data.\n\nHere is how we also plot the data in base R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine actual and predicted values\nplot_data <- data.frame(Actual = testing_data$mpg, Predicted = predictions)\n\n# Create a scatter plot\nplot(plot_data$Actual, plot_data$Predicted,\n     xlab = \"Actual MPG\", ylab = \"Predicted MPG\",\n     main = \"Actual vs. Predicted MPG\",\n     pch = 19, col = \"blue\")\n\n# Add a regression line\nabline(lm(Predicted ~ Actual, data = plot_data), col = \"red\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n# Conclusion\n\nCongratulations! You've successfully learned how to plot predicted values in R using the mtcars dataset. Visualization is a vital part of data analysis, and it can provide valuable insights into the performance of your predictive models.\n\nI encourage you to try this on your own datasets and explore more advanced visualization techniques. Experiment with different models and datasets to gain a deeper understanding of data visualization in R. Happy coding!",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}