{
  "hash": "9857a586b6c3f45513120f086835ce2a",
  "result": {
    "markdown": "---\ntitle: \"Mastering the Art of Drawing Circles in Plots with R\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-10-13\"\ncategories: [rtip, viz]\n---\n\n\n# Introduction\n\nAs an R programmer, you may want to draw circles in plots to highlight certain data points or to create visualizations. Here are some simple steps to draw circles in plots using R:\n\n# Examples\n\n1. First, create a scatter plot using the `plot()` function in R. For example, you can create a scatter plot of `x` and `y` values using the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1, 2, 3, 4, 5)\ny <- c(2, 4, 6, 8, 10)\nplot(x, y)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n2. To draw a circle on the plot, you can use the `symbols()` function in R. The `symbols()` function allows you to draw various shapes, including circles, squares, triangles, and more. To draw a circle, set the `circles` argument to `TRUE`. For example, to draw a circle with a radius of 0.5 at the point (3, 6), use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x, y)\nsymbols(3, 6, circles = 1, add = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n3. You can also customize the color and border of the circle using the `bg` and `fg` arguments. For example, to draw a red circle with a blue border, use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x, y)\nsymbols(3, 6, circles = 1, add = TRUE, bg = \"red\", fg = \"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n4. To draw multiple circles on the plot, you can use a loop to iterate over a list of coordinates and radii. For example, to draw three circles with different radii at different points, use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x, y)\n\ncoords <- list(c(2, 4), c(3, 6), c(4, 8))\nradii <- c(0.1, 0.2, 0.3)\n\nfor (i in 1:length(coords)) {\n  symbols(\n    coords[[i]][1], coords[[i]][2], circles = radii[[i]], \n    add = TRUE, bg = \"red\", fg = \"blue\", inches = FALSE\n  )\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n5. Finally, you can add a title and axis labels to the plot using the `title()`, `xlab()`, and `ylab()` functions. For example, to add a title and axis labels to the plot, use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- c(1, 2, 3, 4, 5)\ny <- c(2, 4, 6, 8, 10)\nplot(\n  x, y, main = \"Scatter Plot with Circles\", \n  xlab = \"X Values\", ylab = \"Y Values\"\n)\n\ncoords <- list(c(2, 4), c(3, 6), c(4, 8))\nradii <- c(0.1, 0.2, 0.3)\n\nfor (i in 1:length(coords)) {\n  symbols(\n    coords[[i]][1], coords[[i]][2], circles = radii[[i]], \n    add = TRUE, bg = \"red\", fg = \"blue\", inches = FALSE\n  )\n}\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nHere is one last exmple:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a scatter plot with multiple circles\nn <- 10\nx <- runif(n, -2, 2)\ny <- runif(n, -2, 2)\nsize <- runif(n, 0.1, 1)\nfill <- sample(colors(), n)\nborder <- sample(colors(), n)\n\nsymbols(x, y, circles = size, inches = FALSE, add = F, bg = fill, fg = border)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n# Conclusion\n\nOverall, drawing circles in plots is a simple and effective way to highlight certain data points or to create visualizations. Try experimenting with different coordinates, radii, colors, and borders to create your own custom plots.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}