{
  "hash": "d3fe16ee08e26da9274c3075f11ed7ef",
  "result": {
    "markdown": "---\ntitle: \"Discrete Fourier Vec with healthyR.ai\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2022-11-07\"\ncategories: [code, rtip, healthyrai]\n---\n\n\n# Introduction\n\nSometimes in modeling you may want to get a discrete `1/0` vector of a `fourier` transform of some input vector. With `{healthyR.ai}` we can do this easily.\n\n# Function\n\nHere is the full function call:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhai_fourier_discrete_vec(\n  .x,\n  .period,\n  .order,\n  .scale_type = c(\"sin\", \"cos\", \"sincos\")\n)\n```\n:::\n\n\nHere are the parameters to the function and what they expect:\n\n*  `.x` - A numeric vector\n*  `.period` - The number of observations that complete a cycle\n*  `.order` - The fourier term order\n*  `.scale_type` - A character of one of the following: `sin`,`cos`,`sincos`\n\nThe internal caluclation is straightforward:\n\n*  `sin = sin(2 * pi * h * x), where h = .order/.period`\n*  `cos = cos(2 * pi * h * x), where h = .order/.period`\n*  `sincos = sin(2 * pi * h * x) * cos(2 * pi * h * x) where h = .order/.period`\n\n# Example\n\nLet's work throught a quick and simple example.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(healthyR.ai)\nlibrary(tidyr)\n\nlen_out <- 24\nby_unit <- \"month\"\nstart_date <- as.Date(\"2021-01-01\")\n\ndata_tbl <- tibble(\n  date_col = seq.Date(\n    from = start_date, \n    length.out = len_out, \n    by = by_unit\n  ),\n  a = rnorm(len_out, sd = 2),\n  fv_sin = hai_fourier_discrete_vec(a, 12, 1, \"sin\"),\n  fv_cos = hai_fourier_discrete_vec(a, 12, 1, \"cos\"),\n  fv_sc  = hai_fourier_discrete_vec(a, 12, 1, \"sincos\")\n)\n\ndata_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 24 × 5\n   date_col         a fv_sin fv_cos fv_sc\n   <date>       <dbl>  <dbl>  <dbl> <dbl>\n 1 2021-01-01 -0.486       0      1     0\n 2 2021-02-01 -0.708       0      1     0\n 3 2021-03-01 -0.119       0      1     0\n 4 2021-04-01  0.0405      1      1     1\n 5 2021-05-01  1.19        1      1     1\n 6 2021-06-01  1.88        1      1     1\n 7 2021-07-01 -1.32        0      1     0\n 8 2021-08-01 -0.0214      0      1     0\n 9 2021-09-01  2.80        1      1     1\n10 2021-10-01  1.67        1      1     1\n# … with 14 more rows\n```\n:::\n:::\n\n\n# Visual\n\nLet's visualize.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_tbl %>% \n  pivot_longer(cols = -date_col) %>% \n  ggplot(aes(x = date_col, y = value, color = name)) + \n  geom_line() + \n  facet_wrap(~ name, scales = \"free\") +\n  theme_minimal() +\n  labs(color = \"\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plt-1.png){width=672}\n:::\n:::\n\n\nVoila!",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}