{
  "hash": "9595b4d4edccf27ab484009949488c7d",
  "result": {
    "markdown": "---\ntitle: \"Bootstrap Modeling with Base R\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2022-11-21\"\ncategories: [code, bootstrap, rtip]\n---\n\n\n# Introduction\n\nI have previously written about bootstrap modeling with [`{purrr} and {modelr}` here](https://www.spsanderson.com/steveondata/posts/rtip-2022-11-17/). What if you would like to do some simple __bootstrap__ modeling _without_ importing a library? This itself is easy too!\n\n# Example\n\nWe will be using a very simple for loop to accomplish this. You will find an excellent post on this [on Stats StackExchange](https://stats.stackexchange/q/501275) from [Francisco Jos Goerlich Gisbert](https://stats.stackexchange.com/users/305753/francisco-jos-goerlich-gisbert)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn    <- 2000\ndf   <- mtcars\npred <- numeric(0)\n\nlibrary(tictoc) # for timing\n\ntic()\nset.seed(123)\nfor (i in 1:n){\n  boot    <- sample(nrow(df), n, replace = TRUE)\n  fit     <- lm(mpg ~ wt, data = df[boot,])\n  pred[i] <- predict(fit, newdata = df[boot,]) +\n    sample(resid(fit), size = 1)\n}\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n6.8 sec elapsed\n```\n:::\n:::\n\n\nSo we can see that the process ran pretty quickly and the loop itself is not a very difficult one. Let's explain a little.\n\nSo the `boot` object is a sampling of `df` which in this case is the `mtcars` data set. We took a sample with replacement from this data set. We took 2000 samples and did this 2000 times.\n\nNext we made the `fit` object by fitting a simple linear model to the data where `mpg` is a function of `wt`. Once this is done, we made out predictions.\n\nThat's it!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}