{
  "hash": "b94448b1bdc228c57747f402a0f61cc3",
  "result": {
    "markdown": "---\ntitle: \"Default Metric Sets with {healthyR.ai}\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2022-11-28\"\ncategories: [code, rtip, healthyrai]\n---\n\n\n# Introduction\n\nWhen modeling it is always good to understand your model performance against some metric The `{tidymodels}` `package` `{yardstick}` is a great resource for this.\n\n\nIn my _R package_ `{healthyR.ai}` there are two functions that allow you to either __minimize__ or __maximize__ some cost function against your modeling problem.\n\nThese functions are:\n*  `hai_default_regression_metric_set()`\n*  `hai_default_classification_metric_set()`\n\n# Function\n\nThe functions themselves are `{yardstick}` metric set functions. Let's take a look at them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(healthyR.ai)\n\nhai_default_classification_metric_set()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 × 3\n   metric       class        direction\n   <chr>        <chr>        <chr>    \n 1 sensitivity  class_metric maximize \n 2 specificity  class_metric maximize \n 3 recall       class_metric maximize \n 4 precision    class_metric maximize \n 5 mcc          class_metric maximize \n 6 accuracy     class_metric maximize \n 7 f_meas       class_metric maximize \n 8 kap          class_metric maximize \n 9 ppv          class_metric maximize \n10 npv          class_metric maximize \n11 bal_accuracy class_metric maximize \n```\n:::\n\n```{.r .cell-code}\nhai_default_regression_metric_set()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  metric class          direction\n  <chr>  <chr>          <chr>    \n1 mae    numeric_metric minimize \n2 mape   numeric_metric minimize \n3 mase   numeric_metric minimize \n4 smape  numeric_metric minimize \n5 rmse   numeric_metric minimize \n6 rsq    numeric_metric maximize \n```\n:::\n:::\n\n\nVoila!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}