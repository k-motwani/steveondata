{
  "hash": "281da8f5d5133a040a7f80ecc421f7f7",
  "result": {
    "markdown": "---\ntitle: \"Distribution Summaries with {TidyDensity}\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2022-12-14\"\ncategories: [code, rtip, tidydensity]\n---\n\n\n# Introduction\n\n[`{TidyDensity}`](https://www.spsanderson.com/TidyDensity/) is an R package that provides tools for working with probability distributions in a tidy data format. One of the key functions in the package is `tidy_distribution_summary_tbl()`, which allows users to quickly and easily get summary information about a probability distribution.\n\nThe [`tidy_distribution_summary_tbl()`](https://www.spsanderson.com/TidyDensity/reference/tidy_distribution_summary_tbl.html) function takes a vector of data as input and returns a table with basic statistics about the distribution of the data. This includes the mean, standard deviation, kurtosis, and skewness of the data, as well as other useful information.\n\nUsing [`tidy_distribution_summary_tbl()`](https://www.spsanderson.com/TidyDensity/reference/tidy_distribution_summary_tbl.html), users can easily get a high-level overview of their data, which can be useful for exploratory data analysis, data visualization, and other tasks. The function is designed to work seamlessly with the other tools in the `{TidyDensity}` package, making it easy to combine with other operations and build complex data analysis pipelines.\n\nOverall, TidyDensity and its [`tidy_distribution_summary_tbl()`](https://www.spsanderson.com/TidyDensity/reference/tidy_distribution_summary_tbl.html) function are valuable tools for anyone working with probability distributions in R. Whether you are a seasoned data scientist or a beginner, TidyDensity can help you quickly and easily explore and understand your data.\n\n# Function\n\nLet's take a look at the full function call.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_distribution_summary_tbl(.data, ...)\n```\n:::\n\n\nHere are the arguments that go to the parameters.\n\n-   `.data` - The data that is going to be passed from a a tidy\\_ distribution function.\n-   `...` - This is the grouping variable that gets passed to `dplyr::group_by()` and `dplyr::select()`.\n\n# Example\n\nNow let's go over a simple example.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(TidyDensity)\nlibrary(dplyr)\n\ntn <- tidy_normal(.num_sims = 5)\ntb <- tidy_beta(.num_sims = 5)\n\ntidy_distribution_summary_tbl(tn) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 12\n$ mean_val   <dbl> -0.044964\n$ median_val <dbl> -0.0266966\n$ std_val    <dbl> 1.020322\n$ min_val    <dbl> -2.834123\n$ max_val    <dbl> 3.336879\n$ skewness   <dbl> 0.03115634\n$ kurtosis   <dbl> 2.772527\n$ range      <dbl> 6.171002\n$ iqr        <dbl> 1.447849\n$ variance   <dbl> 1.041057\n$ ci_low     <dbl> -1.873091\n$ ci_high    <dbl> 1.868382\n```\n:::\n\n```{.r .cell-code}\ntidy_distribution_summary_tbl(tn, sim_number) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5\nColumns: 13\n$ sim_number <fct> 1, 2, 3, 4, 5\n$ mean_val   <dbl> -0.09684833, -0.13886169, 0.23257556, -0.32487778, 0.103192…\n$ median_val <dbl> -0.1358051, -0.2550682, 0.3069263, -0.1334922, 0.2898412\n$ std_val    <dbl> 1.1231699, 1.0954659, 0.8902380, 0.9270631, 0.9919932\n$ min_val    <dbl> -2.834123, -2.340575, -1.963215, -2.396105, -1.827744\n$ max_val    <dbl> 3.336879, 1.987640, 2.066451, 1.526231, 2.093211\n$ skewness   <dbl> 0.352771389, 0.132723834, -0.282840344, -0.191853538, 0.006…\n$ kurtosis   <dbl> 3.652828, 2.169309, 2.749967, 2.332081, 2.409223\n$ range      <dbl> 6.171002, 4.328215, 4.029666, 3.922336, 3.920956\n$ iqr        <dbl> 1.5256470, 1.6335396, 0.9368546, 1.3968485, 1.3469671\n$ variance   <dbl> 1.2615106, 1.2000455, 0.7925236, 0.8594460, 0.9840505\n$ ci_low     <dbl> -1.834548, -1.844197, -1.428713, -2.193065, -1.626225\n$ ci_high    <dbl> 1.860755, 1.858576, 1.644153, 1.090125, 1.976371\n```\n:::\n\n```{.r .cell-code}\ndata_tbl <- tidy_combine_distributions(tn, tb)\n\ntidy_distribution_summary_tbl(data_tbl) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 12\n$ mean_val   <dbl> 0.2413251\n$ median_val <dbl> 0.3687409\n$ std_val    <dbl> 0.8030476\n$ min_val    <dbl> -2.834123\n$ max_val    <dbl> 3.336879\n$ skewness   <dbl> -0.7608556\n$ kurtosis   <dbl> 4.248452\n$ range      <dbl> 6.171002\n$ iqr        <dbl> 0.7835065\n$ variance   <dbl> 0.6448855\n$ ci_low     <dbl> -1.695096\n$ ci_high    <dbl> 1.585147\n```\n:::\n\n```{.r .cell-code}\ntidy_distribution_summary_tbl(data_tbl, dist_type) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2\nColumns: 13\n$ dist_type  <fct> \"Gaussian c(0, 1)\", \"Beta c(1, 1, 0)\"\n$ mean_val   <dbl> -0.0449640, 0.5276142\n$ median_val <dbl> -0.0266966, 0.5301650\n$ std_val    <dbl> 1.0203220, 0.2944871\n$ min_val    <dbl> -2.834123047, 0.001236575\n$ max_val    <dbl> 3.3368786, 0.9992146\n$ skewness   <dbl> 0.03115634, -0.08744219\n$ kurtosis   <dbl> 2.772527, 1.751248\n$ range      <dbl> 6.171002, 0.997978\n$ iqr        <dbl> 1.447849, 0.511105\n$ variance   <dbl> 1.04105699, 0.08672268\n$ ci_low     <dbl> -1.87309115, 0.04220623\n$ ci_high    <dbl> 1.8683817, 0.9771898\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}