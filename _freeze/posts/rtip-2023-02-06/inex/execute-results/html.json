{
  "hash": "4603f888cbd5f5fe93046e7c1b8e142b",
  "result": {
    "markdown": "---\ntitle: \"Cumulative Measurement Functions with {TidyDensity}\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-02-06\"\ncategories: [code, rtip, tidydensity]\n---\n\n\n# Introduction\n\nIf you're looking for an easy-to-use package to calculate cumulative statistics in R, you may want to check out the TidyDensity package. This package offers several functions to calculate cumulative measurements, including mean, median, standard deviation, variance, skewness, kurtosis, harmonic mean, and geometric mean.\n\n*  `cgmean()`: Cumulative Geometric Mean\n\nThe `cgmean()` function calculates the cumulative geometric mean of a set of values. This is the nth root of the product of the first n elements of the set. It's a useful measurement for sets of values that are multiplied together, such as growth rates.\n\n*  `chmean()`: Cumulative Harmonic Mean\n\nThe `chmean()` function calculates the cumulative harmonic mean of a set of values. This is the inverse of the arithmetic mean of the reciprocals of the values. It's commonly used for sets of values that represent rates, such as speeds.\n\n*  `ckurtosis()`: Cumulative Kurtosis\n\nThe `ckurtosis()` function calculates the cumulative kurtosis of a set of values. Kurtosis is a measure of the peakedness of a distribution, relative to a normal distribution. The cumulative kurtosis calculates the kurtosis of a set of values up to a specific point in the set.\n\n*  `cmean()`: Cumulative Mean\n\nThe `cmean()` function calculates the cumulative mean of a set of values. It's a measure of the average of the values up to a specific point in the set.\n\n*  `cmedian()`: Cumulative Median\n\nThe `cmedian()` function calculates the cumulative median of a set of values. It's the value that separates the lower half of the set from the upper half, up to a specific point in the set.\n\n*  `csd()`: Cumulative Standard Deviation\n\nThe `csd()` function calculates the cumulative standard deviation of a set of values. Standard deviation is a measure of the spread of values in a set. The cumulative standard deviation calculates the standard deviation up to a specific point in the set.\n\n*  `cskewness()`: Cumulative Skewness\n\nThe `cskewness()` function calculates the cumulative skewness of a set of values. Skewness is a measure of the asymmetry of a distribution. The cumulative skewness calculates the skewness up to a specific point in the set.\n\n*  `cvar()`: Cumulative Variance\n\nThe `cvar()` function calculates the cumulative variance of a set of values. Variance is a measure of the spread of values in a set. The cumulative variance calculates the variance up to a specific point in the set.\n\nIn conclusion, the [`{TidyDensity}`](https://www.spsanderson.com/TidyDensity/) package offers several functions for calculating cumulative statistics, including mean, median, standard deviation, variance, skewness, kurtosis, harmonic mean, and geometric mean. These functions make it easy to calculate cumulative statistics for sets of values in R.\n\n# Functions\n\nAll of the functions perform work strictly on a vector. Because of this I will not go over the function calls separately because they all follow the vectorized for of `fun(.x)` where __`.x`__ is the argument passed to the cumulative function.\n\n# Examples\n\nHere I will go over some examples of each function use the _AirPassengers_ data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(TidyDensity)\n\nv <- AirPassengers\n```\n:::\n\n\nLet's start at the top.\n\nCumulative Geometric Mean:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cgmean(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 112.0000 114.9609 120.3810 122.4802 122.1827 124.2311\n```\n:::\n\n```{.r .cell-code}\ntail(cgmean(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 249.6135 251.1999 252.4577 253.5305 254.2952 255.2328\n```\n:::\n\n```{.r .cell-code}\nplot(cgmean(v), type = \"l\")\n```\n\n::: {.cell-output-display}\n![](inex_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nCumulative Harmonic Mean:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(chmean(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 112.00000  57.46087  40.03378  30.55222  24.39304  20.66000\n```\n:::\n\n```{.r .cell-code}\ntail(chmean(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.636832 1.632423 1.627194 1.621471 1.614757 1.608744\n```\n:::\n\n```{.r .cell-code}\nplot(chmean(v), type = \"l\")\n```\n\n::: {.cell-output-display}\n![](inex_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nCumulative Kurtosis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ckurtosis(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]      NaN 1.000000 1.500000 1.315839 1.597316 1.597850\n```\n:::\n\n```{.r .cell-code}\ntail(ckurtosis(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.668951 2.795314 2.733117 2.674195 2.649894 2.606228\n```\n:::\n\n```{.r .cell-code}\nplot(ckurtosis(v), type = \"l\")\n```\n\n::: {.cell-output-display}\n![](inex_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nCumulative Mean:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cmean(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 112.0000 115.0000 120.6667 122.7500 122.4000 124.5000\n```\n:::\n\n```{.r .cell-code}\ntail(cmean(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 273.1367 275.5143 277.1631 278.4577 279.2378 280.2986\n```\n:::\n\n```{.r .cell-code}\nplot(cmean(v), type = \"l\")\n```\n\n::: {.cell-output-display}\n![](inex_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nCumulative Median:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cmedian(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 112.0 115.0 118.0 123.5 121.0 125.0\n```\n:::\n\n```{.r .cell-code}\ntail(cmedian(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 259.0 261.5 264.0 264.0 264.0 265.5\n```\n:::\n\n```{.r .cell-code}\nplot(cmedian(v), type = \"l\")\n```\n\n::: {.cell-output-display}\n![](inex_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nCumulative Standard Deviation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(csd(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]        NA  4.242641 10.263203  9.358597  8.142481  8.916277\n```\n:::\n\n```{.r .cell-code}\ntail(csd(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 115.0074 117.9956 119.1924 119.7668 119.7083 119.9663\n```\n:::\n\n```{.r .cell-code}\nplot(csd(v), type = \"l\")\n```\n\n::: {.cell-output-display}\n![](inex_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nCumulative Skewness:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cskewness(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]         NaN  0.00000000  0.44510927 -0.14739157 -0.02100016 -0.18544758\n```\n:::\n\n```{.r .cell-code}\ntail(cskewness(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5936970 0.6471651 0.6349071 0.6145579 0.5972102 0.5770682\n```\n:::\n\n```{.r .cell-code}\nplot(cskewness(v), type = \"l\")\n```\n\n::: {.cell-output-display}\n![](inex_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nCumulative Variance:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cvar(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]        NA  18.00000 105.33333  87.58333  66.30000  79.50000\n```\n:::\n\n```{.r .cell-code}\ntail(cvar(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13226.70 13922.96 14206.84 14344.08 14330.07 14391.92\n```\n:::\n\n```{.r .cell-code}\nplot(cvar(v), type = \"l\")\n```\n\n::: {.cell-output-display}\n![](inex_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nVoila!",
    "supporting": [
      "inex_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}