{
  "hash": "b925f4035f72b8319edd808c5cbf7f93",
  "result": {
    "markdown": "---\ntitle: \"Data Preppers with {healthyR.ai}\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-02-24\"\ncategories: [code, rtip, healthyrai, preprocessor]\n---\n\n\n# Introduction\n\nThere are many different methods that one can choose from in order to model their data. This brings with it a fundamental issue of how to prepare your data for the specified algorithm. With the [`{healthyR.ai}`] package there are many different functions in this family that will help solve this issue for some algorithms but of course not all, that would be utterly exhausting for me to do on my own.\n\nIn __healthyR.ai__ I call these _Data Preppers_ because they prep the data you supply to the format necessary for the algorithm to function properly.\n\nLet's take a look at one.\n\n# Function\n\nHere we are going to use the `hai_c50_data_prepper(.data, .recipe_formula)` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhai_c50_data_prepper(.data, .recipe_formula)\n```\n:::\n\n\nHere are the simple arguments:\n\n*  `.data` - The data that you are passing to the function. Can be any type of data that is accepted by the data parameter of the recipes::recipe() function.\n*  `.recipe_formula` - The formula that is going to be passed. For example if you are using the iris data then the formula would most likely be something like `Species ~` .\n\n\n# Example\n\nHere is a small example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(healthyR.ai)\n\nhai_c50_data_prepper(.data = Titanic, .recipe_formula = Survived ~ .)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n   outcome          1\n predictor          4\n\nOperations:\n\nFactor variables from tidyselect::vars_select_helpers$where(is.charac...\n```\n:::\n\n```{.r .cell-code}\nrec_obj <- hai_c50_data_prepper(Titanic, Survived ~ .)\nget_juiced_data(rec_obj)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32 × 5\n   Class Sex    Age       n Survived\n   <fct> <fct>  <fct> <dbl> <fct>   \n 1 1st   Male   Child     0 No      \n 2 2nd   Male   Child     0 No      \n 3 3rd   Male   Child    35 No      \n 4 Crew  Male   Child     0 No      \n 5 1st   Female Child     0 No      \n 6 2nd   Female Child     0 No      \n 7 3rd   Female Child    17 No      \n 8 Crew  Female Child     0 No      \n 9 1st   Male   Adult   118 No      \n10 2nd   Male   Adult   154 No      \n# … with 22 more rows\n```\n:::\n:::\n\n\nHere are the rest of the data-preppers at the time of writing this article:\n\n*  [hai_c50_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_c50_data_prepper.html)\n*  [hai_cubist_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_cubist_data_prepper.html)\n*  [hai_earth_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_earth_data_prepper.html)\n*  [hai_glmnet_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_glmnet_data_prepper.html)\n*  [hai_knn_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html)\n*  [hai_ranger_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_ranger_data_prepper.html)\n*  [hai_svm_poly_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_svm_poly_data_prepper.html)\n*  [hai_svm_rbf_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_svm_rbf_data_prepper.html)\n*  [hai_xgboost_data_prepper()](https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html)\n\nVoila!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}