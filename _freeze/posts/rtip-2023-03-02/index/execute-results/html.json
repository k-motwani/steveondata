{
  "hash": "753a5d42340da5419cd116acdcaac967",
  "result": {
    "markdown": "---\ntitle: \"Forecasting Timeseries in a list with R\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-03-02\"\ncategories: [code, rtip, purrr, timeseries]\n---\n\n\n# Introduction\n\nIn this article, we will discuss how to perform an ARIMA forecast on nested data or data that is in a list using R programming language. This is a common scenario in which we have data stored in a list format, where each element of the list corresponds to a different time series. We will use the R programming language, specifically the \"forecast\" package, to perform the ARIMA forecast.\n\nFirst, we will need to load the required packages and data. For this example, we will use the \"AirPassengers\" dataset which is included in the \"datasets\" package. This dataset contains the number of international airline passengers per month from 1949 to 1960. We will then create a list containing subsets of this data for each year.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forecast)\n\nyearly_data <- split(AirPassengers, f = ceiling(seq_along(AirPassengers)/12))\n\nyearly_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n [1] 112 118 132 129 121 135 148 148 136 119 104 118\n\n$`2`\n [1] 115 126 141 135 125 149 170 170 158 133 114 140\n\n$`3`\n [1] 145 150 178 163 172 178 199 199 184 162 146 166\n\n$`4`\n [1] 171 180 193 181 183 218 230 242 209 191 172 194\n\n$`5`\n [1] 196 196 236 235 229 243 264 272 237 211 180 201\n\n$`6`\n [1] 204 188 235 227 234 264 302 293 259 229 203 229\n\n$`7`\n [1] 242 233 267 269 270 315 364 347 312 274 237 278\n\n$`8`\n [1] 284 277 317 313 318 374 413 405 355 306 271 306\n\n$`9`\n [1] 315 301 356 348 355 422 465 467 404 347 305 336\n\n$`10`\n [1] 340 318 362 348 363 435 491 505 404 359 310 337\n\n$`11`\n [1] 360 342 406 396 420 472 548 559 463 407 362 405\n\n$`12`\n [1] 417 391 419 461 472 535 622 606 508 461 390 432\n```\n:::\n:::\n\n\nIn the above code, we use the \"split\" function to split the data into yearly subsets. The \"f\" parameter is used to specify the grouping variable which, in this case, is the sequence of numbers from 1 to the length of the dataset divided by 12, rounded up to the nearest integer. This creates a list of 12 elements, one for each year.\n\n# Function\n\nNext, we will define a function that takes a single element of the list, fits an ARIMA model, and generates a forecast.\n\n\n::: {.cell}\n\n```{.r .cell-code}\narima_forecast <- function(x){\n  fit <- auto.arima(x)\n  forecast(fit)\n}\n```\n:::\n\n\nThis function takes a single argument \"x\" which is one of the elements of the list. We use the \"auto.arima\" function from the \"forecast\" package to fit an ARIMA model to the data. The \"forecast\" function is then used to generate a forecast based on this model.\n\n# Example\n\nWe can now use the \"lapply\" function to apply this function to each element of the list.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nforecasts <- lapply(yearly_data, arima_forecast)\n```\n:::\n\n\nThe \"lapply\" function applies the \"arima_forecast\" function to each element of the \"yearly_data\" list and returns a list of forecasts.\n\nFinally, we can extract and plot the forecasts for a specific year.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(forecasts[[5]])\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nNow lets take a look at them all.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2,1))\n\npurrr::map(forecasts, plot)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-6.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n$`1`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 132.2237 126.4744 126.4744 126.4744 126.4744 126.4744 126.4744 126.4744\n [9] 126.4744 126.4744\n\n$`1`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 120.1608 113.7751\n14 110.0828 101.4056\n15 110.0828 101.4056\n16 110.0828 101.4056\n17 110.0828 101.4056\n18 110.0828 101.4056\n19 110.0828 101.4056\n20 110.0828 101.4056\n21 110.0828 101.4056\n22 110.0828 101.4056\n\n$`1`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 144.2865 150.6722\n14 142.8660 151.5432\n15 142.8660 151.5432\n16 142.8660 151.5432\n17 142.8660 151.5432\n18 142.8660 151.5432\n19 142.8660 151.5432\n20 142.8660 151.5432\n21 142.8660 151.5432\n22 142.8660 151.5432\n\n\n$`2`\n$`2`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 153.8708 139.5919 139.5919 139.5919 139.5919 139.5919 139.5919 139.5919\n [9] 139.5919 139.5919\n\n$`2`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 136.3778 127.1175\n14 115.8789 103.3260\n15 115.8789 103.3260\n16 115.8789 103.3260\n17 115.8789 103.3260\n18 115.8789 103.3260\n19 115.8789 103.3260\n20 115.8789 103.3260\n21 115.8789 103.3260\n22 115.8789 103.3260\n\n$`2`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 171.3638 180.6240\n14 163.3048 175.8577\n15 163.3048 175.8577\n16 163.3048 175.8577\n17 163.3048 175.8577\n18 163.3048 175.8577\n19 163.3048 175.8577\n20 163.3048 175.8577\n21 163.3048 175.8577\n22 163.3048 175.8577\n\n\n$`3`\n$`3`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 173.6413 170.0479 170.0479 170.0479 170.0479 170.0479 170.0479 170.0479\n [9] 170.0479 170.0479\n\n$`3`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 153.5404 142.8995\n14 146.6452 134.2565\n15 146.6452 134.2565\n16 146.6452 134.2565\n17 146.6452 134.2565\n18 146.6452 134.2565\n19 146.6452 134.2565\n20 146.6452 134.2565\n21 146.6452 134.2565\n22 146.6452 134.2565\n\n$`3`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 193.7423 204.3831\n14 193.4506 205.8393\n15 193.4506 205.8393\n16 193.4506 205.8393\n17 193.4506 205.8393\n18 193.4506 205.8393\n19 193.4506 205.8393\n20 193.4506 205.8393\n21 193.4506 205.8393\n22 193.4506 205.8393\n\n\n$`4`\n$`4`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 194.0074 194.0119 194.0147 194.0164 194.0174 194.0180 194.0184 194.0186\n [9] 194.0187 194.0188\n\n$`4`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 169.7973 156.9812\n14 165.6741 150.6730\n15 164.2944 148.5614\n16 163.8005 147.8051\n17 163.6201 147.5288\n18 163.5539 147.4272\n19 163.5296 147.3898\n20 163.5207 147.3761\n21 163.5175 147.3711\n22 163.5163 147.3692\n\n$`4`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 218.2176 231.0336\n14 222.3497 237.3509\n15 223.7350 239.4680\n16 224.2322 240.2276\n17 224.4146 240.5059\n18 224.4821 240.6088\n19 224.5071 240.6469\n20 224.5165 240.6611\n21 224.5200 240.6664\n22 224.5213 240.6684\n\n\n$`5`\n$`5`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 206.8929 210.7977 213.3851 215.0996 216.2356 216.9884 217.4872 217.8178\n [9] 218.0368 218.1819\n\n$`5`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 178.2600 163.1026\n14 176.4492 158.2662\n15 176.8082 157.4455\n16 177.5860 157.7275\n17 178.3181 158.2458\n18 178.8949 158.7294\n19 179.3167 159.1104\n20 179.6134 159.3893\n21 179.8176 159.5856\n22 179.9562 159.7208\n\n$`5`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 235.5258 250.6831\n14 245.1461 263.3291\n15 249.9620 269.3246\n16 252.6131 272.4716\n17 254.1531 274.2255\n18 255.0819 275.2475\n19 255.6578 275.8641\n20 256.0221 276.2462\n21 256.2559 276.4879\n22 256.4076 276.6430\n\n\n$`6`\n$`6`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 245.0709 240.0400 240.0400 240.0400 240.0400 240.0400 240.0400 240.0400\n [9] 240.0400 240.0400\n\n$`6`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 212.6687 195.5160\n14 196.9893 174.1996\n15 196.9893 174.1996\n16 196.9893 174.1996\n17 196.9893 174.1996\n18 196.9893 174.1996\n19 196.9893 174.1996\n20 196.9893 174.1996\n21 196.9893 174.1996\n22 196.9893 174.1996\n\n$`6`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 277.4731 294.6259\n14 283.0907 305.8803\n15 283.0907 305.8803\n16 283.0907 305.8803\n17 283.0907 305.8803\n18 283.0907 305.8803\n19 283.0907 305.8803\n20 283.0907 305.8803\n21 283.0907 305.8803\n22 283.0907 305.8803\n\n\n$`7`\n$`7`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 278.0001 278.0001 278.0002 278.0002 278.0002 278.0002 278.0002 278.0002\n [9] 278.0002 278.0002\n\n$`7`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 236.8903 215.1282\n14 228.5879 202.4307\n15 225.3145 197.4243\n16 223.9224 195.2953\n17 223.3147 194.3659\n18 223.0466 193.9559\n19 222.9278 193.7742\n20 222.8751 193.6936\n21 222.8516 193.6577\n22 222.8412 193.6418\n\n$`7`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 319.1098 340.8720\n14 327.4123 353.5695\n15 330.6859 358.5760\n16 332.0780 360.7051\n17 332.6857 361.6345\n18 332.9538 362.0445\n19 333.0726 362.2262\n20 333.1254 362.3069\n21 333.1488 362.3427\n22 333.1592 362.3587\n\n\n$`8`\n$`8`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 349.0540 373.2678 369.7906 348.0549 325.4487 315.1915 319.8599 332.7645\n [9] 344.2812 348.1670\n\n$`8`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 315.6225 297.9249\n14 322.1404 295.0752\n15 314.7795 285.6584\n16 292.8344 263.6024\n17 266.5768 235.4118\n18 252.9822 220.0505\n19 257.0954 223.8699\n20 269.7958 236.4622\n21 280.1875 246.2583\n22 283.2781 248.9280\n\n$`8`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 382.4855 400.1831\n14 424.3952 451.4604\n15 424.8018 453.9229\n16 403.2754 432.5074\n17 384.3206 415.4855\n18 377.4009 410.3325\n19 382.6243 415.8498\n20 395.7332 429.0668\n21 408.3750 442.3042\n22 413.0559 447.4061\n\n\n$`9`\n$`9`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 378.9729 406.5723 408.7509 392.6048 372.9147 361.5778 362.0569 370.2398\n [9] 379.1516 383.6927\n\n$`9`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 336.2126 313.5766\n14 342.0963 307.9648\n15 339.3660 302.6358\n16 323.1265 286.3469\n17 300.2319 261.7560\n18 285.7363 245.5882\n19 285.5516 245.0521\n20 293.6654 253.1294\n21 301.8675 260.9558\n22 305.8147 264.5885\n\n$`9`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 421.7333 444.3692\n14 471.0482 505.1797\n15 478.1359 514.8660\n16 462.0831 498.8627\n17 445.5975 484.0734\n18 437.4193 477.5674\n19 438.5622 479.0617\n20 446.8142 487.3503\n21 456.4356 497.3473\n22 461.5707 502.7968\n\n\n$`10`\n$`10`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 391.9249 381.5489 381.5489 381.5489 381.5489 381.5489 381.5489 381.5489\n [9] 381.5489 381.5489\n\n$`10`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 331.8921 300.1126\n14 304.6704 263.9734\n15 304.6704 263.9734\n16 304.6704 263.9734\n17 304.6704 263.9734\n18 304.6704 263.9734\n19 304.6704 263.9734\n20 304.6704 263.9734\n21 304.6704 263.9734\n22 304.6704 263.9734\n\n$`10`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 451.9577 483.7372\n14 458.4274 499.1244\n15 458.4274 499.1244\n16 458.4274 499.1244\n17 458.4274 499.1244\n18 458.4274 499.1244\n19 458.4274 499.1244\n20 458.4274 499.1244\n21 458.4274 499.1244\n22 458.4274 499.1244\n\n\n$`11`\n$`11`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 408.4203 410.7762 412.3990 413.5168 414.2868 414.8171 415.1824 415.4340\n [9] 415.6074 415.7268\n\n$`11`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 342.2241 307.1820\n14 330.3960 287.8452\n15 326.1006 280.4170\n16 324.5481 277.4509\n17 324.0788 276.3255\n18 324.0270 275.9656\n19 324.1175 275.9106\n20 324.2390 275.9632\n21 324.3506 276.0422\n22 324.4407 276.1168\n\n$`11`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 474.6165 509.6586\n14 491.1565 533.7072\n15 498.6974 544.3810\n16 502.4855 549.5827\n17 504.4948 552.2480\n18 505.6072 553.6686\n19 506.2474 554.4543\n20 506.6291 554.9049\n21 506.8641 555.1726\n22 507.0128 555.3367\n\n\n$`12`\n$`12`$mean\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n [1] 502.9998 476.0531 476.0531 476.0531 476.0531 476.0531 476.0531 476.0531\n [9] 476.0531 476.0531\n\n$`12`$lower\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 437.2687 402.4728\n14 387.1722 340.1214\n15 387.1722 340.1214\n16 387.1722 340.1214\n17 387.1722 340.1214\n18 387.1722 340.1214\n19 387.1722 340.1214\n20 387.1722 340.1214\n21 387.1722 340.1214\n22 387.1722 340.1214\n\n$`12`$upper\nTime Series:\nStart = 13 \nEnd = 22 \nFrequency = 1 \n        80%      95%\n13 568.7308 603.5267\n14 564.9341 611.9848\n15 564.9341 611.9848\n16 564.9341 611.9848\n17 564.9341 611.9848\n18 564.9341 611.9848\n19 564.9341 611.9848\n20 564.9341 611.9848\n21 564.9341 611.9848\n22 564.9341 611.9848\n```\n:::\n\n```{.r .cell-code}\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nnull device \n          1 \n```\n:::\n:::\n\n\nVoila!",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}