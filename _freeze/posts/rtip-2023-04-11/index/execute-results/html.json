{
  "hash": "89c9b68f215469c4b86f0df63fad6e6d",
  "result": {
    "markdown": "---\ntitle: \"Styling Tables for Excel with {styledTables}\"\nauthor: \"Steven P. Sanderson II, MPH\"\ndate: \"2023-04-11\"\ncategories: [rtip, excel]\n---\n\n\n# Introduction\n\nIn the analytics realm whether some like it or not, Excel is huge and maybe King. This is due to the fact of the shear volume of people using it. Microsoft has positioned Excel well in this situation, but, that does not mean we cannot extend Excel with R. In fact we can do just that. I will be focusing new posts on this topic as I gear up to collaborate on a new project focusing on this issue.\n\nFor this post we are going to discuss the `{styledTable}` R package that can be installed from `GitHub`. Here are a few ways in which the **styledTable** package can help.\n\n-   Creating visually appealing tables: Excel is a powerful tool for data analysis and visualization, but it can be limited in terms of formatting options. With the 'styledtable' package, users can create tables with a wide range of formatting options, such as bold text, colored cells, and borders. This can make the tables more visually appealing and easier to read, which can be helpful when presenting data to others.\n\n-   Automating data analysis: The 'styledtable' package can be used in combination with other R packages to automate data analysis tasks. For example, users can use R to clean and transform data, and then use the 'styledtable' package to create formatted tables for reporting or sharing with others. This can save time and reduce errors associated with manual data entry and formatting.\n\n-   Integrating with other R packages: R has a large ecosystem of packages for data analysis, visualization, and reporting. The 'styledtable' package can be used in conjunction with other R packages to extend the functionality of Excel. For example, users can use R to perform statistical analysis on data, and then use the 'styledtable' package to create formatted tables for reporting the results in Excel.\n\n-   Facilitating collaboration: Sharing Excel files can be challenging when working with multiple users or teams. With the 'styledtable' package, users can export styled tables to Excel format, which can be shared with others. This can facilitate collaboration and streamline the process of sharing data and analysis results.\n\nThe `styledtable` package in R, which allows users to create styled tables in R Markdown documents. The package can help to create tables with various formatting options such as bold text, colored cells, and borders. It also has functionality on how to port these to Excel itself.\n\nThe package offers a simple syntax that allows users to specify formatting options using HTML and CSS. The resulting table can be customized by changing the CSS file or by using the 'styler' function to apply custom styles to individual cells or rows.\n\nOverall, the `styledtable` package provides a useful tool for creating visually appealing tables in R Markdown documents, and the ability to export these tables to Excel format makes it easier to share and analyze data with others.\n\n# Examples\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install development version from GitHub\ndevtools::install_github('R-package/styledTables', build_vignettes = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(styledTables)\nlibrary(dplyr)\nlibrary(xlsx)\n\ndf <- mtcars |>\n  select(mpg, cyl, am)\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl am\nMazda RX4           21.0   6  1\nMazda RX4 Wag       21.0   6  1\nDatsun 710          22.8   4  1\nHornet 4 Drive      21.4   6  0\nHornet Sportabout   18.7   8  0\nValiant             18.1   6  0\nDuster 360          14.3   8  0\nMerc 240D           24.4   4  0\nMerc 230            22.8   4  0\nMerc 280            19.2   6  0\nMerc 280C           17.8   6  0\nMerc 450SE          16.4   8  0\nMerc 450SL          17.3   8  0\nMerc 450SLC         15.2   8  0\nCadillac Fleetwood  10.4   8  0\nLincoln Continental 10.4   8  0\nChrysler Imperial   14.7   8  0\nFiat 128            32.4   4  1\nHonda Civic         30.4   4  1\nToyota Corolla      33.9   4  1\nToyota Corona       21.5   4  0\nDodge Challenger    15.5   8  0\nAMC Javelin         15.2   8  0\nCamaro Z28          13.3   8  0\nPontiac Firebird    19.2   8  0\nFiat X1-9           27.3   4  1\nPorsche 914-2       26.0   4  1\nLotus Europa        30.4   4  1\nFord Pantera L      15.8   8  1\nFerrari Dino        19.7   6  1\nMaserati Bora       15.0   8  1\nVolvo 142E          21.4   4  1\n```\n:::\n:::\n\n\nOk, now we have our data that we are going to work with, so let's check out some features.\n\nFirst we will just apply the `styled_table()` function and inspect the output.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstl_df <- df |>\n  styled_table(keep_header = TRUE)\n\nclass(stl_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"StyledTable\"\nattr(,\"package\")\n[1] \"styledTables\"\n```\n:::\n:::\n\n\nNow let's apply some simple formatting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstl_df <- stl_df |>\n  set_border_position(\"all\", row_id = 1) |>\n  set_bold(row_id = 1) |>\n  set_fill_color(\"#00FF00\", col_id = 2, condition = X == \"6\")\n```\n:::\n\n\nWrite out to excel.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb <- createWorkbook()\nsheet <- createSheet(wb, \"mtcars_tbl\")\n\n# Insert table\nwrite_excel(sheet, stl_df)\n\n# Save workbook\nsaveWorkbook(wb, \"test.xlsx\")\n```\n:::\n\n\nHere is the test output:\n\n![Test Output](example.JPG)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}