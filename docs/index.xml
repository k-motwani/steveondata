<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Steve's Data Tips and Tricks</title>
<link>https://www.spsanderson.com/steveondata/index.html</link>
<atom:link href="https://www.spsanderson.com/steveondata/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.1.189</generator>
<lastBuildDate>Tue, 06 Dec 2022 05:00:00 GMT</lastBuildDate>
<item>
  <title>Z-Score Scaling Step Recipe with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-12-06/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Sometimes one may find it useful or necessary to scale their data during a modeling or analysis phase. One of these such transformations is the z-score scaling.</p>
<p>This is done simply by performing the below transform where x is simply some numeric vector:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20z_x%20=%20(x%20-%20mu(x))/sd(x)%20"></p>
<p>Let’s take a look at the <code>recipe</code> function called <a href="https://www.spsanderson.com/healthyR.ai/reference/step_hai_scale_zscore.html"><code>step_hai_scale_zscore</code></a></p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full function call:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">step_hai_scale_zscore</span>(</span>
<span id="cb1-2">  recipe,</span>
<span id="cb1-3">  ...,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">role =</span> <span class="st" style="color: #20794D;">"predictor"</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">trained =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">columns =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">skip =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">id =</span> <span class="fu" style="color: #4758AB;">rand_id</span>(<span class="st" style="color: #20794D;">"hai_scale_zscore"</span>)</span>
<span id="cb1-9">)</span></code></pre></div>
</div>
<p>Here are the arguments to the function.</p>
<ul>
<li><code>recipe</code> - A recipe object. The step will be added to the sequence of operations for this recipe.</li>
<li><code>...</code> - One or more selector functions to choose which variables that will be used to create the new variables. The selected variables should have class numeric</li>
<li><code>role</code> - For model terms created by this step, what analysis role should they be assigned?. By default, the function assumes that the new variable columns created by the original variables will be used as predictors in a model.</li>
<li><code>trained</code> - A logical to indicate if the quantities for preprocessing have been estimated.</li>
<li><code>columns</code> - A character string of variables that will be used as inputs. This field is a placeholder and will be populated once recipes::prep() is used.</li>
<li><code>skip</code> - A logical. Should the step be skipped when the recipe is baked by bake.recipe()? While all operations are baked when prep.recipe() is run, some operations may not be able to be conducted on new data (e.g.&nbsp;processing the outcome variable(s)). Care should be taken when using skip = TRUE as it may affect the computations for subsequent operations.</li>
<li><code>id</code> - A character string that is unique to this step to identify it.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Here is a simple example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">library</span>(recipes)</span>
<span id="cb2-4"></span>
<span id="cb2-5">df <span class="ot" style="color: #003B4F;">&lt;-</span> iris <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">select</span>(Species, Sepal.Length)</span>
<span id="cb2-8"></span>
<span id="cb2-9">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">recipe</span>(Sepal.Length <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> df) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;">step_hai_scale_zscore</span>(Sepal.Length)</span>
<span id="cb2-11"></span>
<span id="cb2-12">rec_obj</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Recipe

Inputs:

      role #variables
   outcome          1
 predictor          1

Operations:

Zero-One Scale Transformation on Sepal.Length</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">summary</span>(rec_obj)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2 × 4
  variable     type      role      source  
  &lt;chr&gt;        &lt;list&gt;    &lt;chr&gt;     &lt;chr&gt;   
1 Species      &lt;chr [3]&gt; predictor original
2 Sepal.Length &lt;chr [2]&gt; outcome   original</code></pre>
</div>
</div>
<p>Now let’s take a look at the differences.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">library</span>(plotly)</span>
<span id="cb6-3"></span>
<span id="cb6-4">df_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">get_juiced_data</span>(rec_obj)</span>
<span id="cb6-5"></span>
<span id="cb6-6">df_tbl <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb6-7">  purrr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">set_names</span>(<span class="st" style="color: #20794D;">"Species"</span>,<span class="st" style="color: #20794D;">"Sepal_Length"</span>,<span class="st" style="color: #20794D;">"Scaled_Sepal_Length"</span>) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Sepal_Length)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;">geom_histogram</span>(<span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"lightgreen"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;">geom_histogram</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> Scaled_Sepal_Length), </span>
<span id="cb6-11">                 <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"steelblue"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-12">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb6-14">    <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Count"</span>,</span>
<span id="cb6-15">    <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Sepal Length"</span>,</span>
<span id="cb6-16">    <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Speal.Length: Original vs. Z-Score Scaled"</span>,</span>
<span id="cb6-17">    <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Original (Light Green) Scaled (Steelblue)"</span></span>
<span id="cb6-18">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2022-12-06/index_files/figure-html/example2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <category>recipes</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-12-06/index.html</guid>
  <pubDate>Tue, 06 Dec 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Naming Items in a List with {purrr}, {dplyr}, or {healthyR}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-12-05/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Many times when we are working with a data set we will want to break it up into groups and place them into a list and work with them in that fashion. With this it can be useful to the elements of the list named by the column that the data was split upon. Let’s use the iris set as an example where we split on <code>Species</code>.</p>
<p>There are two main functions that we will use in this scenario, namely <a href="https://purrr.tidyverse.org/reference/map.html"><code>purrr:map()</code></a> and <a href="https://dplyr.tidyverse.org/reference/group_split.html"><code>dplyr::group_split()</code></a>, you could also use the <code>split</code> function from base <code>r</code> for this.</p>
<p>We will also go over how simple this is using the <a href="https://www.spsanderson.com/healthyr"><code>{healthyR}</code></a> package. Let’s look at the function from <code>{healthyR}</code></p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">named_item_list</span>(.data, .group_col)</span></code></pre></div>
</div>
<p>There are only two arguments to supply.</p>
<ul>
<li><code>.data</code> - The data.frame/tibble.</li>
<li><code>.group_col</code> - The column that contains the groupings.</li>
</ul>
<p>That’s it.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s jump into it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(purrr)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"></span>
<span id="cb2-4">data_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> iris</span>
<span id="cb2-5"></span>
<span id="cb2-6">data_tbl_list <span class="ot" style="color: #003B4F;">&lt;-</span> data_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">group_split</span>(Species)</span>
<span id="cb2-8"></span>
<span id="cb2-9">data_tbl_list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;list_of&lt;
  tbl_df&lt;
    Sepal.Length: double
    Sepal.Width : double
    Petal.Length: double
    Petal.Width : double
    Species     : factor&lt;fb977&gt;
  &gt;
&gt;[3]&gt;
[[1]]
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  
 1          5.1         3.5          1.4         0.2 setosa 
 2          4.9         3            1.4         0.2 setosa 
 3          4.7         3.2          1.3         0.2 setosa 
 4          4.6         3.1          1.5         0.2 setosa 
 5          5           3.6          1.4         0.2 setosa 
 6          5.4         3.9          1.7         0.4 setosa 
 7          4.6         3.4          1.4         0.3 setosa 
 8          5           3.4          1.5         0.2 setosa 
 9          4.4         2.9          1.4         0.2 setosa 
10          4.9         3.1          1.5         0.1 setosa 
# … with 40 more rows

[[2]]
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species   
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;     
 1          7           3.2          4.7         1.4 versicolor
 2          6.4         3.2          4.5         1.5 versicolor
 3          6.9         3.1          4.9         1.5 versicolor
 4          5.5         2.3          4           1.3 versicolor
 5          6.5         2.8          4.6         1.5 versicolor
 6          5.7         2.8          4.5         1.3 versicolor
 7          6.3         3.3          4.7         1.6 versicolor
 8          4.9         2.4          3.3         1   versicolor
 9          6.6         2.9          4.6         1.3 versicolor
10          5.2         2.7          3.9         1.4 versicolor
# … with 40 more rows

[[3]]
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species  
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;    
 1          6.3         3.3          6           2.5 virginica
 2          5.8         2.7          5.1         1.9 virginica
 3          7.1         3            5.9         2.1 virginica
 4          6.3         2.9          5.6         1.8 virginica
 5          6.5         3            5.8         2.2 virginica
 6          7.6         3            6.6         2.1 virginica
 7          4.9         2.5          4.5         1.7 virginica
 8          7.3         2.9          6.3         1.8 virginica
 9          6.7         2.5          5.8         1.8 virginica
10          7.2         3.6          6.1         2.5 virginica
# … with 40 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">data_tbl_list <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-2">   <span class="fu" style="color: #4758AB;">map</span>( <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">pull</span>(., Species)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-3">   <span class="fu" style="color: #4758AB;">map</span>( <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">as.character</span>(.)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-4">   <span class="fu" style="color: #4758AB;">map</span>( <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">unique</span>(.))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] "setosa"

[[2]]
[1] "versicolor"

[[3]]
[1] "virginica"</code></pre>
</div>
</div>
<p>Now lets go ahead and apply the names.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">names</span>(data_tbl_list) <span class="ot" style="color: #003B4F;">&lt;-</span> data_tbl_list <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2">   <span class="fu" style="color: #4758AB;">map</span>( <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">pull</span>(., Species)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-3">   <span class="fu" style="color: #4758AB;">map</span>( <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">as.character</span>(.)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-4">   <span class="fu" style="color: #4758AB;">map</span>( <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">unique</span>(.))</span>
<span id="cb6-5"></span>
<span id="cb6-6">data_tbl_list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;list_of&lt;
  tbl_df&lt;
    Sepal.Length: double
    Sepal.Width : double
    Petal.Length: double
    Petal.Width : double
    Species     : factor&lt;fb977&gt;
  &gt;
&gt;[3]&gt;
$setosa
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  
 1          5.1         3.5          1.4         0.2 setosa 
 2          4.9         3            1.4         0.2 setosa 
 3          4.7         3.2          1.3         0.2 setosa 
 4          4.6         3.1          1.5         0.2 setosa 
 5          5           3.6          1.4         0.2 setosa 
 6          5.4         3.9          1.7         0.4 setosa 
 7          4.6         3.4          1.4         0.3 setosa 
 8          5           3.4          1.5         0.2 setosa 
 9          4.4         2.9          1.4         0.2 setosa 
10          4.9         3.1          1.5         0.1 setosa 
# … with 40 more rows

$versicolor
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species   
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;     
 1          7           3.2          4.7         1.4 versicolor
 2          6.4         3.2          4.5         1.5 versicolor
 3          6.9         3.1          4.9         1.5 versicolor
 4          5.5         2.3          4           1.3 versicolor
 5          6.5         2.8          4.6         1.5 versicolor
 6          5.7         2.8          4.5         1.3 versicolor
 7          6.3         3.3          4.7         1.6 versicolor
 8          4.9         2.4          3.3         1   versicolor
 9          6.6         2.9          4.6         1.3 versicolor
10          5.2         2.7          3.9         1.4 versicolor
# … with 40 more rows

$virginica
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species  
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;    
 1          6.3         3.3          6           2.5 virginica
 2          5.8         2.7          5.1         1.9 virginica
 3          7.1         3            5.9         2.1 virginica
 4          6.3         2.9          5.6         1.8 virginica
 5          6.5         3            5.8         2.2 virginica
 6          7.6         3            6.6         2.1 virginica
 7          4.9         2.5          4.5         1.7 virginica
 8          7.3         2.9          6.3         1.8 virginica
 9          6.7         2.5          5.8         1.8 virginica
10          7.2         3.6          6.1         2.5 virginica
# … with 40 more rows</code></pre>
</div>
</div>
<p>Let’s now see how we do this in <code>{healthyR}</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR)</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;">named_item_list</span>(iris, Species)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;list_of&lt;
  tbl_df&lt;
    Sepal.Length: double
    Sepal.Width : double
    Petal.Length: double
    Petal.Width : double
    Species     : factor&lt;fb977&gt;
  &gt;
&gt;[3]&gt;
$setosa
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  
 1          5.1         3.5          1.4         0.2 setosa 
 2          4.9         3            1.4         0.2 setosa 
 3          4.7         3.2          1.3         0.2 setosa 
 4          4.6         3.1          1.5         0.2 setosa 
 5          5           3.6          1.4         0.2 setosa 
 6          5.4         3.9          1.7         0.4 setosa 
 7          4.6         3.4          1.4         0.3 setosa 
 8          5           3.4          1.5         0.2 setosa 
 9          4.4         2.9          1.4         0.2 setosa 
10          4.9         3.1          1.5         0.1 setosa 
# … with 40 more rows

$versicolor
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species   
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;     
 1          7           3.2          4.7         1.4 versicolor
 2          6.4         3.2          4.5         1.5 versicolor
 3          6.9         3.1          4.9         1.5 versicolor
 4          5.5         2.3          4           1.3 versicolor
 5          6.5         2.8          4.6         1.5 versicolor
 6          5.7         2.8          4.5         1.3 versicolor
 7          6.3         3.3          4.7         1.6 versicolor
 8          4.9         2.4          3.3         1   versicolor
 9          6.6         2.9          4.6         1.3 versicolor
10          5.2         2.7          3.9         1.4 versicolor
# … with 40 more rows

$virginica
# A tibble: 50 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species  
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;    
 1          6.3         3.3          6           2.5 virginica
 2          5.8         2.7          5.1         1.9 virginica
 3          7.1         3            5.9         2.1 virginica
 4          6.3         2.9          5.6         1.8 virginica
 5          6.5         3            5.8         2.2 virginica
 6          7.6         3            6.6         2.1 virginica
 7          4.9         2.5          4.5         1.7 virginica
 8          7.3         2.9          6.3         1.8 virginica
 9          6.7         2.5          5.8         1.8 virginica
10          7.2         3.6          6.1         2.5 virginica
# … with 40 more rows</code></pre>
</div>
</div>
<p>If you use this in conjunction with the <strong>healthyR</strong> function <code>save_to_excel()</code> then it will write an excel file with a tab for each named item in the list.</p>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>purrr</category>
  <category>healthyR</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-12-05/index.html</guid>
  <pubDate>Mon, 05 Dec 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Auto KNN with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrai-2022-12-02/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Minimal coding ML is not something that is unheard of and is rather prolific, think <code>h2o</code> and <code>pycaret</code> just to name two. There is also no shortage available for <code>R</code> with the <code>h2o</code> interface, and <code>tidyfit</code>. There are also similar low-code workflows in my <code>r</code> package <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a>. Today I will specifically go through the workflow for Automatic KNN classification for the Iris data set where we will classify the Species.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the two <code>{healthyR.ai}</code> functions that we will be using. First we have the <strong>data prepper</strong> <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_knn_data_prepper.html"><code>hai_knn_data_prepper()</code></a> which will get the data ready for use with the <code>knn</code> algorithm, and then we have the actual <strong>auto ml</strong> function <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_auto_knn.html"><code>hai_auto_knn()</code></a>. Let’s take a look at the function calls.</p>
<p>First <strong>hai_knn_data_prepper()</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_knn_data_prepper</span>(.data, .recipe_formula)</span></code></pre></div>
</div>
<p>Now let’s look at the arguments to those parameters.</p>
<ul>
<li><code>.data</code> - The data that you are passing to the function. Can be any type of data that is accepted by the data parameter of the recipes::reciep() function.</li>
<li><code>.recipe_formula</code> - The formula that is going to be passed. For example if you are using the iris data then the formula would most likely be something like <code>Species ~ .</code></li>
</ul>
<p>Now let’s take a look at the <strong>automl</strong> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">hai_auto_knn</span>(</span>
<span id="cb2-2">  .data,</span>
<span id="cb2-3">  .rec_obj,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;">.splits_obj =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb2-5">  <span class="at" style="color: #657422;">.rsamp_obj =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;">.tune =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb2-7">  <span class="at" style="color: #657422;">.grid_size =</span> <span class="dv" style="color: #AD0000;">10</span>,</span>
<span id="cb2-8">  <span class="at" style="color: #657422;">.num_cores =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb2-9">  <span class="at" style="color: #657422;">.best_metric =</span> <span class="st" style="color: #20794D;">"rmse"</span>,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;">.model_type =</span> <span class="st" style="color: #20794D;">"regression"</span></span>
<span id="cb2-11">)</span></code></pre></div>
</div>
<p>Again let’s look at the arguments to the parameters.</p>
<ul>
<li><code>.data</code> - The data being passed to the function. The time-series object.</li>
<li><code>.rec_obj</code> - This is the recipe object you want to use. You can use <code>hai_knn_data_prepper()</code> an automatic recipe_object.</li>
<li><code>.splits_obj</code> - NULL is the default, when NULL then one will be created.</li>
<li><code>.rsamp_obj</code> - NULL is the default, when NULL then one will be created. It will default to creating an rsample::mc_cv() object.</li>
<li><code>.tune</code> - Default is TRUE, this will create a tuning grid and tuned workflow</li>
<li><code>.grid_size</code> - Default is 10</li>
<li><code>.num_cores</code> - Default is 1</li>
<li><code>.best_metric</code> - Default is “rmse”. You can choose a metric depending on the model_type used. If regression then see <code>hai_default_regression_metric_set()</code>, if classification then see <code>hai_default_classification_metric_set()</code>.</li>
<li><code>.model_type</code> - Default is regression, can also be classification.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>For this example we are going to use the <code>iris</code> data set where we are going to use the <code>hai_auto_knn()</code> to classify the <strong>Species</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb3-2"></span>
<span id="cb3-3">data <span class="ot" style="color: #003B4F;">&lt;-</span> iris</span>
<span id="cb3-4"></span>
<span id="cb3-5">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_knn_data_prepper</span>(data, Species <span class="sc" style="color: #5E5E5E;">~</span> .)</span>
<span id="cb3-6"></span>
<span id="cb3-7">auto_knn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_auto_knn</span>(</span>
<span id="cb3-8">  <span class="at" style="color: #657422;">.data =</span> data,</span>
<span id="cb3-9">  <span class="at" style="color: #657422;">.rec_obj =</span> rec_obj,</span>
<span id="cb3-10">  <span class="at" style="color: #657422;">.best_metric =</span> <span class="st" style="color: #20794D;">"f_meas"</span>,</span>
<span id="cb3-11">  <span class="at" style="color: #657422;">.model_type =</span> <span class="st" style="color: #20794D;">"classification"</span>,</span>
<span id="cb3-12">  <span class="at" style="color: #657422;">.num_cores =</span> <span class="dv" style="color: #AD0000;">12</span></span>
<span id="cb3-13">)</span></code></pre></div>
</div>
<p>Now let’s take a look at the complete output of the <code>auto_knn</code> object. The outputs are as follows:</p>
<ul>
<li>recipe</li>
<li>model specification</li>
<li>workflow</li>
<li>tuned model (grid ect)</li>
</ul>
<section id="recipe-output" class="level2">
<h2 class="anchored" data-anchor-id="recipe-output">Recipe Output</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>recipe_info</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Recipe

Inputs:

      role #variables
   outcome          1
 predictor          4

Operations:

Novel factor level assignment for recipes::all_nominal_predictors()
Dummy variables from recipes::all_nominal_predictors()
Zero variance filter on recipes::all_predictors()
Centering and scaling for recipes::all_numeric()</code></pre>
</div>
</div>
</section>
<section id="model-info" class="level2">
<h2 class="anchored" data-anchor-id="model-info">Model Info</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>model_info<span class="sc" style="color: #5E5E5E;">$</span>was_tuned</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "tuned"</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>model_info<span class="sc" style="color: #5E5E5E;">$</span>model_spec</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>K-Nearest Neighbor Model Specification (classification)

Main Arguments:
  neighbors = tune::tune()
  weight_func = tune::tune()
  dist_power = tune::tune()

Computational engine: kknn </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>model_info<span class="sc" style="color: #5E5E5E;">$</span>wflw</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: nearest_neighbor()

── Preprocessor ────────────────────────────────────────────────────────────────
4 Recipe Steps

• step_novel()
• step_dummy()
• step_zv()
• step_normalize()

── Model ───────────────────────────────────────────────────────────────────────
K-Nearest Neighbor Model Specification (classification)

Main Arguments:
  neighbors = tune::tune()
  weight_func = tune::tune()
  dist_power = tune::tune()

Computational engine: kknn </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>model_info<span class="sc" style="color: #5E5E5E;">$</span>fitted_wflw</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: nearest_neighbor()

── Preprocessor ────────────────────────────────────────────────────────────────
4 Recipe Steps

• step_novel()
• step_dummy()
• step_zv()
• step_normalize()

── Model ───────────────────────────────────────────────────────────────────────

Call:
kknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(2L,     data, 5), distance = ~1.24146585899405, kernel = ~"inv")

Type of response variable: nominal
Minimal misclassification: 0.03571429
Best kernel: inv
Best k: 2</code></pre>
</div>
</div>
</section>
<section id="tuning-info" class="level2">
<h2 class="anchored" data-anchor-id="tuning-info">Tuning Info</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>tuned_info<span class="sc" style="color: #5E5E5E;">$</span>tuning_grid</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 3
   neighbors weight_func  dist_power
       &lt;int&gt; &lt;chr&gt;             &lt;dbl&gt;
 1         6 rank              1.81 
 2         4 biweight          0.266
 3         9 rectangular       0.647
 4         7 triweight         0.783
 5         4 epanechnikov      1.05 
 6        12 gaussian          1.16 
 7        11 cos               1.83 
 8        14 triangular        0.457
 9         2 inv               1.24 
10        10 optimal           1.45 </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>tuned_info<span class="sc" style="color: #5E5E5E;">$</span>cv_obj</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># Monte Carlo cross-validation (0.75/0.25) with 25 resamples  
# A tibble: 25 × 2
   splits          id        
   &lt;list&gt;          &lt;chr&gt;     
 1 &lt;split [84/28]&gt; Resample01
 2 &lt;split [84/28]&gt; Resample02
 3 &lt;split [84/28]&gt; Resample03
 4 &lt;split [84/28]&gt; Resample04
 5 &lt;split [84/28]&gt; Resample05
 6 &lt;split [84/28]&gt; Resample06
 7 &lt;split [84/28]&gt; Resample07
 8 &lt;split [84/28]&gt; Resample08
 9 &lt;split [84/28]&gt; Resample09
10 &lt;split [84/28]&gt; Resample10
# … with 15 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>tuned_info<span class="sc" style="color: #5E5E5E;">$</span>tuned_results</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># Tuning results
# Monte Carlo cross-validation (0.75/0.25) with 25 resamples  
# A tibble: 25 × 4
   splits          id         .metrics           .notes          
   &lt;list&gt;          &lt;chr&gt;      &lt;list&gt;             &lt;list&gt;          
 1 &lt;split [84/28]&gt; Resample01 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
 2 &lt;split [84/28]&gt; Resample02 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
 3 &lt;split [84/28]&gt; Resample03 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
 4 &lt;split [84/28]&gt; Resample04 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
 5 &lt;split [84/28]&gt; Resample05 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
 6 &lt;split [84/28]&gt; Resample06 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
 7 &lt;split [84/28]&gt; Resample07 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
 8 &lt;split [84/28]&gt; Resample08 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
 9 &lt;split [84/28]&gt; Resample09 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
10 &lt;split [84/28]&gt; Resample10 &lt;tibble [110 × 7]&gt; &lt;tibble [0 × 3]&gt;
# … with 15 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>tuned_info<span class="sc" style="color: #5E5E5E;">$</span>grid_size</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 10</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>tuned_info<span class="sc" style="color: #5E5E5E;">$</span>best_metric</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "f_meas"</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>tuned_info<span class="sc" style="color: #5E5E5E;">$</span>best_result_set</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 9
  neighbors weight_func dist_power .metric .estima…¹  mean     n std_err .config
      &lt;int&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;  
1         2 inv               1.24 f_meas  macro     0.965    25 0.00788 Prepro…
# … with abbreviated variable name ¹​.estimator</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>tuned_info<span class="sc" style="color: #5E5E5E;">$</span>tuning_grid_plot</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`geom_smooth()` using method = 'loess' and formula = 'y ~ x'</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrai-2022-12-02/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">auto_knn<span class="sc" style="color: #5E5E5E;">$</span>tuned_info<span class="sc" style="color: #5E5E5E;">$</span>plotly_grid_plot</span></code></pre></div>
<div class="cell-output-display">
<div id="htmlwidget-0dab5ade6e9edbe228b5" style="width:100%;height:464px;" class="plotly html-widget"></div>
<script type="application/json" data-for="htmlwidget-0dab5ade6e9edbe228b5">{"x":{"data":[{"x":[4],"y":[0.922857142857143],"text":"value:  4.0000000<br />mean: 0.9228571<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.922857142857143],"text":"value:  0.2658700<br />mean: 0.9228571<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[4],"y":[0.939068797138409],"text":"value:  4.0000000<br />mean: 0.9390688<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.939068797138409],"text":"value:  0.2658700<br />mean: 0.9390688<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[4],"y":[0.914242259942631],"text":"value:  4.0000000<br />mean: 0.9142423<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.914242259942631],"text":"value:  0.2658700<br />mean: 0.9142423<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[4],"y":[0.880800487500292],"text":"value:  4.0000000<br />mean: 0.8808005<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.880800487500292],"text":"value:  0.2658700<br />mean: 0.8808005<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[4],"y":[0.885384563903336],"text":"value:  4.0000000<br />mean: 0.8853846<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.885384563903336],"text":"value:  0.2658700<br />mean: 0.8853846<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[4],"y":[0.963280363610206],"text":"value:  4.0000000<br />mean: 0.9632804<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.963280363610206],"text":"value:  0.2658700<br />mean: 0.9632804<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[4],"y":[0.922734672734673],"text":"value:  4.0000000<br />mean: 0.9227347<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.922734672734673],"text":"value:  0.2658700<br />mean: 0.9227347<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[4],"y":[0.922734672734673],"text":"value:  4.0000000<br />mean: 0.9227347<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.922734672734673],"text":"value:  0.2658700<br />mean: 0.9227347<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[4],"y":[0.917077145077145],"text":"value:  4.0000000<br />mean: 0.9170771<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.917077145077145],"text":"value:  0.2658700<br />mean: 0.9170771<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[4],"y":[0.917077145077145],"text":"value:  4.0000000<br />mean: 0.9170771<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.917077145077145],"text":"value:  0.2658700<br />mean: 0.9170771<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[4],"y":[0.961060449199674],"text":"value:  4.0000000<br />mean: 0.9610604<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[0.26586997034261],"y":[0.961060449199674],"text":"value:  0.2658700<br />mean: 0.9610604<br />Distance Weighting Function: biweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"biweight","legendgroup":"biweight","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[11],"y":[0.962857142857143],"text":"value: 11.0000000<br />mean: 0.9628571<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.962857142857143],"text":"value:  1.8283389<br />mean: 0.9628571<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[11],"y":[0.971961152806253],"text":"value: 11.0000000<br />mean: 0.9719612<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.971961152806253],"text":"value:  1.8283389<br />mean: 0.9719612<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[11],"y":[0.961522641738587],"text":"value: 11.0000000<br />mean: 0.9615226<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.961522641738587],"text":"value:  1.8283389<br />mean: 0.9615226<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[11],"y":[0.943201348929431],"text":"value: 11.0000000<br />mean: 0.9432013<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.943201348929431],"text":"value:  1.8283389<br />mean: 0.9432013<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[11],"y":[0.947096257653191],"text":"value: 11.0000000<br />mean: 0.9470963<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.947096257653191],"text":"value:  1.8283389<br />mean: 0.9470963<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[11],"y":[0.982919650355577],"text":"value: 11.0000000<br />mean: 0.9829197<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.982919650355577],"text":"value:  1.8283389<br />mean: 0.9829197<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[11],"y":[0.968566544566545],"text":"value: 11.0000000<br />mean: 0.9685665<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.968566544566545],"text":"value:  1.8283389<br />mean: 0.9685665<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[11],"y":[0.968566544566545],"text":"value: 11.0000000<br />mean: 0.9685665<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.968566544566545],"text":"value:  1.8283389<br />mean: 0.9685665<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[11],"y":[0.96278243978244],"text":"value: 11.0000000<br />mean: 0.9627824<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.96278243978244],"text":"value:  1.8283389<br />mean: 0.9627824<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[11],"y":[0.96278243978244],"text":"value: 11.0000000<br />mean: 0.9627824<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.96278243978244],"text":"value:  1.8283389<br />mean: 0.9627824<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[11],"y":[0.981139865830066],"text":"value: 11.0000000<br />mean: 0.9811399<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[1.82833888730733],"y":[0.981139865830066],"text":"value:  1.8283389<br />mean: 0.9811399<br />Distance Weighting Function: cos","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(216,144,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)"}},"hoveron":"points","name":"cos","legendgroup":"cos","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[4],"y":[0.958571428571429],"text":"value:  4.0000000<br />mean: 0.9585714<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.958571428571429],"text":"value:  1.0452839<br />mean: 0.9585714<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[4],"y":[0.96779962301624],"text":"value:  4.0000000<br />mean: 0.9677996<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.96779962301624],"text":"value:  1.0452839<br />mean: 0.9677996<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[4],"y":[0.956764640177446],"text":"value:  4.0000000<br />mean: 0.9567646<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.956764640177446],"text":"value:  1.0452839<br />mean: 0.9567646<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[4],"y":[0.936226919313249],"text":"value:  4.0000000<br />mean: 0.9362269<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.936226919313249],"text":"value:  1.0452839<br />mean: 0.9362269<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[4],"y":[0.940034434714314],"text":"value:  4.0000000<br />mean: 0.9400344<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.940034434714314],"text":"value:  1.0452839<br />mean: 0.9400344<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[4],"y":[0.980789008093356],"text":"value:  4.0000000<br />mean: 0.9807890<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.980789008093356],"text":"value:  1.0452839<br />mean: 0.9807890<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[4],"y":[0.964631923631924],"text":"value:  4.0000000<br />mean: 0.9646319<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.964631923631924],"text":"value:  1.0452839<br />mean: 0.9646319<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[4],"y":[0.964631923631924],"text":"value:  4.0000000<br />mean: 0.9646319<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.964631923631924],"text":"value:  1.0452839<br />mean: 0.9646319<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[4],"y":[0.957004662004662],"text":"value:  4.0000000<br />mean: 0.9570047<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.957004662004662],"text":"value:  1.0452839<br />mean: 0.9570047<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[4],"y":[0.957004662004662],"text":"value:  4.0000000<br />mean: 0.9570047<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.957004662004662],"text":"value:  1.0452839<br />mean: 0.9570047<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[4],"y":[0.978594584027819],"text":"value:  4.0000000<br />mean: 0.9785946<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[1.04528387291823],"y":[0.978594584027819],"text":"value:  1.0452839<br />mean: 0.9785946<br />Distance Weighting Function: epanechnikov","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(163,165,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)"}},"hoveron":"points","name":"epanechnikov","legendgroup":"epanechnikov","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[12],"y":[0.951428571428571],"text":"value: 12.0000000<br />mean: 0.9514286<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.951428571428571],"text":"value:  1.1598595<br />mean: 0.9514286<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[12],"y":[0.962946679766393],"text":"value: 12.0000000<br />mean: 0.9629467<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.962946679766393],"text":"value:  1.1598595<br />mean: 0.9629467<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[12],"y":[0.948621762973188],"text":"value: 12.0000000<br />mean: 0.9486218<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.948621762973188],"text":"value:  1.1598595<br />mean: 0.9486218<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[12],"y":[0.925314218413415],"text":"value: 12.0000000<br />mean: 0.9253142<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.925314218413415],"text":"value:  1.1598595<br />mean: 0.9253142<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[12],"y":[0.930076581615904],"text":"value: 12.0000000<br />mean: 0.9300766<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.930076581615904],"text":"value:  1.1598595<br />mean: 0.9300766<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[12],"y":[0.97754196860308],"text":"value: 12.0000000<br />mean: 0.9775420<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.97754196860308],"text":"value:  1.1598595<br />mean: 0.9775420<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[12],"y":[0.957127724127724],"text":"value: 12.0000000<br />mean: 0.9571277<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.957127724127724],"text":"value:  1.1598595<br />mean: 0.9571277<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[12],"y":[0.957127724127724],"text":"value: 12.0000000<br />mean: 0.9571277<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.957127724127724],"text":"value:  1.1598595<br />mean: 0.9571277<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[12],"y":[0.950692825692826],"text":"value: 12.0000000<br />mean: 0.9506928<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.950692825692826],"text":"value:  1.1598595<br />mean: 0.9506928<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[12],"y":[0.950692825692826],"text":"value: 12.0000000<br />mean: 0.9506928<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.950692825692826],"text":"value:  1.1598595<br />mean: 0.9506928<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[12],"y":[0.97520053383996],"text":"value: 12.0000000<br />mean: 0.9752005<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[1.1598595189699],"y":[0.97520053383996],"text":"value:  1.1598595<br />mean: 0.9752005<br />Distance Weighting Function: gaussian","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(57,182,0,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)"}},"hoveron":"points","name":"gaussian","legendgroup":"gaussian","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[2],"y":[0.965714285714286],"text":"value:  2.0000000<br />mean: 0.9657143<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.965714285714286],"text":"value:  1.2414659<br />mean: 0.9657143<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[2],"y":[0.974364326143637],"text":"value:  2.0000000<br />mean: 0.9743643<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.974364326143637],"text":"value:  1.2414659<br />mean: 0.9743643<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[2],"y":[0.964649482206415],"text":"value:  2.0000000<br />mean: 0.9646495<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.964649482206415],"text":"value:  1.2414659<br />mean: 0.9646495<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[2],"y":[0.947490125883733],"text":"value:  2.0000000<br />mean: 0.9474901<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.947490125883733],"text":"value:  1.2414659<br />mean: 0.9474901<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[2],"y":[0.951017277956486],"text":"value:  2.0000000<br />mean: 0.9510173<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.951017277956486],"text":"value:  1.2414659<br />mean: 0.9510173<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[2],"y":[0.984041971905143],"text":"value:  2.0000000<br />mean: 0.9840420<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.984041971905143],"text":"value:  1.2414659<br />mean: 0.9840420<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[2],"y":[0.970601953601954],"text":"value:  2.0000000<br />mean: 0.9706020<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.970601953601954],"text":"value:  1.2414659<br />mean: 0.9706020<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[2],"y":[0.970601953601954],"text":"value:  2.0000000<br />mean: 0.9706020<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.970601953601954],"text":"value:  1.2414659<br />mean: 0.9706020<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[2],"y":[0.966121545121545],"text":"value:  2.0000000<br />mean: 0.9661215<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.966121545121545],"text":"value:  1.2414659<br />mean: 0.9661215<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[2],"y":[0.966121545121545],"text":"value:  2.0000000<br />mean: 0.9661215<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.966121545121545],"text":"value:  1.2414659<br />mean: 0.9661215<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[2],"y":[0.982607107165729],"text":"value:  2.0000000<br />mean: 0.9826071<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[1.24146585899405],"y":[0.982607107165729],"text":"value:  1.2414659<br />mean: 0.9826071<br />Distance Weighting Function: inv","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,125,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)"}},"hoveron":"points","name":"inv","legendgroup":"inv","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[10],"y":[0.961428571428571],"text":"value: 10.0000000<br />mean: 0.9614286<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.961428571428571],"text":"value:  1.4484000<br />mean: 0.9614286<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[10],"y":[0.970760081947287],"text":"value: 10.0000000<br />mean: 0.9707601<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.970760081947287],"text":"value:  1.4484000<br />mean: 0.9707601<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[10],"y":[0.959916960964549],"text":"value: 10.0000000<br />mean: 0.9599170<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.959916960964549],"text":"value:  1.4484000<br />mean: 0.9599170<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[10],"y":[0.940744447473014],"text":"value: 10.0000000<br />mean: 0.9407444<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.940744447473014],"text":"value:  1.4484000<br />mean: 0.9407444<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[10],"y":[0.944543564858374],"text":"value: 10.0000000<br />mean: 0.9445436<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.944543564858374],"text":"value:  1.4484000<br />mean: 0.9445436<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[10],"y":[0.982121189557116],"text":"value: 10.0000000<br />mean: 0.9821212<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.982121189557116],"text":"value:  1.4484000<br />mean: 0.9821212<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[10],"y":[0.966653235653236],"text":"value: 10.0000000<br />mean: 0.9666532<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.966653235653236],"text":"value:  1.4484000<br />mean: 0.9666532<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[10],"y":[0.966653235653236],"text":"value: 10.0000000<br />mean: 0.9666532<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.966653235653236],"text":"value:  1.4484000<br />mean: 0.9666532<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[10],"y":[0.961236985236985],"text":"value: 10.0000000<br />mean: 0.9612370<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.961236985236985],"text":"value:  1.4484000<br />mean: 0.9612370<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[10],"y":[0.961236985236985],"text":"value: 10.0000000<br />mean: 0.9612370<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.961236985236985],"text":"value:  1.4484000<br />mean: 0.9612370<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[10],"y":[0.98028317865759],"text":"value: 10.0000000<br />mean: 0.9802832<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[1.44840001853649],"y":[0.98028317865759],"text":"value:  1.4484000<br />mean: 0.9802832<br />Distance Weighting Function: optimal","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"optimal","legendgroup":"optimal","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[6],"y":[0.964285714285714],"text":"value:  6.0000000<br />mean: 0.9642857<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.964285714285714],"text":"value:  1.8096185<br />mean: 0.9642857<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[6],"y":[0.973335993651682],"text":"value:  6.0000000<br />mean: 0.9733360<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.973335993651682],"text":"value:  1.8096185<br />mean: 0.9733360<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[6],"y":[0.962970459810446],"text":"value:  6.0000000<br />mean: 0.9629705<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.962970459810446],"text":"value:  1.8096185<br />mean: 0.9629705<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[6],"y":[0.945467477900575],"text":"value:  6.0000000<br />mean: 0.9454675<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.945467477900575],"text":"value:  1.8096185<br />mean: 0.9454675<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[6],"y":[0.949149546450583],"text":"value:  6.0000000<br />mean: 0.9491495<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.949149546450583],"text":"value:  1.8096185<br />mean: 0.9491495<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[6],"y":[0.983473010039372],"text":"value:  6.0000000<br />mean: 0.9834730<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.983473010039372],"text":"value:  1.8096185<br />mean: 0.9834730<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[6],"y":[0.968958078958079],"text":"value:  6.0000000<br />mean: 0.9689581<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.968958078958079],"text":"value:  1.8096185<br />mean: 0.9689581<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[6],"y":[0.968958078958079],"text":"value:  6.0000000<br />mean: 0.9689581<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.968958078958079],"text":"value:  1.8096185<br />mean: 0.9689581<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[6],"y":[0.964687201687202],"text":"value:  6.0000000<br />mean: 0.9646872<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.964687201687202],"text":"value:  1.8096185<br />mean: 0.9646872<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[6],"y":[0.964687201687202],"text":"value:  6.0000000<br />mean: 0.9646872<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.964687201687202],"text":"value:  1.8096185<br />mean: 0.9646872<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[6],"y":[0.981984785616163],"text":"value:  6.0000000<br />mean: 0.9819848<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[1.80961849288782],"y":[0.981984785616163],"text":"value:  1.8096185<br />mean: 0.9819848<br />Distance Weighting Function: rank","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,176,246,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)"}},"hoveron":"points","name":"rank","legendgroup":"rank","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[9],"y":[0.945714285714286],"text":"value:  9.0000000<br />mean: 0.9457143<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.945714285714286],"text":"value:  0.6465252<br />mean: 0.9457143<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[9],"y":[0.957274374001982],"text":"value:  9.0000000<br />mean: 0.9572744<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.957274374001982],"text":"value:  0.6465252<br />mean: 0.9572744<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[9],"y":[0.941939223689087],"text":"value:  9.0000000<br />mean: 0.9419392<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.941939223689087],"text":"value:  0.6465252<br />mean: 0.9419392<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[9],"y":[0.916343467908867],"text":"value:  9.0000000<br />mean: 0.9163435<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.916343467908867],"text":"value:  0.6465252<br />mean: 0.9163435<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[9],"y":[0.920757769104555],"text":"value:  9.0000000<br />mean: 0.9207578<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.920757769104555],"text":"value:  0.6465252<br />mean: 0.9207578<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[9],"y":[0.974780103401183],"text":"value:  9.0000000<br />mean: 0.9747801<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.974780103401183],"text":"value:  0.6465252<br />mean: 0.9747801<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[9],"y":[0.95160964960965],"text":"value:  9.0000000<br />mean: 0.9516096<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.95160964960965],"text":"value:  0.6465252<br />mean: 0.9516096<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[9],"y":[0.95160964960965],"text":"value:  9.0000000<br />mean: 0.9516096<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.95160964960965],"text":"value:  0.6465252<br />mean: 0.9516096<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[9],"y":[0.942549968549969],"text":"value:  9.0000000<br />mean: 0.9425500<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.942549968549969],"text":"value:  0.6465252<br />mean: 0.9425500<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[9],"y":[0.942549968549969],"text":"value:  9.0000000<br />mean: 0.9425500<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.942549968549969],"text":"value:  0.6465252<br />mean: 0.9425500<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[9],"y":[0.971998779453995],"text":"value:  9.0000000<br />mean: 0.9719988<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[0.646525197697338],"y":[0.971998779453995],"text":"value:  0.6465252<br />mean: 0.9719988<br />Distance Weighting Function: rectangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(149,144,255,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)"}},"hoveron":"points","name":"rectangular","legendgroup":"rectangular","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[14],"y":[0.945714285714286],"text":"value: 14.0000000<br />mean: 0.9457143<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.945714285714286],"text":"value:  0.4569364<br />mean: 0.9457143<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[14],"y":[0.957994758593884],"text":"value: 14.0000000<br />mean: 0.9579948<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.957994758593884],"text":"value:  0.4569364<br />mean: 0.9579948<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[14],"y":[0.942535695040034],"text":"value: 14.0000000<br />mean: 0.9425357<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.942535695040034],"text":"value:  0.4569364<br />mean: 0.9425357<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[14],"y":[0.916434433497509],"text":"value: 14.0000000<br />mean: 0.9164344<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.916434433497509],"text":"value:  0.4569364<br />mean: 0.9164344<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[14],"y":[0.919772054213101],"text":"value: 14.0000000<br />mean: 0.9197721<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.919772054213101],"text":"value:  0.4569364<br />mean: 0.9197721<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[14],"y":[0.973998559005693],"text":"value: 14.0000000<br />mean: 0.9739986<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.973998559005693],"text":"value:  0.4569364<br />mean: 0.9739986<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[14],"y":[0.949029452029452],"text":"value: 14.0000000<br />mean: 0.9490295<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.949029452029452],"text":"value:  0.4569364<br />mean: 0.9490295<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[14],"y":[0.949029452029452],"text":"value: 14.0000000<br />mean: 0.9490295<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.949029452029452],"text":"value:  0.4569364<br />mean: 0.9490295<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[14],"y":[0.943782291782292],"text":"value: 14.0000000<br />mean: 0.9437823<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.943782291782292],"text":"value:  0.4569364<br />mean: 0.9437823<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[14],"y":[0.943782291782292],"text":"value: 14.0000000<br />mean: 0.9437823<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.943782291782292],"text":"value:  0.4569364<br />mean: 0.9437823<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[14],"y":[0.972207225405475],"text":"value: 14.0000000<br />mean: 0.9722072<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[0.456936386574525],"y":[0.972207225405475],"text":"value:  0.4569364<br />mean: 0.9722072<br />Distance Weighting Function: triangular","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(231,107,243,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)"}},"hoveron":"points","name":"triangular","legendgroup":"triangular","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[7],"y":[0.951428571428571],"text":"value:  7.0000000<br />mean: 0.9514286<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.951428571428571],"text":"value:  0.7834101<br />mean: 0.9514286<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[7],"y":[0.962663271453573],"text":"value:  7.0000000<br />mean: 0.9626633<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.962663271453573],"text":"value:  0.7834101<br />mean: 0.9626633<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[7],"y":[0.948367033483675],"text":"value:  7.0000000<br />mean: 0.9483670<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.948367033483675],"text":"value:  0.7834101<br />mean: 0.9483670<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[7],"y":[0.925237336626666],"text":"value:  7.0000000<br />mean: 0.9252373<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.925237336626666],"text":"value:  0.7834101<br />mean: 0.9252373<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[7],"y":[0.929578085532161],"text":"value:  7.0000000<br />mean: 0.9295781<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.929578085532161],"text":"value:  0.7834101<br />mean: 0.9295781<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[7],"y":[0.977337837832588],"text":"value:  7.0000000<br />mean: 0.9773378<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.977337837832588],"text":"value:  0.7834101<br />mean: 0.9773378<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[7],"y":[0.956318533318533],"text":"value:  7.0000000<br />mean: 0.9563185<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.956318533318533],"text":"value:  0.7834101<br />mean: 0.9563185<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[7],"y":[0.956318533318533],"text":"value:  7.0000000<br />mean: 0.9563185<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.956318533318533],"text":"value:  0.7834101<br />mean: 0.9563185<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[7],"y":[0.950111296111296],"text":"value:  7.0000000<br />mean: 0.9501113<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.950111296111296],"text":"value:  0.7834101<br />mean: 0.9501113<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[7],"y":[0.950111296111296],"text":"value:  7.0000000<br />mean: 0.9501113<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.950111296111296],"text":"value:  0.7834101<br />mean: 0.9501113<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[7],"y":[0.97521524679585],"text":"value:  7.0000000<br />mean: 0.9752152<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[0.783410115775187],"y":[0.97521524679585],"text":"value:  0.7834101<br />mean: 0.9752152<br />Distance Weighting Function: triweight","type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(255,98,188,1)","opacity":0.7,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)"}},"hoveron":"points","name":"triweight","legendgroup":"triweight","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.962184209445804,0.960356573737391,0.95867042366795,0.957120493552887,0.955701517707611,0.95440823044753,0.953235366088051,0.952177658944583,0.951229843332532,0.950386653567307,0.949642823964315,0.948993088838965,0.948432182506664,0.947954839282819,0.947673185484392,0.947769523721617,0.948192762564961,0.948886879921454,0.949795853698127,0.950863661802011,0.952034282140136,0.953251692619533,0.954459871147233,0.955602795630266,0.956624443975663,0.957468794090456,0.958079823881674,0.958379980635866,0.958322885865095,0.958015925239057,0.957575051807435,0.957116218619912,0.956755378726171,0.956606927635234,0.956509545479396,0.956308416215336,0.956023782306381,0.955675886215854,0.955284970407083,0.954871277343394,0.954455049488112,0.954056529304564,0.953695959256075,0.953393581805971,0.953169639417579,0.953044374554223,0.953038029679231,0.953261153684745,0.953778286150143,0.95448056724799,0.955258240354823,0.956001548847182,0.956600736101603,0.95696372463383,0.957239795835688,0.957481188408079,0.957676726796485,0.957815235446387,0.957885538803268,0.957876461312609,0.957797730896281,0.957688695779764,0.957539390922342,0.957337516968553,0.957070774562936,0.956726864350028,0.956294014136279,0.955786962214968,0.95521745657148,0.954585488694872,0.953891050074204,0.953134132198534,0.952314726556921,0.951432824638424,0.950488417932102,0.949481497927014,0.948412056112218,0.947280083976773,0.946085573009739,0.944828514700172],"text":["value:  2.0000000<br />mean: 0.9621842","value:  2.1518987<br />mean: 0.9603566","value:  2.3037975<br />mean: 0.9586704","value:  2.4556962<br />mean: 0.9571205","value:  2.6075949<br />mean: 0.9557015","value:  2.7594937<br />mean: 0.9544082","value:  2.9113924<br />mean: 0.9532354","value:  3.0632911<br />mean: 0.9521777","value:  3.2151899<br />mean: 0.9512298","value:  3.3670886<br />mean: 0.9503867","value:  3.5189873<br />mean: 0.9496428","value:  3.6708861<br />mean: 0.9489931","value:  3.8227848<br />mean: 0.9484322","value:  3.9746835<br />mean: 0.9479548","value:  4.1265823<br />mean: 0.9476732","value:  4.2784810<br />mean: 0.9477695","value:  4.4303797<br />mean: 0.9481928","value:  4.5822785<br />mean: 0.9488869","value:  4.7341772<br />mean: 0.9497959","value:  4.8860759<br />mean: 0.9508637","value:  5.0379747<br />mean: 0.9520343","value:  5.1898734<br />mean: 0.9532517","value:  5.3417722<br />mean: 0.9544599","value:  5.4936709<br />mean: 0.9556028","value:  5.6455696<br />mean: 0.9566244","value:  5.7974684<br />mean: 0.9574688","value:  5.9493671<br />mean: 0.9580798","value:  6.1012658<br />mean: 0.9583800","value:  6.2531646<br />mean: 0.9583229","value:  6.4050633<br />mean: 0.9580159","value:  6.5569620<br />mean: 0.9575751","value:  6.7088608<br />mean: 0.9571162","value:  6.8607595<br />mean: 0.9567554","value:  7.0126582<br />mean: 0.9566069","value:  7.1645570<br />mean: 0.9565095","value:  7.3164557<br />mean: 0.9563084","value:  7.4683544<br />mean: 0.9560238","value:  7.6202532<br />mean: 0.9556759","value:  7.7721519<br />mean: 0.9552850","value:  7.9240506<br />mean: 0.9548713","value:  8.0759494<br />mean: 0.9544550","value:  8.2278481<br />mean: 0.9540565","value:  8.3797468<br />mean: 0.9536960","value:  8.5316456<br />mean: 0.9533936","value:  8.6835443<br />mean: 0.9531696","value:  8.8354430<br />mean: 0.9530444","value:  8.9873418<br />mean: 0.9530380","value:  9.1392405<br />mean: 0.9532612","value:  9.2911392<br />mean: 0.9537783","value:  9.4430380<br />mean: 0.9544806","value:  9.5949367<br />mean: 0.9552582","value:  9.7468354<br />mean: 0.9560015","value:  9.8987342<br />mean: 0.9566007","value: 10.0506329<br />mean: 0.9569637","value: 10.2025316<br />mean: 0.9572398","value: 10.3544304<br />mean: 0.9574812","value: 10.5063291<br />mean: 0.9576767","value: 10.6582278<br />mean: 0.9578152","value: 10.8101266<br />mean: 0.9578855","value: 10.9620253<br />mean: 0.9578765","value: 11.1139241<br />mean: 0.9577977","value: 11.2658228<br />mean: 0.9576887","value: 11.4177215<br />mean: 0.9575394","value: 11.5696203<br />mean: 0.9573375","value: 11.7215190<br />mean: 0.9570708","value: 11.8734177<br />mean: 0.9567269","value: 12.0253165<br />mean: 0.9562940","value: 12.1772152<br />mean: 0.9557870","value: 12.3291139<br />mean: 0.9552175","value: 12.4810127<br />mean: 0.9545855","value: 12.6329114<br />mean: 0.9538911","value: 12.7848101<br />mean: 0.9531341","value: 12.9367089<br />mean: 0.9523147","value: 13.0886076<br />mean: 0.9514328","value: 13.2405063<br />mean: 0.9504884","value: 13.3924051<br />mean: 0.9494815","value: 13.5443038<br />mean: 0.9484121","value: 13.6962025<br />mean: 0.9472801","value: 13.8481013<br />mean: 0.9460856","value: 14.0000000<br />mean: 0.9448285"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.925055062976908,0.926857764566111,0.928587908322058,0.930248051638274,0.931840751908287,0.933368566525622,0.934834052883804,0.93623976837636,0.937588270396816,0.938882116338696,0.940121952218128,0.941287407660244,0.942377196931249,0.943397535508915,0.944354638871014,0.945254722495316,0.946104001859593,0.946908692441618,0.947675009719161,0.948409169169994,0.949053899640048,0.949491123079257,0.949776212860322,0.949971894329059,0.95014089283128,0.9503459337128,0.950649742319432,0.951053930687491,0.951472198375095,0.951900234505041,0.952335894082016,0.952777032110703,0.953221503595786,0.953667163541951,0.954111866953882,0.954553468836262,0.954989824193778,0.955418788031113,0.955838215352952,0.956245961163979,0.956643482561388,0.957042065720816,0.957437111839129,0.957822193086705,0.958190881633924,0.958536749651162,0.958849110120399,0.959127443281155,0.95939216330756,0.95966413776448,0.959958380535995,0.960265148642018,0.96057867651412,0.960894123448529,0.961206648741476,0.961511411689187,0.961803571587893,0.962078287733822,0.962330719423204,0.962556025952266,0.962749811771663,0.962921881346216,0.963078137716277,0.963218707641726,0.963343717882448,0.963453295198325,0.963547566349238,0.963626658095071,0.963690697195706,0.963739810411025,0.96377412450091,0.963793766225246,0.963798862343913,0.963789539616795,0.963765924803773,0.963728144664731,0.963676325959551,0.963610595448115,0.963531079890306,0.963438994319757],"text":["value:  0.2658700<br />mean: 0.9250551","value:  0.2856481<br />mean: 0.9268578","value:  0.3054261<br />mean: 0.9285879","value:  0.3252042<br />mean: 0.9302481","value:  0.3449823<br />mean: 0.9318408","value:  0.3647604<br />mean: 0.9333686","value:  0.3845385<br />mean: 0.9348341","value:  0.4043166<br />mean: 0.9362398","value:  0.4240947<br />mean: 0.9375883","value:  0.4438728<br />mean: 0.9388821","value:  0.4636508<br />mean: 0.9401220","value:  0.4834289<br />mean: 0.9412874","value:  0.5032070<br />mean: 0.9423772","value:  0.5229851<br />mean: 0.9433975","value:  0.5427632<br />mean: 0.9443546","value:  0.5625413<br />mean: 0.9452547","value:  0.5823194<br />mean: 0.9461040","value:  0.6020975<br />mean: 0.9469087","value:  0.6218755<br />mean: 0.9476750","value:  0.6416536<br />mean: 0.9484092","value:  0.6614317<br />mean: 0.9490539","value:  0.6812098<br />mean: 0.9494911","value:  0.7009879<br />mean: 0.9497762","value:  0.7207660<br />mean: 0.9499719","value:  0.7405441<br />mean: 0.9501409","value:  0.7603222<br />mean: 0.9503459","value:  0.7801002<br />mean: 0.9506497","value:  0.7998783<br />mean: 0.9510539","value:  0.8196564<br />mean: 0.9514722","value:  0.8394345<br />mean: 0.9519002","value:  0.8592126<br />mean: 0.9523359","value:  0.8789907<br />mean: 0.9527770","value:  0.8987688<br />mean: 0.9532215","value:  0.9185469<br />mean: 0.9536672","value:  0.9383249<br />mean: 0.9541119","value:  0.9581030<br />mean: 0.9545535","value:  0.9778811<br />mean: 0.9549898","value:  0.9976592<br />mean: 0.9554188","value:  1.0174373<br />mean: 0.9558382","value:  1.0372154<br />mean: 0.9562460","value:  1.0569935<br />mean: 0.9566435","value:  1.0767716<br />mean: 0.9570421","value:  1.0965496<br />mean: 0.9574371","value:  1.1163277<br />mean: 0.9578222","value:  1.1361058<br />mean: 0.9581909","value:  1.1558839<br />mean: 0.9585367","value:  1.1756620<br />mean: 0.9588491","value:  1.1954401<br />mean: 0.9591274","value:  1.2152182<br />mean: 0.9593922","value:  1.2349963<br />mean: 0.9596641","value:  1.2547743<br />mean: 0.9599584","value:  1.2745524<br />mean: 0.9602651","value:  1.2943305<br />mean: 0.9605787","value:  1.3141086<br />mean: 0.9608941","value:  1.3338867<br />mean: 0.9612066","value:  1.3536648<br />mean: 0.9615114","value:  1.3734429<br />mean: 0.9618036","value:  1.3932210<br />mean: 0.9620783","value:  1.4129990<br />mean: 0.9623307","value:  1.4327771<br />mean: 0.9625560","value:  1.4525552<br />mean: 0.9627498","value:  1.4723333<br />mean: 0.9629219","value:  1.4921114<br />mean: 0.9630781","value:  1.5118895<br />mean: 0.9632187","value:  1.5316676<br />mean: 0.9633437","value:  1.5514457<br />mean: 0.9634533","value:  1.5712237<br />mean: 0.9635476","value:  1.5910018<br />mean: 0.9636267","value:  1.6107799<br />mean: 0.9636907","value:  1.6305580<br />mean: 0.9637398","value:  1.6503361<br />mean: 0.9637741","value:  1.6701142<br />mean: 0.9637938","value:  1.6898923<br />mean: 0.9637989","value:  1.7096704<br />mean: 0.9637895","value:  1.7294484<br />mean: 0.9637659","value:  1.7492265<br />mean: 0.9637281","value:  1.7690046<br />mean: 0.9636763","value:  1.7887827<br />mean: 0.9636106","value:  1.8085608<br />mean: 0.9635311","value:  1.8283389<br />mean: 0.9634390"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.971380714043447,0.969855320899393,0.968448871651829,0.967156902302088,0.965974948851499,0.964898547301394,0.963923233653106,0.963044543907965,0.962258014067303,0.96155918013245,0.960943578104739,0.960406743985501,0.959944213776066,0.959551523477767,0.959323900098123,0.959416155403399,0.959784891774125,0.960382524316808,0.961161468137958,0.962074138344083,0.963072950041692,0.964110318337294,0.965138658337398,0.966110385148513,0.966977913877146,0.967693659629808,0.968210037513006,0.968460873415649,0.968406019993385,0.968137092361772,0.967753067041019,0.967352920551339,0.967035629412941,0.966898817359698,0.966801167310079,0.966608807780906,0.966340291362355,0.966014170644601,0.965648998217817,0.96526332667218,0.964875708597865,0.964504696585046,0.964168843223899,0.963886701104598,0.963676822817319,0.963557760952237,0.963548068099527,0.96373524304181,0.964166283398284,0.964752408324202,0.965404142138849,0.966032009161512,0.966546533711479,0.966873340471828,0.967141372224894,0.967390660163121,0.967606362457225,0.967773637277919,0.967877642795921,0.967903537181946,0.967860258910849,0.967792933400559,0.967692923800508,0.967548988506461,0.96734988591418,0.967084374419428,0.966741700420638,0.966335591928429,0.96587683607838,0.965365306414851,0.964800876482207,0.964183419824808,0.963512809987019,0.9627889205132,0.962011624947716,0.961180796834927,0.960296309719198,0.959358037144889,0.958365852656365,0.957319629797986],"text":["value:  2.0000000<br />mean: 0.9713807","value:  2.1518987<br />mean: 0.9698553","value:  2.3037975<br />mean: 0.9684489","value:  2.4556962<br />mean: 0.9671569","value:  2.6075949<br />mean: 0.9659749","value:  2.7594937<br />mean: 0.9648985","value:  2.9113924<br />mean: 0.9639232","value:  3.0632911<br />mean: 0.9630445","value:  3.2151899<br />mean: 0.9622580","value:  3.3670886<br />mean: 0.9615592","value:  3.5189873<br />mean: 0.9609436","value:  3.6708861<br />mean: 0.9604067","value:  3.8227848<br />mean: 0.9599442","value:  3.9746835<br />mean: 0.9595515","value:  4.1265823<br />mean: 0.9593239","value:  4.2784810<br />mean: 0.9594162","value:  4.4303797<br />mean: 0.9597849","value:  4.5822785<br />mean: 0.9603825","value:  4.7341772<br />mean: 0.9611615","value:  4.8860759<br />mean: 0.9620741","value:  5.0379747<br />mean: 0.9630730","value:  5.1898734<br />mean: 0.9641103","value:  5.3417722<br />mean: 0.9651387","value:  5.4936709<br />mean: 0.9661104","value:  5.6455696<br />mean: 0.9669779","value:  5.7974684<br />mean: 0.9676937","value:  5.9493671<br />mean: 0.9682100","value:  6.1012658<br />mean: 0.9684609","value:  6.2531646<br />mean: 0.9684060","value:  6.4050633<br />mean: 0.9681371","value:  6.5569620<br />mean: 0.9677531","value:  6.7088608<br />mean: 0.9673529","value:  6.8607595<br />mean: 0.9670356","value:  7.0126582<br />mean: 0.9668988","value:  7.1645570<br />mean: 0.9668012","value:  7.3164557<br />mean: 0.9666088","value:  7.4683544<br />mean: 0.9663403","value:  7.6202532<br />mean: 0.9660142","value:  7.7721519<br />mean: 0.9656490","value:  7.9240506<br />mean: 0.9652633","value:  8.0759494<br />mean: 0.9648757","value:  8.2278481<br />mean: 0.9645047","value:  8.3797468<br />mean: 0.9641688","value:  8.5316456<br />mean: 0.9638867","value:  8.6835443<br />mean: 0.9636768","value:  8.8354430<br />mean: 0.9635578","value:  8.9873418<br />mean: 0.9635481","value:  9.1392405<br />mean: 0.9637352","value:  9.2911392<br />mean: 0.9641663","value:  9.4430380<br />mean: 0.9647524","value:  9.5949367<br />mean: 0.9654041","value:  9.7468354<br />mean: 0.9660320","value:  9.8987342<br />mean: 0.9665465","value: 10.0506329<br />mean: 0.9668733","value: 10.2025316<br />mean: 0.9671414","value: 10.3544304<br />mean: 0.9673907","value: 10.5063291<br />mean: 0.9676064","value: 10.6582278<br />mean: 0.9677736","value: 10.8101266<br />mean: 0.9678776","value: 10.9620253<br />mean: 0.9679035","value: 11.1139241<br />mean: 0.9678603","value: 11.2658228<br />mean: 0.9677929","value: 11.4177215<br />mean: 0.9676929","value: 11.5696203<br />mean: 0.9675490","value: 11.7215190<br />mean: 0.9673499","value: 11.8734177<br />mean: 0.9670844","value: 12.0253165<br />mean: 0.9667417","value: 12.1772152<br />mean: 0.9663356","value: 12.3291139<br />mean: 0.9658768","value: 12.4810127<br />mean: 0.9653653","value: 12.6329114<br />mean: 0.9648009","value: 12.7848101<br />mean: 0.9641834","value: 12.9367089<br />mean: 0.9635128","value: 13.0886076<br />mean: 0.9627889","value: 13.2405063<br />mean: 0.9620116","value: 13.3924051<br />mean: 0.9611808","value: 13.5443038<br />mean: 0.9602963","value: 13.6962025<br />mean: 0.9593580","value: 13.8481013<br />mean: 0.9583659","value: 14.0000000<br />mean: 0.9573196"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.940929669671804,0.942396912860616,0.94380478986158,0.94515540908206,0.946450878929422,0.947693307811029,0.948884804134248,0.950027476306443,0.951123432734979,0.952174781827221,0.953182074844533,0.95412872066963,0.955013631982848,0.955841827408725,0.956618325571798,0.957348145096605,0.958036304607685,0.958687822729575,0.959307718086812,0.959901009303935,0.960418429724403,0.960759172499595,0.960971165782293,0.961108633100831,0.961225797983548,0.961376883958779,0.961616114554863,0.961946044538879,0.962293780469905,0.962654874731559,0.963026701515709,0.963406635014224,0.96379204941897,0.964180318921816,0.96456881771463,0.96495491998928,0.965335999937633,0.965709431751557,0.96607258962292,0.966422847743591,0.966761166429202,0.967099077414964,0.967433320792695,0.967758867339561,0.968070687832728,0.96836375304936,0.968631806324237,0.968877062622495,0.969112432732957,0.969351027290979,0.969603794097994,0.96986870589583,0.970140972494525,0.970415999072115,0.970689190806638,0.970955952876129,0.971211690458624,0.971451808732161,0.971671712874775,0.971866808064503,0.972032903690837,0.972178784291962,0.972309908667797,0.972426525199919,0.972528882269904,0.97261722825933,0.972691811549772,0.972752880522808,0.972800683560014,0.972835469042967,0.972857485353245,0.972866980872423,0.972864203982078,0.972849403063787,0.972822826499126,0.972784722669674,0.972735339957005,0.972674926742697,0.972603731408327,0.972522897275839],"text":["value:  0.2658700<br />mean: 0.9409297","value:  0.2856481<br />mean: 0.9423969","value:  0.3054261<br />mean: 0.9438048","value:  0.3252042<br />mean: 0.9451554","value:  0.3449823<br />mean: 0.9464509","value:  0.3647604<br />mean: 0.9476933","value:  0.3845385<br />mean: 0.9488848","value:  0.4043166<br />mean: 0.9500275","value:  0.4240947<br />mean: 0.9511234","value:  0.4438728<br />mean: 0.9521748","value:  0.4636508<br />mean: 0.9531821","value:  0.4834289<br />mean: 0.9541287","value:  0.5032070<br />mean: 0.9550136","value:  0.5229851<br />mean: 0.9558418","value:  0.5427632<br />mean: 0.9566183","value:  0.5625413<br />mean: 0.9573481","value:  0.5823194<br />mean: 0.9580363","value:  0.6020975<br />mean: 0.9586878","value:  0.6218755<br />mean: 0.9593077","value:  0.6416536<br />mean: 0.9599010","value:  0.6614317<br />mean: 0.9604184","value:  0.6812098<br />mean: 0.9607592","value:  0.7009879<br />mean: 0.9609712","value:  0.7207660<br />mean: 0.9611086","value:  0.7405441<br />mean: 0.9612258","value:  0.7603222<br />mean: 0.9613769","value:  0.7801002<br />mean: 0.9616161","value:  0.7998783<br />mean: 0.9619460","value:  0.8196564<br />mean: 0.9622938","value:  0.8394345<br />mean: 0.9626549","value:  0.8592126<br />mean: 0.9630267","value:  0.8789907<br />mean: 0.9634066","value:  0.8987688<br />mean: 0.9637920","value:  0.9185469<br />mean: 0.9641803","value:  0.9383249<br />mean: 0.9645688","value:  0.9581030<br />mean: 0.9649549","value:  0.9778811<br />mean: 0.9653360","value:  0.9976592<br />mean: 0.9657094","value:  1.0174373<br />mean: 0.9660726","value:  1.0372154<br />mean: 0.9664228","value:  1.0569935<br />mean: 0.9667612","value:  1.0767716<br />mean: 0.9670991","value:  1.0965496<br />mean: 0.9674333","value:  1.1163277<br />mean: 0.9677589","value:  1.1361058<br />mean: 0.9680707","value:  1.1558839<br />mean: 0.9683638","value:  1.1756620<br />mean: 0.9686318","value:  1.1954401<br />mean: 0.9688771","value:  1.2152182<br />mean: 0.9691124","value:  1.2349963<br />mean: 0.9693510","value:  1.2547743<br />mean: 0.9696038","value:  1.2745524<br />mean: 0.9698687","value:  1.2943305<br />mean: 0.9701410","value:  1.3141086<br />mean: 0.9704160","value:  1.3338867<br />mean: 0.9706892","value:  1.3536648<br />mean: 0.9709560","value:  1.3734429<br />mean: 0.9712117","value:  1.3932210<br />mean: 0.9714518","value:  1.4129990<br />mean: 0.9716717","value:  1.4327771<br />mean: 0.9718668","value:  1.4525552<br />mean: 0.9720329","value:  1.4723333<br />mean: 0.9721788","value:  1.4921114<br />mean: 0.9723099","value:  1.5118895<br />mean: 0.9724265","value:  1.5316676<br />mean: 0.9725289","value:  1.5514457<br />mean: 0.9726172","value:  1.5712237<br />mean: 0.9726918","value:  1.5910018<br />mean: 0.9727529","value:  1.6107799<br />mean: 0.9728007","value:  1.6305580<br />mean: 0.9728355","value:  1.6503361<br />mean: 0.9728575","value:  1.6701142<br />mean: 0.9728670","value:  1.6898923<br />mean: 0.9728642","value:  1.7096704<br />mean: 0.9728494","value:  1.7294484<br />mean: 0.9728228","value:  1.7492265<br />mean: 0.9727847","value:  1.7690046<br />mean: 0.9727353","value:  1.7887827<br />mean: 0.9726749","value:  1.8085608<br />mean: 0.9726037","value:  1.8283389<br />mean: 0.9725229"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.960548705724041,0.958408296321075,0.956433819898065,0.954619149220126,0.952958157052372,0.951444716159917,0.950072699307876,0.948835979261364,0.947728428785495,0.946743920645383,0.945876327606144,0.945119522432892,0.944467377890741,0.943913766744806,0.94358929181099,0.94370628477163,0.944205230231155,0.945020869836783,0.946087945235735,0.947341198075231,0.948715370002492,0.950145202664736,0.951565437709184,0.952910816783057,0.954116081533575,0.955115973607956,0.955845234653422,0.9562147275621,0.956173323474889,0.955844273499422,0.955360467850014,0.954854796740981,0.954460150386639,0.954307625567103,0.954211032524417,0.95399230426524,0.953675078995124,0.95328299491962,0.952839690244282,0.952368803174661,0.951893971916308,0.951438834674778,0.95102702965562,0.950682195064388,0.950427969106633,0.950287989987908,0.950285895913765,0.950546725869478,0.951142272737075,0.951948627094316,0.952840869554328,0.953694080730241,0.954383341235182,0.954803722718173,0.955123741567647,0.955403293504999,0.95563069818523,0.955794275263342,0.955882344394336,0.955883225233213,0.955807812108763,0.955698527525223,0.955544106164562,0.95533075237724,0.955044670513716,0.954672064924452,0.95419972996935,0.953644143791875,0.953018474682668,0.952322739348672,0.951556954496829,0.950721136834083,0.949815303067377,0.948839469903656,0.947793654049861,0.946677872212936,0.945492141099825,0.944236477417472,0.942910897872819,0.941515419172809],"text":["value:  2.0000000<br />mean: 0.9605487","value:  2.1518987<br />mean: 0.9584083","value:  2.3037975<br />mean: 0.9564338","value:  2.4556962<br />mean: 0.9546191","value:  2.6075949<br />mean: 0.9529582","value:  2.7594937<br />mean: 0.9514447","value:  2.9113924<br />mean: 0.9500727","value:  3.0632911<br />mean: 0.9488360","value:  3.2151899<br />mean: 0.9477284","value:  3.3670886<br />mean: 0.9467439","value:  3.5189873<br />mean: 0.9458763","value:  3.6708861<br />mean: 0.9451195","value:  3.8227848<br />mean: 0.9444674","value:  3.9746835<br />mean: 0.9439138","value:  4.1265823<br />mean: 0.9435893","value:  4.2784810<br />mean: 0.9437063","value:  4.4303797<br />mean: 0.9442052","value:  4.5822785<br />mean: 0.9450209","value:  4.7341772<br />mean: 0.9460879","value:  4.8860759<br />mean: 0.9473412","value:  5.0379747<br />mean: 0.9487154","value:  5.1898734<br />mean: 0.9501452","value:  5.3417722<br />mean: 0.9515654","value:  5.4936709<br />mean: 0.9529108","value:  5.6455696<br />mean: 0.9541161","value:  5.7974684<br />mean: 0.9551160","value:  5.9493671<br />mean: 0.9558452","value:  6.1012658<br />mean: 0.9562147","value:  6.2531646<br />mean: 0.9561733","value:  6.4050633<br />mean: 0.9558443","value:  6.5569620<br />mean: 0.9553605","value:  6.7088608<br />mean: 0.9548548","value:  6.8607595<br />mean: 0.9544602","value:  7.0126582<br />mean: 0.9543076","value:  7.1645570<br />mean: 0.9542110","value:  7.3164557<br />mean: 0.9539923","value:  7.4683544<br />mean: 0.9536751","value:  7.6202532<br />mean: 0.9532830","value:  7.7721519<br />mean: 0.9528397","value:  7.9240506<br />mean: 0.9523688","value:  8.0759494<br />mean: 0.9518940","value:  8.2278481<br />mean: 0.9514388","value:  8.3797468<br />mean: 0.9510270","value:  8.5316456<br />mean: 0.9506822","value:  8.6835443<br />mean: 0.9504280","value:  8.8354430<br />mean: 0.9502880","value:  8.9873418<br />mean: 0.9502859","value:  9.1392405<br />mean: 0.9505467","value:  9.2911392<br />mean: 0.9511423","value:  9.4430380<br />mean: 0.9519486","value:  9.5949367<br />mean: 0.9528409","value:  9.7468354<br />mean: 0.9536941","value:  9.8987342<br />mean: 0.9543833","value: 10.0506329<br />mean: 0.9548037","value: 10.2025316<br />mean: 0.9551237","value: 10.3544304<br />mean: 0.9554033","value: 10.5063291<br />mean: 0.9556307","value: 10.6582278<br />mean: 0.9557943","value: 10.8101266<br />mean: 0.9558823","value: 10.9620253<br />mean: 0.9558832","value: 11.1139241<br />mean: 0.9558078","value: 11.2658228<br />mean: 0.9556985","value: 11.4177215<br />mean: 0.9555441","value: 11.5696203<br />mean: 0.9553308","value: 11.7215190<br />mean: 0.9550447","value: 11.8734177<br />mean: 0.9546721","value: 12.0253165<br />mean: 0.9541997","value: 12.1772152<br />mean: 0.9536441","value: 12.3291139<br />mean: 0.9530185","value: 12.4810127<br />mean: 0.9523227","value: 12.6329114<br />mean: 0.9515570","value: 12.7848101<br />mean: 0.9507211","value: 12.9367089<br />mean: 0.9498153","value: 13.0886076<br />mean: 0.9488395","value: 13.2405063<br />mean: 0.9477937","value: 13.3924051<br />mean: 0.9466779","value: 13.5443038<br />mean: 0.9454921","value: 13.6962025<br />mean: 0.9442365","value: 13.8481013<br />mean: 0.9429109","value: 14.0000000<br />mean: 0.9415154"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.917054489766249,0.919262883599128,0.921379124811071,0.923406528217502,0.925348408633848,0.927208080875537,0.928988859757993,0.930694060096644,0.932326996706915,0.933890984404233,0.9353868175122,0.936787609613828,0.938091710369379,0.939307369176314,0.940442835432094,0.941506358534181,0.942506187880034,0.943450572867117,0.944347762892888,0.945206007354811,0.945949603885133,0.946422446422798,0.946697797193718,0.9468586404197,0.94698796032255,0.947168741124073,0.947483967046074,0.947936626776358,0.948413663112022,0.948908585216788,0.949417729233352,0.949937431304412,0.950464027572666,0.95099385418081,0.951523247271541,0.952048542987557,0.952566077471556,0.953072186866234,0.953563207314288,0.954035474958415,0.954490552606648,0.954945429561551,0.955395561456357,0.955833826448391,0.956253102694978,0.95664626835344,0.957000591856937,0.957314459885014,0.957611918395372,0.95791758212405,0.958248627624395,0.95859215102818,0.958941825910702,0.959292553735583,0.959639235966444,0.959976774066905,0.960300069500588,0.960604023731114,0.960883538222104,0.961133514437178,0.961349323658133,0.961541317335423,0.961715711715882,0.961872623920757,0.962012171071296,0.962134470288745,0.962239638694351,0.962327793409361,0.962399051555023,0.962453530252582,0.962491346623287,0.962512617788383,0.962517460869118,0.96250599298674,0.962478331262494,0.962434592817628,0.962374894773389,0.962299354251024,0.962208088371779,0.962102416616673],"text":["value:  0.2658700<br />mean: 0.9170545","value:  0.2856481<br />mean: 0.9192629","value:  0.3054261<br />mean: 0.9213791","value:  0.3252042<br />mean: 0.9234065","value:  0.3449823<br />mean: 0.9253484","value:  0.3647604<br />mean: 0.9272081","value:  0.3845385<br />mean: 0.9289889","value:  0.4043166<br />mean: 0.9306941","value:  0.4240947<br />mean: 0.9323270","value:  0.4438728<br />mean: 0.9338910","value:  0.4636508<br />mean: 0.9353868","value:  0.4834289<br />mean: 0.9367876","value:  0.5032070<br />mean: 0.9380917","value:  0.5229851<br />mean: 0.9393074","value:  0.5427632<br />mean: 0.9404428","value:  0.5625413<br />mean: 0.9415064","value:  0.5823194<br />mean: 0.9425062","value:  0.6020975<br />mean: 0.9434506","value:  0.6218755<br />mean: 0.9443478","value:  0.6416536<br />mean: 0.9452060","value:  0.6614317<br />mean: 0.9459496","value:  0.6812098<br />mean: 0.9464224","value:  0.7009879<br />mean: 0.9466978","value:  0.7207660<br />mean: 0.9468586","value:  0.7405441<br />mean: 0.9469880","value:  0.7603222<br />mean: 0.9471687","value:  0.7801002<br />mean: 0.9474840","value:  0.7998783<br />mean: 0.9479366","value:  0.8196564<br />mean: 0.9484137","value:  0.8394345<br />mean: 0.9489086","value:  0.8592126<br />mean: 0.9494177","value:  0.8789907<br />mean: 0.9499374","value:  0.8987688<br />mean: 0.9504640","value:  0.9185469<br />mean: 0.9509939","value:  0.9383249<br />mean: 0.9515232","value:  0.9581030<br />mean: 0.9520485","value:  0.9778811<br />mean: 0.9525661","value:  0.9976592<br />mean: 0.9530722","value:  1.0174373<br />mean: 0.9535632","value:  1.0372154<br />mean: 0.9540355","value:  1.0569935<br />mean: 0.9544906","value:  1.0767716<br />mean: 0.9549454","value:  1.0965496<br />mean: 0.9553956","value:  1.1163277<br />mean: 0.9558338","value:  1.1361058<br />mean: 0.9562531","value:  1.1558839<br />mean: 0.9566463","value:  1.1756620<br />mean: 0.9570006","value:  1.1954401<br />mean: 0.9573145","value:  1.2152182<br />mean: 0.9576119","value:  1.2349963<br />mean: 0.9579176","value:  1.2547743<br />mean: 0.9582486","value:  1.2745524<br />mean: 0.9585922","value:  1.2943305<br />mean: 0.9589418","value:  1.3141086<br />mean: 0.9592926","value:  1.3338867<br />mean: 0.9596392","value:  1.3536648<br />mean: 0.9599768","value:  1.3734429<br />mean: 0.9603001","value:  1.3932210<br />mean: 0.9606040","value:  1.4129990<br />mean: 0.9608835","value:  1.4327771<br />mean: 0.9611335","value:  1.4525552<br />mean: 0.9613493","value:  1.4723333<br />mean: 0.9615413","value:  1.4921114<br />mean: 0.9617157","value:  1.5118895<br />mean: 0.9618726","value:  1.5316676<br />mean: 0.9620122","value:  1.5514457<br />mean: 0.9621345","value:  1.5712237<br />mean: 0.9622396","value:  1.5910018<br />mean: 0.9623278","value:  1.6107799<br />mean: 0.9623991","value:  1.6305580<br />mean: 0.9624535","value:  1.6503361<br />mean: 0.9624913","value:  1.6701142<br />mean: 0.9625126","value:  1.6898923<br />mean: 0.9625175","value:  1.7096704<br />mean: 0.9625060","value:  1.7294484<br />mean: 0.9624783","value:  1.7492265<br />mean: 0.9624346","value:  1.7690046<br />mean: 0.9623749","value:  1.7887827<br />mean: 0.9622994","value:  1.8085608<br />mean: 0.9622081","value:  1.8283389<br />mean: 0.9621024"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.941966392311125,0.939121454296481,0.936497225615682,0.934085472321016,0.931877960464772,0.929866456099242,0.928042725276713,0.926398534049476,0.92492564846982,0.923615834590034,0.922460858462409,0.921452486139233,0.920582483672796,0.919842617115388,0.919408146865859,0.91956402938882,0.920230408321566,0.92131972026154,0.92274440180618,0.924416889552927,0.926249620099221,0.928155030042502,0.930045555980211,0.931833634509788,0.933431702228673,0.934752195734307,0.935707551624129,0.936176596651271,0.936086954114642,0.935606425785021,0.934916192642079,0.934197435665491,0.93363133583493,0.933396633066149,0.933240122391966,0.932919374537192,0.932466444406167,0.93191338690323,0.931292256932721,0.93063510939898,0.929973999206348,0.929340981259162,0.928768110461765,0.928287441718494,0.92793102993369,0.927730930011694,0.927719196856844,0.928068336698689,0.928878274515227,0.929978604924057,0.931197525842438,0.932363235187629,0.933303930876889,0.933875560755104,0.934312627973573,0.934696693206505,0.935009706461306,0.935233617745382,0.935350377066139,0.935341934430984,0.935223607418016,0.935058252000464,0.93483024763924,0.934520252834197,0.934108926085188,0.933576925892067,0.932905740642888,0.932118583783571,0.931233934426164,0.930251759216799,0.92917202480161,0.927994697826729,0.926719744938289,0.925347132782422,0.923876828005262,0.922308797252941,0.920643007171592,0.918879424407348,0.917018015606342,0.915058747414706],"text":["value:  2.0000000<br />mean: 0.9419664","value:  2.1518987<br />mean: 0.9391215","value:  2.3037975<br />mean: 0.9364972","value:  2.4556962<br />mean: 0.9340855","value:  2.6075949<br />mean: 0.9318780","value:  2.7594937<br />mean: 0.9298665","value:  2.9113924<br />mean: 0.9280427","value:  3.0632911<br />mean: 0.9263985","value:  3.2151899<br />mean: 0.9249256","value:  3.3670886<br />mean: 0.9236158","value:  3.5189873<br />mean: 0.9224609","value:  3.6708861<br />mean: 0.9214525","value:  3.8227848<br />mean: 0.9205825","value:  3.9746835<br />mean: 0.9198426","value:  4.1265823<br />mean: 0.9194081","value:  4.2784810<br />mean: 0.9195640","value:  4.4303797<br />mean: 0.9202304","value:  4.5822785<br />mean: 0.9213197","value:  4.7341772<br />mean: 0.9227444","value:  4.8860759<br />mean: 0.9244169","value:  5.0379747<br />mean: 0.9262496","value:  5.1898734<br />mean: 0.9281550","value:  5.3417722<br />mean: 0.9300456","value:  5.4936709<br />mean: 0.9318336","value:  5.6455696<br />mean: 0.9334317","value:  5.7974684<br />mean: 0.9347522","value:  5.9493671<br />mean: 0.9357076","value:  6.1012658<br />mean: 0.9361766","value:  6.2531646<br />mean: 0.9360870","value:  6.4050633<br />mean: 0.9356064","value:  6.5569620<br />mean: 0.9349162","value:  6.7088608<br />mean: 0.9341974","value:  6.8607595<br />mean: 0.9336313","value:  7.0126582<br />mean: 0.9333966","value:  7.1645570<br />mean: 0.9332401","value:  7.3164557<br />mean: 0.9329194","value:  7.4683544<br />mean: 0.9324664","value:  7.6202532<br />mean: 0.9319134","value:  7.7721519<br />mean: 0.9312923","value:  7.9240506<br />mean: 0.9306351","value:  8.0759494<br />mean: 0.9299740","value:  8.2278481<br />mean: 0.9293410","value:  8.3797468<br />mean: 0.9287681","value:  8.5316456<br />mean: 0.9282874","value:  8.6835443<br />mean: 0.9279310","value:  8.8354430<br />mean: 0.9277309","value:  8.9873418<br />mean: 0.9277192","value:  9.1392405<br />mean: 0.9280683","value:  9.2911392<br />mean: 0.9288783","value:  9.4430380<br />mean: 0.9299786","value:  9.5949367<br />mean: 0.9311975","value:  9.7468354<br />mean: 0.9323632","value:  9.8987342<br />mean: 0.9333039","value: 10.0506329<br />mean: 0.9338756","value: 10.2025316<br />mean: 0.9343126","value: 10.3544304<br />mean: 0.9346967","value: 10.5063291<br />mean: 0.9350097","value: 10.6582278<br />mean: 0.9352336","value: 10.8101266<br />mean: 0.9353504","value: 10.9620253<br />mean: 0.9353419","value: 11.1139241<br />mean: 0.9352236","value: 11.2658228<br />mean: 0.9350583","value: 11.4177215<br />mean: 0.9348302","value: 11.5696203<br />mean: 0.9345203","value: 11.7215190<br />mean: 0.9341089","value: 11.8734177<br />mean: 0.9335769","value: 12.0253165<br />mean: 0.9329057","value: 12.1772152<br />mean: 0.9321186","value: 12.3291139<br />mean: 0.9312339","value: 12.4810127<br />mean: 0.9302518","value: 12.6329114<br />mean: 0.9291720","value: 12.7848101<br />mean: 0.9279947","value: 12.9367089<br />mean: 0.9267197","value: 13.0886076<br />mean: 0.9253471","value: 13.2405063<br />mean: 0.9238768","value: 13.3924051<br />mean: 0.9223088","value: 13.5443038<br />mean: 0.9206430","value: 13.6962025<br />mean: 0.9188794","value: 13.8481013<br />mean: 0.9170180","value: 14.0000000<br />mean: 0.9150587"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.884235096067867,0.887043152311079,0.889737852414381,0.892323192837084,0.894803170038501,0.897181780477942,0.899463020614719,0.901650886908145,0.90374937581753,0.905762483802188,0.907691216406185,0.909503695230065,0.911197910515294,0.912783590954799,0.914270465241506,0.915668262068342,0.916986710128235,0.918235538114109,0.919424474718892,0.920563248635511,0.921561810494229,0.922234611673041,0.922668769168996,0.922962955952673,0.923215844994652,0.923526109265513,0.923992421735835,0.924617582614442,0.925266228509965,0.925931425025499,0.92660963345884,0.927297315107785,0.927990931270129,0.928686943243668,0.929381812326198,0.930071999815514,0.930753967009412,0.931424175205688,0.932079085702137,0.932715159796556,0.933334798796208,0.933956698232972,0.934573470074139,0.935174715764816,0.935750036750112,0.936289034475131,0.936776363040173,0.937213313547283,0.937629555016466,0.93805534337713,0.938512939450308,0.9389896176704,0.939476788106316,0.939967079189186,0.940453119350141,0.94092753702031,0.941382960630822,0.941812018612808,0.942207339397398,0.94256155141572,0.942867949212626,0.943141120365575,0.943389933694872,0.943614633607522,0.943815464510527,0.943992670810892,0.944146496915622,0.944277187231721,0.944384986166193,0.944470138126041,0.944532887518271,0.944573478749886,0.944592156227891,0.944589164359289,0.944564747551086,0.944519150210285,0.94445261674389,0.944365391558905,0.944257719062335,0.944131542633776],"text":["value:  0.2658700<br />mean: 0.8842351","value:  0.2856481<br />mean: 0.8870432","value:  0.3054261<br />mean: 0.8897379","value:  0.3252042<br />mean: 0.8923232","value:  0.3449823<br />mean: 0.8948032","value:  0.3647604<br />mean: 0.8971818","value:  0.3845385<br />mean: 0.8994630","value:  0.4043166<br />mean: 0.9016509","value:  0.4240947<br />mean: 0.9037494","value:  0.4438728<br />mean: 0.9057625","value:  0.4636508<br />mean: 0.9076912","value:  0.4834289<br />mean: 0.9095037","value:  0.5032070<br />mean: 0.9111979","value:  0.5229851<br />mean: 0.9127836","value:  0.5427632<br />mean: 0.9142705","value:  0.5625413<br />mean: 0.9156683","value:  0.5823194<br />mean: 0.9169867","value:  0.6020975<br />mean: 0.9182355","value:  0.6218755<br />mean: 0.9194245","value:  0.6416536<br />mean: 0.9205632","value:  0.6614317<br />mean: 0.9215618","value:  0.6812098<br />mean: 0.9222346","value:  0.7009879<br />mean: 0.9226688","value:  0.7207660<br />mean: 0.9229630","value:  0.7405441<br />mean: 0.9232158","value:  0.7603222<br />mean: 0.9235261","value:  0.7801002<br />mean: 0.9239924","value:  0.7998783<br />mean: 0.9246176","value:  0.8196564<br />mean: 0.9252662","value:  0.8394345<br />mean: 0.9259314","value:  0.8592126<br />mean: 0.9266096","value:  0.8789907<br />mean: 0.9272973","value:  0.8987688<br />mean: 0.9279909","value:  0.9185469<br />mean: 0.9286869","value:  0.9383249<br />mean: 0.9293818","value:  0.9581030<br />mean: 0.9300720","value:  0.9778811<br />mean: 0.9307540","value:  0.9976592<br />mean: 0.9314242","value:  1.0174373<br />mean: 0.9320791","value:  1.0372154<br />mean: 0.9327152","value:  1.0569935<br />mean: 0.9333348","value:  1.0767716<br />mean: 0.9339567","value:  1.0965496<br />mean: 0.9345735","value:  1.1163277<br />mean: 0.9351747","value:  1.1361058<br />mean: 0.9357500","value:  1.1558839<br />mean: 0.9362890","value:  1.1756620<br />mean: 0.9367764","value:  1.1954401<br />mean: 0.9372133","value:  1.2152182<br />mean: 0.9376296","value:  1.2349963<br />mean: 0.9380553","value:  1.2547743<br />mean: 0.9385129","value:  1.2745524<br />mean: 0.9389896","value:  1.2943305<br />mean: 0.9394768","value:  1.3141086<br />mean: 0.9399671","value:  1.3338867<br />mean: 0.9404531","value:  1.3536648<br />mean: 0.9409275","value:  1.3734429<br />mean: 0.9413830","value:  1.3932210<br />mean: 0.9418120","value:  1.4129990<br />mean: 0.9422073","value:  1.4327771<br />mean: 0.9425616","value:  1.4525552<br />mean: 0.9428679","value:  1.4723333<br />mean: 0.9431411","value:  1.4921114<br />mean: 0.9433899","value:  1.5118895<br />mean: 0.9436146","value:  1.5316676<br />mean: 0.9438155","value:  1.5514457<br />mean: 0.9439927","value:  1.5712237<br />mean: 0.9441465","value:  1.5910018<br />mean: 0.9442772","value:  1.6107799<br />mean: 0.9443850","value:  1.6305580<br />mean: 0.9444701","value:  1.6503361<br />mean: 0.9445329","value:  1.6701142<br />mean: 0.9445735","value:  1.6898923<br />mean: 0.9445922","value:  1.7096704<br />mean: 0.9445892","value:  1.7294484<br />mean: 0.9445647","value:  1.7492265<br />mean: 0.9445192","value:  1.7690046<br />mean: 0.9444526","value:  1.7887827<br />mean: 0.9443654","value:  1.8085608<br />mean: 0.9442577","value:  1.8283389<br />mean: 0.9441315"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y4","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.945582197477704,0.942781404522607,0.940198606407741,0.937825688184371,0.93565453490376,0.933677031617172,0.931885063375872,0.930270515231124,0.928825272234191,0.927541219436339,0.92641024188883,0.92542422464293,0.924575052749902,0.92385461126101,0.923435795533618,0.92359970222622,0.924267546211095,0.925352939573437,0.926769494398441,0.928430822771301,0.930250536777208,0.932142248501359,0.934019570028946,0.935796113445162,0.937385490835203,0.938701314284262,0.939657195877531,0.940134517487568,0.940064102625718,0.939610060212522,0.938949435106372,0.938259272165658,0.937716616248772,0.93749610508014,0.937346931296311,0.937030597776548,0.936579631402252,0.936026559054827,0.935403907615676,0.9347442039662,0.934079974987804,0.933443747561889,0.932868048569859,0.932385404893117,0.932028343413064,0.931829391011104,0.93182107456864,0.932167237964877,0.932959401794161,0.93403351990453,0.935224231843313,0.936366177157837,0.93729399539543,0.937870169786083,0.938332464456531,0.938755508387195,0.939112845004038,0.939378017733023,0.939524570000113,0.939526045231272,0.939398626447592,0.939223227114913,0.938984215988978,0.938661288172706,0.938234138769015,0.937682462880826,0.936986837305521,0.936172066615925,0.935257629933626,0.934243286225049,0.93312879445662,0.931913913594767,0.930598402605915,0.92918202045649,0.92766452611292,0.92604567854163,0.924325236709046,0.922502959581596,0.920578606125705,0.9185519353078],"text":["value:  2.0000000<br />mean: 0.9455822","value:  2.1518987<br />mean: 0.9427814","value:  2.3037975<br />mean: 0.9401986","value:  2.4556962<br />mean: 0.9378257","value:  2.6075949<br />mean: 0.9356545","value:  2.7594937<br />mean: 0.9336770","value:  2.9113924<br />mean: 0.9318851","value:  3.0632911<br />mean: 0.9302705","value:  3.2151899<br />mean: 0.9288253","value:  3.3670886<br />mean: 0.9275412","value:  3.5189873<br />mean: 0.9264102","value:  3.6708861<br />mean: 0.9254242","value:  3.8227848<br />mean: 0.9245751","value:  3.9746835<br />mean: 0.9238546","value:  4.1265823<br />mean: 0.9234358","value:  4.2784810<br />mean: 0.9235997","value:  4.4303797<br />mean: 0.9242675","value:  4.5822785<br />mean: 0.9253529","value:  4.7341772<br />mean: 0.9267695","value:  4.8860759<br />mean: 0.9284308","value:  5.0379747<br />mean: 0.9302505","value:  5.1898734<br />mean: 0.9321422","value:  5.3417722<br />mean: 0.9340196","value:  5.4936709<br />mean: 0.9357961","value:  5.6455696<br />mean: 0.9373855","value:  5.7974684<br />mean: 0.9387013","value:  5.9493671<br />mean: 0.9396572","value:  6.1012658<br />mean: 0.9401345","value:  6.2531646<br />mean: 0.9400641","value:  6.4050633<br />mean: 0.9396101","value:  6.5569620<br />mean: 0.9389494","value:  6.7088608<br />mean: 0.9382593","value:  6.8607595<br />mean: 0.9377166","value:  7.0126582<br />mean: 0.9374961","value:  7.1645570<br />mean: 0.9373469","value:  7.3164557<br />mean: 0.9370306","value:  7.4683544<br />mean: 0.9365796","value:  7.6202532<br />mean: 0.9360266","value:  7.7721519<br />mean: 0.9354039","value:  7.9240506<br />mean: 0.9347442","value:  8.0759494<br />mean: 0.9340800","value:  8.2278481<br />mean: 0.9334437","value:  8.3797468<br />mean: 0.9328680","value:  8.5316456<br />mean: 0.9323854","value:  8.6835443<br />mean: 0.9320283","value:  8.8354430<br />mean: 0.9318294","value:  8.9873418<br />mean: 0.9318211","value:  9.1392405<br />mean: 0.9321672","value:  9.2911392<br />mean: 0.9329594","value:  9.4430380<br />mean: 0.9340335","value:  9.5949367<br />mean: 0.9352242","value:  9.7468354<br />mean: 0.9363662","value:  9.8987342<br />mean: 0.9372940","value: 10.0506329<br />mean: 0.9378702","value: 10.2025316<br />mean: 0.9383325","value: 10.3544304<br />mean: 0.9387555","value: 10.5063291<br />mean: 0.9391128","value: 10.6582278<br />mean: 0.9393780","value: 10.8101266<br />mean: 0.9395246","value: 10.9620253<br />mean: 0.9395260","value: 11.1139241<br />mean: 0.9393986","value: 11.2658228<br />mean: 0.9392232","value: 11.4177215<br />mean: 0.9389842","value: 11.5696203<br />mean: 0.9386613","value: 11.7215190<br />mean: 0.9382341","value: 11.8734177<br />mean: 0.9376825","value: 12.0253165<br />mean: 0.9369868","value: 12.1772152<br />mean: 0.9361721","value: 12.3291139<br />mean: 0.9352576","value: 12.4810127<br />mean: 0.9342433","value: 12.6329114<br />mean: 0.9331288","value: 12.7848101<br />mean: 0.9319139","value: 12.9367089<br />mean: 0.9305984","value: 13.0886076<br />mean: 0.9291820","value: 13.2405063<br />mean: 0.9276645","value: 13.3924051<br />mean: 0.9260457","value: 13.5443038<br />mean: 0.9243252","value: 13.6962025<br />mean: 0.9225030","value: 13.8481013<br />mean: 0.9205786","value: 14.0000000<br />mean: 0.9185519"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.88854929657084,0.891316348527354,0.893974443706989,0.896527258148192,0.898978467889413,0.901331748969098,0.903590777425695,0.905759229297653,0.907840780623419,0.909839107441441,0.911755136348124,0.913559562803955,0.915250535046,0.916836991542794,0.918327870762873,0.919732111174772,0.921058651247029,0.922316429448179,0.923514384246756,0.924661454111299,0.925674061798061,0.926380205998559,0.926860820768693,0.927207557487384,0.927512067533549,0.92786600228611,0.928361013123987,0.928998321990585,0.929650139311903,0.930310830239128,0.930977973726065,0.931649148726522,0.932321934194306,0.932993909083226,0.933662652347087,0.934325742939698,0.934980759814865,0.935625281926397,0.936256888228099,0.936873157673781,0.937476418076955,0.938081166384966,0.938679930285993,0.9392627743349,0.939819763086549,0.940340961095804,0.940812883414418,0.941238137070709,0.941643185777152,0.942054966210534,0.942493689902712,0.942949194142678,0.943413749827965,0.943880616552316,0.944343053909478,0.944794321493194,0.945227678897209,0.945636385715266,0.946013701541112,0.946352885968489,0.946647789588095,0.946911226464017,0.947151128143933,0.947367804847082,0.947561566792706,0.947732724200045,0.947881587288339,0.948008466276828,0.948113671384754,0.948197512831355,0.948260300835873,0.948302345617548,0.94832395739562,0.94832544638933,0.948307122817919,0.948269296900625,0.948212278856691,0.948136378905356,0.948041907265861,0.947930771585147],"text":["value:  0.2658700<br />mean: 0.8885493","value:  0.2856481<br />mean: 0.8913163","value:  0.3054261<br />mean: 0.8939744","value:  0.3252042<br />mean: 0.8965273","value:  0.3449823<br />mean: 0.8989785","value:  0.3647604<br />mean: 0.9013317","value:  0.3845385<br />mean: 0.9035908","value:  0.4043166<br />mean: 0.9057592","value:  0.4240947<br />mean: 0.9078408","value:  0.4438728<br />mean: 0.9098391","value:  0.4636508<br />mean: 0.9117551","value:  0.4834289<br />mean: 0.9135596","value:  0.5032070<br />mean: 0.9152505","value:  0.5229851<br />mean: 0.9168370","value:  0.5427632<br />mean: 0.9183279","value:  0.5625413<br />mean: 0.9197321","value:  0.5823194<br />mean: 0.9210587","value:  0.6020975<br />mean: 0.9223164","value:  0.6218755<br />mean: 0.9235144","value:  0.6416536<br />mean: 0.9246615","value:  0.6614317<br />mean: 0.9256741","value:  0.6812098<br />mean: 0.9263802","value:  0.7009879<br />mean: 0.9268608","value:  0.7207660<br />mean: 0.9272076","value:  0.7405441<br />mean: 0.9275121","value:  0.7603222<br />mean: 0.9278660","value:  0.7801002<br />mean: 0.9283610","value:  0.7998783<br />mean: 0.9289983","value:  0.8196564<br />mean: 0.9296501","value:  0.8394345<br />mean: 0.9303108","value:  0.8592126<br />mean: 0.9309780","value:  0.8789907<br />mean: 0.9316491","value:  0.8987688<br />mean: 0.9323219","value:  0.9185469<br />mean: 0.9329939","value:  0.9383249<br />mean: 0.9336627","value:  0.9581030<br />mean: 0.9343257","value:  0.9778811<br />mean: 0.9349808","value:  0.9976592<br />mean: 0.9356253","value:  1.0174373<br />mean: 0.9362569","value:  1.0372154<br />mean: 0.9368732","value:  1.0569935<br />mean: 0.9374764","value:  1.0767716<br />mean: 0.9380812","value:  1.0965496<br />mean: 0.9386799","value:  1.1163277<br />mean: 0.9392628","value:  1.1361058<br />mean: 0.9398198","value:  1.1558839<br />mean: 0.9403410","value:  1.1756620<br />mean: 0.9408129","value:  1.1954401<br />mean: 0.9412381","value:  1.2152182<br />mean: 0.9416432","value:  1.2349963<br />mean: 0.9420550","value:  1.2547743<br />mean: 0.9424937","value:  1.2745524<br />mean: 0.9429492","value:  1.2943305<br />mean: 0.9434137","value:  1.3141086<br />mean: 0.9438806","value:  1.3338867<br />mean: 0.9443431","value:  1.3536648<br />mean: 0.9447943","value:  1.3734429<br />mean: 0.9452277","value:  1.3932210<br />mean: 0.9456364","value:  1.4129990<br />mean: 0.9460137","value:  1.4327771<br />mean: 0.9463529","value:  1.4525552<br />mean: 0.9466478","value:  1.4723333<br />mean: 0.9469112","value:  1.4921114<br />mean: 0.9471511","value:  1.5118895<br />mean: 0.9473678","value:  1.5316676<br />mean: 0.9475616","value:  1.5514457<br />mean: 0.9477327","value:  1.5712237<br />mean: 0.9478816","value:  1.5910018<br />mean: 0.9480085","value:  1.6107799<br />mean: 0.9481137","value:  1.6305580<br />mean: 0.9481975","value:  1.6503361<br />mean: 0.9482603","value:  1.6701142<br />mean: 0.9483023","value:  1.6898923<br />mean: 0.9483240","value:  1.7096704<br />mean: 0.9483254","value:  1.7294484<br />mean: 0.9483071","value:  1.7492265<br />mean: 0.9482693","value:  1.7690046<br />mean: 0.9482123","value:  1.7887827<br />mean: 0.9481364","value:  1.8085608<br />mean: 0.9480419","value:  1.8283389<br />mean: 0.9479308"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y5","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.982342493636168,0.981462775445393,0.980651499394463,0.979906131080897,0.979224136102213,0.978602980055933,0.978040128539575,0.977533047150659,0.977079201486705,0.976676057145231,0.976321079723759,0.976011734819806,0.975745488030892,0.975519804954538,0.975388644346523,0.975439736741571,0.975648495629576,0.975987961695802,0.976431175625517,0.976951178103985,0.977521009816471,0.978113711448242,0.978702323684562,0.979259887210697,0.979759442711913,0.980174030873475,0.980476692380648,0.980630633789391,0.98061481552301,0.980480126730028,0.980281430317623,0.980073589192975,0.979911466263265,0.979849181957202,0.979809549336569,0.979718909605223,0.979587144401793,0.979424135364905,0.979239764133187,0.979043912345267,0.978846461639773,0.978657293655332,0.978486290030571,0.978343332404119,0.978238302414602,0.978181081700649,0.978181551900887,0.978291840783468,0.978541817269345,0.978879768286424,0.979253559843692,0.979611057950138,0.979900128614753,0.980077433854185,0.980218151440632,0.98034584286254,0.980452126493618,0.980528620707577,0.980566943878126,0.980558714378974,0.98050898121491,0.98044324099883,0.980356635860626,0.980242837021677,0.980095515703363,0.979908343127064,0.979675265569753,0.979404024252774,0.979100691920893,0.97876518811404,0.978397432372145,0.977997344235138,0.977564843242949,0.977099848935508,0.976602280852744,0.976072058534587,0.975509101520968,0.974913329351816,0.97428466156706,0.973623017706632],"text":["value:  2.0000000<br />mean: 0.9823425","value:  2.1518987<br />mean: 0.9814628","value:  2.3037975<br />mean: 0.9806515","value:  2.4556962<br />mean: 0.9799061","value:  2.6075949<br />mean: 0.9792241","value:  2.7594937<br />mean: 0.9786030","value:  2.9113924<br />mean: 0.9780401","value:  3.0632911<br />mean: 0.9775330","value:  3.2151899<br />mean: 0.9770792","value:  3.3670886<br />mean: 0.9766761","value:  3.5189873<br />mean: 0.9763211","value:  3.6708861<br />mean: 0.9760117","value:  3.8227848<br />mean: 0.9757455","value:  3.9746835<br />mean: 0.9755198","value:  4.1265823<br />mean: 0.9753886","value:  4.2784810<br />mean: 0.9754397","value:  4.4303797<br />mean: 0.9756485","value:  4.5822785<br />mean: 0.9759880","value:  4.7341772<br />mean: 0.9764312","value:  4.8860759<br />mean: 0.9769512","value:  5.0379747<br />mean: 0.9775210","value:  5.1898734<br />mean: 0.9781137","value:  5.3417722<br />mean: 0.9787023","value:  5.4936709<br />mean: 0.9792599","value:  5.6455696<br />mean: 0.9797594","value:  5.7974684<br />mean: 0.9801740","value:  5.9493671<br />mean: 0.9804767","value:  6.1012658<br />mean: 0.9806306","value:  6.2531646<br />mean: 0.9806148","value:  6.4050633<br />mean: 0.9804801","value:  6.5569620<br />mean: 0.9802814","value:  6.7088608<br />mean: 0.9800736","value:  6.8607595<br />mean: 0.9799115","value:  7.0126582<br />mean: 0.9798492","value:  7.1645570<br />mean: 0.9798095","value:  7.3164557<br />mean: 0.9797189","value:  7.4683544<br />mean: 0.9795871","value:  7.6202532<br />mean: 0.9794241","value:  7.7721519<br />mean: 0.9792398","value:  7.9240506<br />mean: 0.9790439","value:  8.0759494<br />mean: 0.9788465","value:  8.2278481<br />mean: 0.9786573","value:  8.3797468<br />mean: 0.9784863","value:  8.5316456<br />mean: 0.9783433","value:  8.6835443<br />mean: 0.9782383","value:  8.8354430<br />mean: 0.9781811","value:  8.9873418<br />mean: 0.9781816","value:  9.1392405<br />mean: 0.9782918","value:  9.2911392<br />mean: 0.9785418","value:  9.4430380<br />mean: 0.9788798","value:  9.5949367<br />mean: 0.9792536","value:  9.7468354<br />mean: 0.9796111","value:  9.8987342<br />mean: 0.9799001","value: 10.0506329<br />mean: 0.9800774","value: 10.2025316<br />mean: 0.9802182","value: 10.3544304<br />mean: 0.9803458","value: 10.5063291<br />mean: 0.9804521","value: 10.6582278<br />mean: 0.9805286","value: 10.8101266<br />mean: 0.9805669","value: 10.9620253<br />mean: 0.9805587","value: 11.1139241<br />mean: 0.9805090","value: 11.2658228<br />mean: 0.9804432","value: 11.4177215<br />mean: 0.9803566","value: 11.5696203<br />mean: 0.9802428","value: 11.7215190<br />mean: 0.9800955","value: 11.8734177<br />mean: 0.9799083","value: 12.0253165<br />mean: 0.9796753","value: 12.1772152<br />mean: 0.9794040","value: 12.3291139<br />mean: 0.9791007","value: 12.4810127<br />mean: 0.9787652","value: 12.6329114<br />mean: 0.9783974","value: 12.7848101<br />mean: 0.9779973","value: 12.9367089<br />mean: 0.9775648","value: 13.0886076<br />mean: 0.9770998","value: 13.2405063<br />mean: 0.9766023","value: 13.3924051<br />mean: 0.9760721","value: 13.5443038<br />mean: 0.9755091","value: 13.6962025<br />mean: 0.9749133","value: 13.8481013<br />mean: 0.9742847","value: 14.0000000<br />mean: 0.9736230"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.96422073738484,0.965104646605188,0.965954343956468,0.96677094123108,0.967555550221427,0.968309282719909,0.969033250518928,0.969728565410885,0.970396339188183,0.971037683643222,0.97165287056706,0.972232944032894,0.972777353070335,0.973288845352987,0.973770168554455,0.974224070348343,0.974653298408257,0.975060600407802,0.975448724020582,0.975820416920202,0.976150727802044,0.976388124571773,0.97655670387258,0.976683768980326,0.976796623170872,0.97692256972008,0.97708891190381,0.977295227020303,0.977502270845619,0.977708823242429,0.977914655555738,0.978119539130551,0.978323245311874,0.978525545444712,0.978726210874072,0.978925012944958,0.979121723002377,0.979316112391333,0.979507952456832,0.97969701454388,0.979884115180218,0.980072201532528,0.980258672685119,0.980440349647141,0.980614053427745,0.980776605036079,0.9809234565714,0.981055100404591,0.981180248572995,0.981307780963744,0.981444061856676,0.981584921767212,0.981728017090583,0.981871405712385,0.982013145518215,0.982151294393667,0.982283910224338,0.982409050895823,0.982524774293719,0.982629138303621,0.982720375241275,0.982802295775241,0.982877219745751,0.982945209651907,0.983006327992812,0.983060637267566,0.983108199975274,0.983149078615036,0.983183335685954,0.983211033687132,0.98323223511767,0.983247002476672,0.983255398263238,0.983257484976472,0.983253325115476,0.983242981179351,0.983226515667199,0.983203991078123,0.983175469911226,0.98314149985102],"text":["value:  0.2658700<br />mean: 0.9642207","value:  0.2856481<br />mean: 0.9651046","value:  0.3054261<br />mean: 0.9659543","value:  0.3252042<br />mean: 0.9667709","value:  0.3449823<br />mean: 0.9675556","value:  0.3647604<br />mean: 0.9683093","value:  0.3845385<br />mean: 0.9690333","value:  0.4043166<br />mean: 0.9697286","value:  0.4240947<br />mean: 0.9703963","value:  0.4438728<br />mean: 0.9710377","value:  0.4636508<br />mean: 0.9716529","value:  0.4834289<br />mean: 0.9722329","value:  0.5032070<br />mean: 0.9727774","value:  0.5229851<br />mean: 0.9732888","value:  0.5427632<br />mean: 0.9737702","value:  0.5625413<br />mean: 0.9742241","value:  0.5823194<br />mean: 0.9746533","value:  0.6020975<br />mean: 0.9750606","value:  0.6218755<br />mean: 0.9754487","value:  0.6416536<br />mean: 0.9758204","value:  0.6614317<br />mean: 0.9761507","value:  0.6812098<br />mean: 0.9763881","value:  0.7009879<br />mean: 0.9765567","value:  0.7207660<br />mean: 0.9766838","value:  0.7405441<br />mean: 0.9767966","value:  0.7603222<br />mean: 0.9769226","value:  0.7801002<br />mean: 0.9770889","value:  0.7998783<br />mean: 0.9772952","value:  0.8196564<br />mean: 0.9775023","value:  0.8394345<br />mean: 0.9777088","value:  0.8592126<br />mean: 0.9779147","value:  0.8789907<br />mean: 0.9781195","value:  0.8987688<br />mean: 0.9783232","value:  0.9185469<br />mean: 0.9785255","value:  0.9383249<br />mean: 0.9787262","value:  0.9581030<br />mean: 0.9789250","value:  0.9778811<br />mean: 0.9791217","value:  0.9976592<br />mean: 0.9793161","value:  1.0174373<br />mean: 0.9795080","value:  1.0372154<br />mean: 0.9796970","value:  1.0569935<br />mean: 0.9798841","value:  1.0767716<br />mean: 0.9800722","value:  1.0965496<br />mean: 0.9802587","value:  1.1163277<br />mean: 0.9804403","value:  1.1361058<br />mean: 0.9806141","value:  1.1558839<br />mean: 0.9807766","value:  1.1756620<br />mean: 0.9809235","value:  1.1954401<br />mean: 0.9810551","value:  1.2152182<br />mean: 0.9811802","value:  1.2349963<br />mean: 0.9813078","value:  1.2547743<br />mean: 0.9814441","value:  1.2745524<br />mean: 0.9815849","value:  1.2943305<br />mean: 0.9817280","value:  1.3141086<br />mean: 0.9818714","value:  1.3338867<br />mean: 0.9820131","value:  1.3536648<br />mean: 0.9821513","value:  1.3734429<br />mean: 0.9822839","value:  1.3932210<br />mean: 0.9824091","value:  1.4129990<br />mean: 0.9825248","value:  1.4327771<br />mean: 0.9826291","value:  1.4525552<br />mean: 0.9827204","value:  1.4723333<br />mean: 0.9828023","value:  1.4921114<br />mean: 0.9828772","value:  1.5118895<br />mean: 0.9829452","value:  1.5316676<br />mean: 0.9830063","value:  1.5514457<br />mean: 0.9830606","value:  1.5712237<br />mean: 0.9831082","value:  1.5910018<br />mean: 0.9831491","value:  1.6107799<br />mean: 0.9831833","value:  1.6305580<br />mean: 0.9832110","value:  1.6503361<br />mean: 0.9832322","value:  1.6701142<br />mean: 0.9832470","value:  1.6898923<br />mean: 0.9832554","value:  1.7096704<br />mean: 0.9832575","value:  1.7294484<br />mean: 0.9832533","value:  1.7492265<br />mean: 0.9832430","value:  1.7690046<br />mean: 0.9832265","value:  1.7887827<br />mean: 0.9832040","value:  1.8085608<br />mean: 0.9831755","value:  1.8283389<br />mean: 0.9831415"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y6","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.966871111363188,0.964866061665512,0.963016483537017,0.96131679096556,0.959761397938997,0.958344718445185,0.957061166471982,0.955905156007244,0.954871101038829,0.953953415554593,0.953146513542393,0.952444808990086,0.951842715885529,0.95133464821658,0.951039819255518,0.951152031138454,0.951616953088722,0.952375012419969,0.953366636445845,0.954532252480001,0.955812287836086,0.957147169827748,0.958477325768639,0.959743182972406,0.9608851687527,0.961843710423169,0.962559235297465,0.962954355747536,0.962992036924391,0.962778777569771,0.962428747616754,0.96205611699842,0.961775055647847,0.961698177506374,0.961663168898741,0.961515957825339,0.961277724408833,0.960969648771886,0.960612911037161,0.960228691327321,0.959838169765031,0.959462526472953,0.959122941573752,0.958840595190091,0.958636667444632,0.958532338460041,0.958548788358981,0.958794706535111,0.959331389679992,0.960050332742855,0.960842156345278,0.961597481108844,0.962206927655133,0.962579644147001,0.96287418222682,0.963139875756936,0.963358716680643,0.963512696941237,0.963583808482014,0.963554043246268,0.963434013810671,0.963278092294826,0.963076139889247,0.962814887073827,0.962481064328462,0.962061402133046,0.9615432086334,0.960942753778754,0.960272774305744,0.95953307899509,0.958723476627512,0.957843775983731,0.956893785844467,0.955873314990441,0.954782172202373,0.953620166260983,0.952387105946992,0.951082800041121,0.94970705732409,0.948259686576619],"text":["value:  2.0000000<br />mean: 0.9668711","value:  2.1518987<br />mean: 0.9648661","value:  2.3037975<br />mean: 0.9630165","value:  2.4556962<br />mean: 0.9613168","value:  2.6075949<br />mean: 0.9597614","value:  2.7594937<br />mean: 0.9583447","value:  2.9113924<br />mean: 0.9570612","value:  3.0632911<br />mean: 0.9559052","value:  3.2151899<br />mean: 0.9548711","value:  3.3670886<br />mean: 0.9539534","value:  3.5189873<br />mean: 0.9531465","value:  3.6708861<br />mean: 0.9524448","value:  3.8227848<br />mean: 0.9518427","value:  3.9746835<br />mean: 0.9513346","value:  4.1265823<br />mean: 0.9510398","value:  4.2784810<br />mean: 0.9511520","value:  4.4303797<br />mean: 0.9516170","value:  4.5822785<br />mean: 0.9523750","value:  4.7341772<br />mean: 0.9533666","value:  4.8860759<br />mean: 0.9545323","value:  5.0379747<br />mean: 0.9558123","value:  5.1898734<br />mean: 0.9571472","value:  5.3417722<br />mean: 0.9584773","value:  5.4936709<br />mean: 0.9597432","value:  5.6455696<br />mean: 0.9608852","value:  5.7974684<br />mean: 0.9618437","value:  5.9493671<br />mean: 0.9625592","value:  6.1012658<br />mean: 0.9629544","value:  6.2531646<br />mean: 0.9629920","value:  6.4050633<br />mean: 0.9627788","value:  6.5569620<br />mean: 0.9624287","value:  6.7088608<br />mean: 0.9620561","value:  6.8607595<br />mean: 0.9617751","value:  7.0126582<br />mean: 0.9616982","value:  7.1645570<br />mean: 0.9616632","value:  7.3164557<br />mean: 0.9615160","value:  7.4683544<br />mean: 0.9612777","value:  7.6202532<br />mean: 0.9609696","value:  7.7721519<br />mean: 0.9606129","value:  7.9240506<br />mean: 0.9602287","value:  8.0759494<br />mean: 0.9598382","value:  8.2278481<br />mean: 0.9594625","value:  8.3797468<br />mean: 0.9591229","value:  8.5316456<br />mean: 0.9588406","value:  8.6835443<br />mean: 0.9586367","value:  8.8354430<br />mean: 0.9585323","value:  8.9873418<br />mean: 0.9585488","value:  9.1392405<br />mean: 0.9587947","value:  9.2911392<br />mean: 0.9593314","value:  9.4430380<br />mean: 0.9600503","value:  9.5949367<br />mean: 0.9608422","value:  9.7468354<br />mean: 0.9615975","value:  9.8987342<br />mean: 0.9622069","value: 10.0506329<br />mean: 0.9625796","value: 10.2025316<br />mean: 0.9628742","value: 10.3544304<br />mean: 0.9631399","value: 10.5063291<br />mean: 0.9633587","value: 10.6582278<br />mean: 0.9635127","value: 10.8101266<br />mean: 0.9635838","value: 10.9620253<br />mean: 0.9635540","value: 11.1139241<br />mean: 0.9634340","value: 11.2658228<br />mean: 0.9632781","value: 11.4177215<br />mean: 0.9630761","value: 11.5696203<br />mean: 0.9628149","value: 11.7215190<br />mean: 0.9624811","value: 11.8734177<br />mean: 0.9620614","value: 12.0253165<br />mean: 0.9615432","value: 12.1772152<br />mean: 0.9609428","value: 12.3291139<br />mean: 0.9602728","value: 12.4810127<br />mean: 0.9595331","value: 12.6329114<br />mean: 0.9587235","value: 12.7848101<br />mean: 0.9578438","value: 12.9367089<br />mean: 0.9568938","value: 13.0886076<br />mean: 0.9558733","value: 13.2405063<br />mean: 0.9547822","value: 13.3924051<br />mean: 0.9536202","value: 13.5443038<br />mean: 0.9523871","value: 13.6962025<br />mean: 0.9510828","value: 13.8481013<br />mean: 0.9497071","value: 14.0000000<br />mean: 0.9482597"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.925020669078584,0.927227986524903,0.929346903171545,0.931380244918312,0.933330837665005,0.935201507311425,0.936995079757373,0.938714380902651,0.940362236647059,0.9419414728904,0.94345269348464,0.944872164343029,0.946198536320062,0.947439203664139,0.94860156062366,0.949693001447026,0.950720920382637,0.951692711678895,0.952615769584198,0.953497488346948,0.954273421919813,0.954809853706801,0.955168910749999,0.955421030322379,0.955636649696912,0.955886206146571,0.956240136944328,0.956696520110032,0.957152658418789,0.957605510987906,0.958054629017696,0.958499563708468,0.958939866260534,0.959375087874202,0.959804779749785,0.960228493087593,0.960645779087935,0.961056188951123,0.961459273877467,0.961854585067278,0.962244189632995,0.962635430633061,0.963022487616765,0.963398158283207,0.963755240331484,0.964086531460696,0.964381085540704,0.964638925968485,0.964880187327938,0.965125428109075,0.965387647162701,0.96565268642819,0.965916848389358,0.966177814025784,0.966433264317051,0.966680880242737,0.966918342782422,0.967143332915688,0.967353531622115,0.967546619881283,0.967720477835225,0.967879374593855,0.968025929588069,0.968160193220578,0.968282215894091,0.968392048011316,0.968489739974964,0.968575342187743,0.968648905052364,0.968710478971535,0.968760114347965,0.968797861584365,0.968823771083443,0.968837893247908,0.968840278480471,0.968830977183841,0.968810039760726,0.968777516613837,0.968733458145882,0.96867884338283],"text":["value:  0.2658700<br />mean: 0.9250207","value:  0.2856481<br />mean: 0.9272280","value:  0.3054261<br />mean: 0.9293469","value:  0.3252042<br />mean: 0.9313802","value:  0.3449823<br />mean: 0.9333308","value:  0.3647604<br />mean: 0.9352015","value:  0.3845385<br />mean: 0.9369951","value:  0.4043166<br />mean: 0.9387144","value:  0.4240947<br />mean: 0.9403622","value:  0.4438728<br />mean: 0.9419415","value:  0.4636508<br />mean: 0.9434527","value:  0.4834289<br />mean: 0.9448722","value:  0.5032070<br />mean: 0.9461985","value:  0.5229851<br />mean: 0.9474392","value:  0.5427632<br />mean: 0.9486016","value:  0.5625413<br />mean: 0.9496930","value:  0.5823194<br />mean: 0.9507209","value:  0.6020975<br />mean: 0.9516927","value:  0.6218755<br />mean: 0.9526158","value:  0.6416536<br />mean: 0.9534975","value:  0.6614317<br />mean: 0.9542734","value:  0.6812098<br />mean: 0.9548099","value:  0.7009879<br />mean: 0.9551689","value:  0.7207660<br />mean: 0.9554210","value:  0.7405441<br />mean: 0.9556366","value:  0.7603222<br />mean: 0.9558862","value:  0.7801002<br />mean: 0.9562401","value:  0.7998783<br />mean: 0.9566965","value:  0.8196564<br />mean: 0.9571527","value:  0.8394345<br />mean: 0.9576055","value:  0.8592126<br />mean: 0.9580546","value:  0.8789907<br />mean: 0.9584996","value:  0.8987688<br />mean: 0.9589399","value:  0.9185469<br />mean: 0.9593751","value:  0.9383249<br />mean: 0.9598048","value:  0.9581030<br />mean: 0.9602285","value:  0.9778811<br />mean: 0.9606458","value:  0.9976592<br />mean: 0.9610562","value:  1.0174373<br />mean: 0.9614593","value:  1.0372154<br />mean: 0.9618546","value:  1.0569935<br />mean: 0.9622442","value:  1.0767716<br />mean: 0.9626354","value:  1.0965496<br />mean: 0.9630225","value:  1.1163277<br />mean: 0.9633982","value:  1.1361058<br />mean: 0.9637552","value:  1.1558839<br />mean: 0.9640865","value:  1.1756620<br />mean: 0.9643811","value:  1.1954401<br />mean: 0.9646389","value:  1.2152182<br />mean: 0.9648802","value:  1.2349963<br />mean: 0.9651254","value:  1.2547743<br />mean: 0.9653876","value:  1.2745524<br />mean: 0.9656527","value:  1.2943305<br />mean: 0.9659168","value:  1.3141086<br />mean: 0.9661778","value:  1.3338867<br />mean: 0.9664333","value:  1.3536648<br />mean: 0.9666809","value:  1.3734429<br />mean: 0.9669183","value:  1.3932210<br />mean: 0.9671433","value:  1.4129990<br />mean: 0.9673535","value:  1.4327771<br />mean: 0.9675466","value:  1.4525552<br />mean: 0.9677205","value:  1.4723333<br />mean: 0.9678794","value:  1.4921114<br />mean: 0.9680259","value:  1.5118895<br />mean: 0.9681602","value:  1.5316676<br />mean: 0.9682822","value:  1.5514457<br />mean: 0.9683920","value:  1.5712237<br />mean: 0.9684897","value:  1.5910018<br />mean: 0.9685753","value:  1.6107799<br />mean: 0.9686489","value:  1.6305580<br />mean: 0.9687105","value:  1.6503361<br />mean: 0.9687601","value:  1.6701142<br />mean: 0.9687979","value:  1.6898923<br />mean: 0.9688238","value:  1.7096704<br />mean: 0.9688379","value:  1.7294484<br />mean: 0.9688403","value:  1.7492265<br />mean: 0.9688310","value:  1.7690046<br />mean: 0.9688100","value:  1.7887827<br />mean: 0.9687775","value:  1.8085608<br />mean: 0.9687335","value:  1.8283389<br />mean: 0.9686788"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y7","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.966871111363188,0.964866061665512,0.963016483537017,0.96131679096556,0.959761397938997,0.958344718445185,0.957061166471982,0.955905156007244,0.954871101038829,0.953953415554593,0.953146513542393,0.952444808990086,0.951842715885529,0.95133464821658,0.951039819255518,0.951152031138454,0.951616953088722,0.952375012419969,0.953366636445845,0.954532252480001,0.955812287836086,0.957147169827748,0.958477325768639,0.959743182972406,0.9608851687527,0.961843710423169,0.962559235297465,0.962954355747536,0.962992036924391,0.962778777569771,0.962428747616754,0.96205611699842,0.961775055647847,0.961698177506374,0.961663168898741,0.961515957825339,0.961277724408833,0.960969648771886,0.960612911037161,0.960228691327321,0.959838169765031,0.959462526472953,0.959122941573752,0.958840595190091,0.958636667444632,0.958532338460041,0.958548788358981,0.958794706535111,0.959331389679992,0.960050332742855,0.960842156345278,0.961597481108844,0.962206927655133,0.962579644147001,0.96287418222682,0.963139875756936,0.963358716680643,0.963512696941237,0.963583808482014,0.963554043246268,0.963434013810671,0.963278092294826,0.963076139889247,0.962814887073827,0.962481064328462,0.962061402133046,0.9615432086334,0.960942753778754,0.960272774305744,0.95953307899509,0.958723476627512,0.957843775983731,0.956893785844467,0.955873314990441,0.954782172202373,0.953620166260983,0.952387105946992,0.951082800041121,0.94970705732409,0.948259686576619],"text":["value:  2.0000000<br />mean: 0.9668711","value:  2.1518987<br />mean: 0.9648661","value:  2.3037975<br />mean: 0.9630165","value:  2.4556962<br />mean: 0.9613168","value:  2.6075949<br />mean: 0.9597614","value:  2.7594937<br />mean: 0.9583447","value:  2.9113924<br />mean: 0.9570612","value:  3.0632911<br />mean: 0.9559052","value:  3.2151899<br />mean: 0.9548711","value:  3.3670886<br />mean: 0.9539534","value:  3.5189873<br />mean: 0.9531465","value:  3.6708861<br />mean: 0.9524448","value:  3.8227848<br />mean: 0.9518427","value:  3.9746835<br />mean: 0.9513346","value:  4.1265823<br />mean: 0.9510398","value:  4.2784810<br />mean: 0.9511520","value:  4.4303797<br />mean: 0.9516170","value:  4.5822785<br />mean: 0.9523750","value:  4.7341772<br />mean: 0.9533666","value:  4.8860759<br />mean: 0.9545323","value:  5.0379747<br />mean: 0.9558123","value:  5.1898734<br />mean: 0.9571472","value:  5.3417722<br />mean: 0.9584773","value:  5.4936709<br />mean: 0.9597432","value:  5.6455696<br />mean: 0.9608852","value:  5.7974684<br />mean: 0.9618437","value:  5.9493671<br />mean: 0.9625592","value:  6.1012658<br />mean: 0.9629544","value:  6.2531646<br />mean: 0.9629920","value:  6.4050633<br />mean: 0.9627788","value:  6.5569620<br />mean: 0.9624287","value:  6.7088608<br />mean: 0.9620561","value:  6.8607595<br />mean: 0.9617751","value:  7.0126582<br />mean: 0.9616982","value:  7.1645570<br />mean: 0.9616632","value:  7.3164557<br />mean: 0.9615160","value:  7.4683544<br />mean: 0.9612777","value:  7.6202532<br />mean: 0.9609696","value:  7.7721519<br />mean: 0.9606129","value:  7.9240506<br />mean: 0.9602287","value:  8.0759494<br />mean: 0.9598382","value:  8.2278481<br />mean: 0.9594625","value:  8.3797468<br />mean: 0.9591229","value:  8.5316456<br />mean: 0.9588406","value:  8.6835443<br />mean: 0.9586367","value:  8.8354430<br />mean: 0.9585323","value:  8.9873418<br />mean: 0.9585488","value:  9.1392405<br />mean: 0.9587947","value:  9.2911392<br />mean: 0.9593314","value:  9.4430380<br />mean: 0.9600503","value:  9.5949367<br />mean: 0.9608422","value:  9.7468354<br />mean: 0.9615975","value:  9.8987342<br />mean: 0.9622069","value: 10.0506329<br />mean: 0.9625796","value: 10.2025316<br />mean: 0.9628742","value: 10.3544304<br />mean: 0.9631399","value: 10.5063291<br />mean: 0.9633587","value: 10.6582278<br />mean: 0.9635127","value: 10.8101266<br />mean: 0.9635838","value: 10.9620253<br />mean: 0.9635540","value: 11.1139241<br />mean: 0.9634340","value: 11.2658228<br />mean: 0.9632781","value: 11.4177215<br />mean: 0.9630761","value: 11.5696203<br />mean: 0.9628149","value: 11.7215190<br />mean: 0.9624811","value: 11.8734177<br />mean: 0.9620614","value: 12.0253165<br />mean: 0.9615432","value: 12.1772152<br />mean: 0.9609428","value: 12.3291139<br />mean: 0.9602728","value: 12.4810127<br />mean: 0.9595331","value: 12.6329114<br />mean: 0.9587235","value: 12.7848101<br />mean: 0.9578438","value: 12.9367089<br />mean: 0.9568938","value: 13.0886076<br />mean: 0.9558733","value: 13.2405063<br />mean: 0.9547822","value: 13.3924051<br />mean: 0.9536202","value: 13.5443038<br />mean: 0.9523871","value: 13.6962025<br />mean: 0.9510828","value: 13.8481013<br />mean: 0.9497071","value: 14.0000000<br />mean: 0.9482597"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.925020669078584,0.927227986524903,0.929346903171545,0.931380244918312,0.933330837665005,0.935201507311425,0.936995079757373,0.938714380902651,0.940362236647059,0.9419414728904,0.94345269348464,0.944872164343029,0.946198536320062,0.947439203664139,0.94860156062366,0.949693001447026,0.950720920382637,0.951692711678895,0.952615769584198,0.953497488346948,0.954273421919813,0.954809853706801,0.955168910749999,0.955421030322379,0.955636649696912,0.955886206146571,0.956240136944328,0.956696520110032,0.957152658418789,0.957605510987906,0.958054629017696,0.958499563708468,0.958939866260534,0.959375087874202,0.959804779749785,0.960228493087593,0.960645779087935,0.961056188951123,0.961459273877467,0.961854585067278,0.962244189632995,0.962635430633061,0.963022487616765,0.963398158283207,0.963755240331484,0.964086531460696,0.964381085540704,0.964638925968485,0.964880187327938,0.965125428109075,0.965387647162701,0.96565268642819,0.965916848389358,0.966177814025784,0.966433264317051,0.966680880242737,0.966918342782422,0.967143332915688,0.967353531622115,0.967546619881283,0.967720477835225,0.967879374593855,0.968025929588069,0.968160193220578,0.968282215894091,0.968392048011316,0.968489739974964,0.968575342187743,0.968648905052364,0.968710478971535,0.968760114347965,0.968797861584365,0.968823771083443,0.968837893247908,0.968840278480471,0.968830977183841,0.968810039760726,0.968777516613837,0.968733458145882,0.96867884338283],"text":["value:  0.2658700<br />mean: 0.9250207","value:  0.2856481<br />mean: 0.9272280","value:  0.3054261<br />mean: 0.9293469","value:  0.3252042<br />mean: 0.9313802","value:  0.3449823<br />mean: 0.9333308","value:  0.3647604<br />mean: 0.9352015","value:  0.3845385<br />mean: 0.9369951","value:  0.4043166<br />mean: 0.9387144","value:  0.4240947<br />mean: 0.9403622","value:  0.4438728<br />mean: 0.9419415","value:  0.4636508<br />mean: 0.9434527","value:  0.4834289<br />mean: 0.9448722","value:  0.5032070<br />mean: 0.9461985","value:  0.5229851<br />mean: 0.9474392","value:  0.5427632<br />mean: 0.9486016","value:  0.5625413<br />mean: 0.9496930","value:  0.5823194<br />mean: 0.9507209","value:  0.6020975<br />mean: 0.9516927","value:  0.6218755<br />mean: 0.9526158","value:  0.6416536<br />mean: 0.9534975","value:  0.6614317<br />mean: 0.9542734","value:  0.6812098<br />mean: 0.9548099","value:  0.7009879<br />mean: 0.9551689","value:  0.7207660<br />mean: 0.9554210","value:  0.7405441<br />mean: 0.9556366","value:  0.7603222<br />mean: 0.9558862","value:  0.7801002<br />mean: 0.9562401","value:  0.7998783<br />mean: 0.9566965","value:  0.8196564<br />mean: 0.9571527","value:  0.8394345<br />mean: 0.9576055","value:  0.8592126<br />mean: 0.9580546","value:  0.8789907<br />mean: 0.9584996","value:  0.8987688<br />mean: 0.9589399","value:  0.9185469<br />mean: 0.9593751","value:  0.9383249<br />mean: 0.9598048","value:  0.9581030<br />mean: 0.9602285","value:  0.9778811<br />mean: 0.9606458","value:  0.9976592<br />mean: 0.9610562","value:  1.0174373<br />mean: 0.9614593","value:  1.0372154<br />mean: 0.9618546","value:  1.0569935<br />mean: 0.9622442","value:  1.0767716<br />mean: 0.9626354","value:  1.0965496<br />mean: 0.9630225","value:  1.1163277<br />mean: 0.9633982","value:  1.1361058<br />mean: 0.9637552","value:  1.1558839<br />mean: 0.9640865","value:  1.1756620<br />mean: 0.9643811","value:  1.1954401<br />mean: 0.9646389","value:  1.2152182<br />mean: 0.9648802","value:  1.2349963<br />mean: 0.9651254","value:  1.2547743<br />mean: 0.9653876","value:  1.2745524<br />mean: 0.9656527","value:  1.2943305<br />mean: 0.9659168","value:  1.3141086<br />mean: 0.9661778","value:  1.3338867<br />mean: 0.9664333","value:  1.3536648<br />mean: 0.9666809","value:  1.3734429<br />mean: 0.9669183","value:  1.3932210<br />mean: 0.9671433","value:  1.4129990<br />mean: 0.9673535","value:  1.4327771<br />mean: 0.9675466","value:  1.4525552<br />mean: 0.9677205","value:  1.4723333<br />mean: 0.9678794","value:  1.4921114<br />mean: 0.9680259","value:  1.5118895<br />mean: 0.9681602","value:  1.5316676<br />mean: 0.9682822","value:  1.5514457<br />mean: 0.9683920","value:  1.5712237<br />mean: 0.9684897","value:  1.5910018<br />mean: 0.9685753","value:  1.6107799<br />mean: 0.9686489","value:  1.6305580<br />mean: 0.9687105","value:  1.6503361<br />mean: 0.9687601","value:  1.6701142<br />mean: 0.9687979","value:  1.6898923<br />mean: 0.9688238","value:  1.7096704<br />mean: 0.9688379","value:  1.7294484<br />mean: 0.9688403","value:  1.7492265<br />mean: 0.9688310","value:  1.7690046<br />mean: 0.9688100","value:  1.7887827<br />mean: 0.9687775","value:  1.8085608<br />mean: 0.9687335","value:  1.8283389<br />mean: 0.9686788"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y8","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.961979417801692,0.959855802745958,0.957898028295943,0.956099886926756,0.954455171113507,0.952957673331308,0.951601186055269,0.950379501760501,0.949286412922114,0.948315712015218,0.947461191514924,0.946716643896344,0.946075861634586,0.945532637204762,0.94521952045137,0.945351988206699,0.945869628872563,0.946706202628705,0.947795469654872,0.949071190130806,0.950467124236254,0.95191703215096,0.953354674054668,0.954713810127123,0.955928200548071,0.956931605497255,0.95765778515442,0.958015106024153,0.95794883569208,0.957585744041471,0.95706271084839,0.956516615888904,0.956084338939075,0.955900878899579,0.955769237353345,0.955503512363736,0.955129884967993,0.954674536203352,0.954163647107053,0.953623398716334,0.953079972068434,0.952559548200592,0.952088308150045,0.951692432954033,0.951398103649794,0.951231501274566,0.951218806865588,0.95147800896216,0.952070609202073,0.952875695090569,0.953771424069596,0.954635953581101,0.955347441067033,0.955804861630709,0.956186492344298,0.956545917646542,0.956860823838804,0.957108897222454,0.957267824098857,0.95731529076938,0.9572638017248,0.957179522157586,0.957050536390204,0.956861128787232,0.956595583713249,0.956238185532831,0.95577390279507,0.955222009129118,0.954597601765777,0.953900467597082,0.953130393515068,0.952287166411772,0.951370573179229,0.950380400709473,0.949316435894541,0.948178465626467,0.946966276797287,0.945679656299036,0.944318391023749,0.942882267863463],"text":["value:  2.0000000<br />mean: 0.9619794","value:  2.1518987<br />mean: 0.9598558","value:  2.3037975<br />mean: 0.9578980","value:  2.4556962<br />mean: 0.9560999","value:  2.6075949<br />mean: 0.9544552","value:  2.7594937<br />mean: 0.9529577","value:  2.9113924<br />mean: 0.9516012","value:  3.0632911<br />mean: 0.9503795","value:  3.2151899<br />mean: 0.9492864","value:  3.3670886<br />mean: 0.9483157","value:  3.5189873<br />mean: 0.9474612","value:  3.6708861<br />mean: 0.9467166","value:  3.8227848<br />mean: 0.9460759","value:  3.9746835<br />mean: 0.9455326","value:  4.1265823<br />mean: 0.9452195","value:  4.2784810<br />mean: 0.9453520","value:  4.4303797<br />mean: 0.9458696","value:  4.5822785<br />mean: 0.9467062","value:  4.7341772<br />mean: 0.9477955","value:  4.8860759<br />mean: 0.9490712","value:  5.0379747<br />mean: 0.9504671","value:  5.1898734<br />mean: 0.9519170","value:  5.3417722<br />mean: 0.9533547","value:  5.4936709<br />mean: 0.9547138","value:  5.6455696<br />mean: 0.9559282","value:  5.7974684<br />mean: 0.9569316","value:  5.9493671<br />mean: 0.9576578","value:  6.1012658<br />mean: 0.9580151","value:  6.2531646<br />mean: 0.9579488","value:  6.4050633<br />mean: 0.9575857","value:  6.5569620<br />mean: 0.9570627","value:  6.7088608<br />mean: 0.9565166","value:  6.8607595<br />mean: 0.9560843","value:  7.0126582<br />mean: 0.9559009","value:  7.1645570<br />mean: 0.9557692","value:  7.3164557<br />mean: 0.9555035","value:  7.4683544<br />mean: 0.9551299","value:  7.6202532<br />mean: 0.9546745","value:  7.7721519<br />mean: 0.9541636","value:  7.9240506<br />mean: 0.9536234","value:  8.0759494<br />mean: 0.9530800","value:  8.2278481<br />mean: 0.9525595","value:  8.3797468<br />mean: 0.9520883","value:  8.5316456<br />mean: 0.9516924","value:  8.6835443<br />mean: 0.9513981","value:  8.8354430<br />mean: 0.9512315","value:  8.9873418<br />mean: 0.9512188","value:  9.1392405<br />mean: 0.9514780","value:  9.2911392<br />mean: 0.9520706","value:  9.4430380<br />mean: 0.9528757","value:  9.5949367<br />mean: 0.9537714","value:  9.7468354<br />mean: 0.9546360","value:  9.8987342<br />mean: 0.9553474","value: 10.0506329<br />mean: 0.9558049","value: 10.2025316<br />mean: 0.9561865","value: 10.3544304<br />mean: 0.9565459","value: 10.5063291<br />mean: 0.9568608","value: 10.6582278<br />mean: 0.9571089","value: 10.8101266<br />mean: 0.9572678","value: 10.9620253<br />mean: 0.9573153","value: 11.1139241<br />mean: 0.9572638","value: 11.2658228<br />mean: 0.9571795","value: 11.4177215<br />mean: 0.9570505","value: 11.5696203<br />mean: 0.9568611","value: 11.7215190<br />mean: 0.9565956","value: 11.8734177<br />mean: 0.9562382","value: 12.0253165<br />mean: 0.9557739","value: 12.1772152<br />mean: 0.9552220","value: 12.3291139<br />mean: 0.9545976","value: 12.4810127<br />mean: 0.9539005","value: 12.6329114<br />mean: 0.9531304","value: 12.7848101<br />mean: 0.9522872","value: 12.9367089<br />mean: 0.9513706","value: 13.0886076<br />mean: 0.9503804","value: 13.2405063<br />mean: 0.9493164","value: 13.3924051<br />mean: 0.9481785","value: 13.5443038<br />mean: 0.9469663","value: 13.6962025<br />mean: 0.9456797","value: 13.8481013<br />mean: 0.9443184","value: 14.0000000<br />mean: 0.9428823"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.919722150762299,0.921787110528606,0.923767701031858,0.925666920500535,0.927487767163114,0.929233239248073,0.930906334983891,0.932510052599046,0.934047390322017,0.935521346381281,0.936932694530462,0.938257726104115,0.939494894137996,0.940651375944557,0.941734348836249,0.942750990125524,0.943708477124835,0.944613987146634,0.945474697503371,0.9462977855075,0.947012157735324,0.947472514699843,0.947748108469285,0.947917270146268,0.948058330833411,0.948249621633334,0.948569473648657,0.949021790710759,0.949501529499719,0.950002033590229,0.950519268595388,0.951049200128295,0.951587793802049,0.95213101522975,0.952674830024496,0.953215203799387,0.953748102167523,0.954269490742002,0.954775335135922,0.955261600962385,0.955729503539966,0.956196085086951,0.95665719186855,0.957106103137678,0.957536098147251,0.957940456150184,0.958311221560441,0.958651885443707,0.958979159513884,0.959309993040875,0.959658990252779,0.960024735570474,0.960400659719304,0.960780330631243,0.961157316238267,0.96152518447235,0.961877503265467,0.962207840549593,0.962509764256704,0.962776842318774,0.963003206292389,0.96320109171907,0.96337812802173,0.963534684297908,0.963671129645147,0.963787833160985,0.963885163942964,0.963963491088623,0.964023183695505,0.964064610861148,0.964088141683093,0.964094145258881,0.964082990686053,0.964055047062148,0.964010683484708,0.963950269051272,0.963874172859382,0.963782764006577,0.963676411590398,0.963556696781831],"text":["value:  0.2658700<br />mean: 0.9197222","value:  0.2856481<br />mean: 0.9217871","value:  0.3054261<br />mean: 0.9237677","value:  0.3252042<br />mean: 0.9256669","value:  0.3449823<br />mean: 0.9274878","value:  0.3647604<br />mean: 0.9292332","value:  0.3845385<br />mean: 0.9309063","value:  0.4043166<br />mean: 0.9325101","value:  0.4240947<br />mean: 0.9340474","value:  0.4438728<br />mean: 0.9355213","value:  0.4636508<br />mean: 0.9369327","value:  0.4834289<br />mean: 0.9382577","value:  0.5032070<br />mean: 0.9394949","value:  0.5229851<br />mean: 0.9406514","value:  0.5427632<br />mean: 0.9417343","value:  0.5625413<br />mean: 0.9427510","value:  0.5823194<br />mean: 0.9437085","value:  0.6020975<br />mean: 0.9446140","value:  0.6218755<br />mean: 0.9454747","value:  0.6416536<br />mean: 0.9462978","value:  0.6614317<br />mean: 0.9470122","value:  0.6812098<br />mean: 0.9474725","value:  0.7009879<br />mean: 0.9477481","value:  0.7207660<br />mean: 0.9479173","value:  0.7405441<br />mean: 0.9480583","value:  0.7603222<br />mean: 0.9482496","value:  0.7801002<br />mean: 0.9485695","value:  0.7998783<br />mean: 0.9490218","value:  0.8196564<br />mean: 0.9495015","value:  0.8394345<br />mean: 0.9500020","value:  0.8592126<br />mean: 0.9505193","value:  0.8789907<br />mean: 0.9510492","value:  0.8987688<br />mean: 0.9515878","value:  0.9185469<br />mean: 0.9521310","value:  0.9383249<br />mean: 0.9526748","value:  0.9581030<br />mean: 0.9532152","value:  0.9778811<br />mean: 0.9537481","value:  0.9976592<br />mean: 0.9542695","value:  1.0174373<br />mean: 0.9547753","value:  1.0372154<br />mean: 0.9552616","value:  1.0569935<br />mean: 0.9557295","value:  1.0767716<br />mean: 0.9561961","value:  1.0965496<br />mean: 0.9566572","value:  1.1163277<br />mean: 0.9571061","value:  1.1361058<br />mean: 0.9575361","value:  1.1558839<br />mean: 0.9579405","value:  1.1756620<br />mean: 0.9583112","value:  1.1954401<br />mean: 0.9586519","value:  1.2152182<br />mean: 0.9589792","value:  1.2349963<br />mean: 0.9593100","value:  1.2547743<br />mean: 0.9596590","value:  1.2745524<br />mean: 0.9600247","value:  1.2943305<br />mean: 0.9604007","value:  1.3141086<br />mean: 0.9607803","value:  1.3338867<br />mean: 0.9611573","value:  1.3536648<br />mean: 0.9615252","value:  1.3734429<br />mean: 0.9618775","value:  1.3932210<br />mean: 0.9622078","value:  1.4129990<br />mean: 0.9625098","value:  1.4327771<br />mean: 0.9627768","value:  1.4525552<br />mean: 0.9630032","value:  1.4723333<br />mean: 0.9632011","value:  1.4921114<br />mean: 0.9633781","value:  1.5118895<br />mean: 0.9635347","value:  1.5316676<br />mean: 0.9636711","value:  1.5514457<br />mean: 0.9637878","value:  1.5712237<br />mean: 0.9638852","value:  1.5910018<br />mean: 0.9639635","value:  1.6107799<br />mean: 0.9640232","value:  1.6305580<br />mean: 0.9640646","value:  1.6503361<br />mean: 0.9640881","value:  1.6701142<br />mean: 0.9640941","value:  1.6898923<br />mean: 0.9640830","value:  1.7096704<br />mean: 0.9640550","value:  1.7294484<br />mean: 0.9640107","value:  1.7492265<br />mean: 0.9639503","value:  1.7690046<br />mean: 0.9638742","value:  1.7887827<br />mean: 0.9637828","value:  1.8085608<br />mean: 0.9636764","value:  1.8283389<br />mean: 0.9635567"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y9","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.961979417801692,0.959855802745958,0.957898028295943,0.956099886926756,0.954455171113507,0.952957673331308,0.951601186055269,0.950379501760501,0.949286412922114,0.948315712015218,0.947461191514924,0.946716643896344,0.946075861634586,0.945532637204762,0.94521952045137,0.945351988206699,0.945869628872563,0.946706202628705,0.947795469654872,0.949071190130806,0.950467124236254,0.95191703215096,0.953354674054668,0.954713810127123,0.955928200548071,0.956931605497255,0.95765778515442,0.958015106024153,0.95794883569208,0.957585744041471,0.95706271084839,0.956516615888904,0.956084338939075,0.955900878899579,0.955769237353345,0.955503512363736,0.955129884967993,0.954674536203352,0.954163647107053,0.953623398716334,0.953079972068434,0.952559548200592,0.952088308150045,0.951692432954033,0.951398103649794,0.951231501274566,0.951218806865588,0.95147800896216,0.952070609202073,0.952875695090569,0.953771424069596,0.954635953581101,0.955347441067033,0.955804861630709,0.956186492344298,0.956545917646542,0.956860823838804,0.957108897222454,0.957267824098857,0.95731529076938,0.9572638017248,0.957179522157586,0.957050536390204,0.956861128787232,0.956595583713249,0.956238185532831,0.95577390279507,0.955222009129118,0.954597601765777,0.953900467597082,0.953130393515068,0.952287166411772,0.951370573179229,0.950380400709473,0.949316435894541,0.948178465626467,0.946966276797287,0.945679656299036,0.944318391023749,0.942882267863463],"text":["value:  2.0000000<br />mean: 0.9619794","value:  2.1518987<br />mean: 0.9598558","value:  2.3037975<br />mean: 0.9578980","value:  2.4556962<br />mean: 0.9560999","value:  2.6075949<br />mean: 0.9544552","value:  2.7594937<br />mean: 0.9529577","value:  2.9113924<br />mean: 0.9516012","value:  3.0632911<br />mean: 0.9503795","value:  3.2151899<br />mean: 0.9492864","value:  3.3670886<br />mean: 0.9483157","value:  3.5189873<br />mean: 0.9474612","value:  3.6708861<br />mean: 0.9467166","value:  3.8227848<br />mean: 0.9460759","value:  3.9746835<br />mean: 0.9455326","value:  4.1265823<br />mean: 0.9452195","value:  4.2784810<br />mean: 0.9453520","value:  4.4303797<br />mean: 0.9458696","value:  4.5822785<br />mean: 0.9467062","value:  4.7341772<br />mean: 0.9477955","value:  4.8860759<br />mean: 0.9490712","value:  5.0379747<br />mean: 0.9504671","value:  5.1898734<br />mean: 0.9519170","value:  5.3417722<br />mean: 0.9533547","value:  5.4936709<br />mean: 0.9547138","value:  5.6455696<br />mean: 0.9559282","value:  5.7974684<br />mean: 0.9569316","value:  5.9493671<br />mean: 0.9576578","value:  6.1012658<br />mean: 0.9580151","value:  6.2531646<br />mean: 0.9579488","value:  6.4050633<br />mean: 0.9575857","value:  6.5569620<br />mean: 0.9570627","value:  6.7088608<br />mean: 0.9565166","value:  6.8607595<br />mean: 0.9560843","value:  7.0126582<br />mean: 0.9559009","value:  7.1645570<br />mean: 0.9557692","value:  7.3164557<br />mean: 0.9555035","value:  7.4683544<br />mean: 0.9551299","value:  7.6202532<br />mean: 0.9546745","value:  7.7721519<br />mean: 0.9541636","value:  7.9240506<br />mean: 0.9536234","value:  8.0759494<br />mean: 0.9530800","value:  8.2278481<br />mean: 0.9525595","value:  8.3797468<br />mean: 0.9520883","value:  8.5316456<br />mean: 0.9516924","value:  8.6835443<br />mean: 0.9513981","value:  8.8354430<br />mean: 0.9512315","value:  8.9873418<br />mean: 0.9512188","value:  9.1392405<br />mean: 0.9514780","value:  9.2911392<br />mean: 0.9520706","value:  9.4430380<br />mean: 0.9528757","value:  9.5949367<br />mean: 0.9537714","value:  9.7468354<br />mean: 0.9546360","value:  9.8987342<br />mean: 0.9553474","value: 10.0506329<br />mean: 0.9558049","value: 10.2025316<br />mean: 0.9561865","value: 10.3544304<br />mean: 0.9565459","value: 10.5063291<br />mean: 0.9568608","value: 10.6582278<br />mean: 0.9571089","value: 10.8101266<br />mean: 0.9572678","value: 10.9620253<br />mean: 0.9573153","value: 11.1139241<br />mean: 0.9572638","value: 11.2658228<br />mean: 0.9571795","value: 11.4177215<br />mean: 0.9570505","value: 11.5696203<br />mean: 0.9568611","value: 11.7215190<br />mean: 0.9565956","value: 11.8734177<br />mean: 0.9562382","value: 12.0253165<br />mean: 0.9557739","value: 12.1772152<br />mean: 0.9552220","value: 12.3291139<br />mean: 0.9545976","value: 12.4810127<br />mean: 0.9539005","value: 12.6329114<br />mean: 0.9531304","value: 12.7848101<br />mean: 0.9522872","value: 12.9367089<br />mean: 0.9513706","value: 13.0886076<br />mean: 0.9503804","value: 13.2405063<br />mean: 0.9493164","value: 13.3924051<br />mean: 0.9481785","value: 13.5443038<br />mean: 0.9469663","value: 13.6962025<br />mean: 0.9456797","value: 13.8481013<br />mean: 0.9443184","value: 14.0000000<br />mean: 0.9428823"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.919722150762299,0.921787110528606,0.923767701031858,0.925666920500535,0.927487767163114,0.929233239248073,0.930906334983891,0.932510052599046,0.934047390322017,0.935521346381281,0.936932694530462,0.938257726104115,0.939494894137996,0.940651375944557,0.941734348836249,0.942750990125524,0.943708477124835,0.944613987146634,0.945474697503371,0.9462977855075,0.947012157735324,0.947472514699843,0.947748108469285,0.947917270146268,0.948058330833411,0.948249621633334,0.948569473648657,0.949021790710759,0.949501529499719,0.950002033590229,0.950519268595388,0.951049200128295,0.951587793802049,0.95213101522975,0.952674830024496,0.953215203799387,0.953748102167523,0.954269490742002,0.954775335135922,0.955261600962385,0.955729503539966,0.956196085086951,0.95665719186855,0.957106103137678,0.957536098147251,0.957940456150184,0.958311221560441,0.958651885443707,0.958979159513884,0.959309993040875,0.959658990252779,0.960024735570474,0.960400659719304,0.960780330631243,0.961157316238267,0.96152518447235,0.961877503265467,0.962207840549593,0.962509764256704,0.962776842318774,0.963003206292389,0.96320109171907,0.96337812802173,0.963534684297908,0.963671129645147,0.963787833160985,0.963885163942964,0.963963491088623,0.964023183695505,0.964064610861148,0.964088141683093,0.964094145258881,0.964082990686053,0.964055047062148,0.964010683484708,0.963950269051272,0.963874172859382,0.963782764006577,0.963676411590398,0.963556696781831],"text":["value:  0.2658700<br />mean: 0.9197222","value:  0.2856481<br />mean: 0.9217871","value:  0.3054261<br />mean: 0.9237677","value:  0.3252042<br />mean: 0.9256669","value:  0.3449823<br />mean: 0.9274878","value:  0.3647604<br />mean: 0.9292332","value:  0.3845385<br />mean: 0.9309063","value:  0.4043166<br />mean: 0.9325101","value:  0.4240947<br />mean: 0.9340474","value:  0.4438728<br />mean: 0.9355213","value:  0.4636508<br />mean: 0.9369327","value:  0.4834289<br />mean: 0.9382577","value:  0.5032070<br />mean: 0.9394949","value:  0.5229851<br />mean: 0.9406514","value:  0.5427632<br />mean: 0.9417343","value:  0.5625413<br />mean: 0.9427510","value:  0.5823194<br />mean: 0.9437085","value:  0.6020975<br />mean: 0.9446140","value:  0.6218755<br />mean: 0.9454747","value:  0.6416536<br />mean: 0.9462978","value:  0.6614317<br />mean: 0.9470122","value:  0.6812098<br />mean: 0.9474725","value:  0.7009879<br />mean: 0.9477481","value:  0.7207660<br />mean: 0.9479173","value:  0.7405441<br />mean: 0.9480583","value:  0.7603222<br />mean: 0.9482496","value:  0.7801002<br />mean: 0.9485695","value:  0.7998783<br />mean: 0.9490218","value:  0.8196564<br />mean: 0.9495015","value:  0.8394345<br />mean: 0.9500020","value:  0.8592126<br />mean: 0.9505193","value:  0.8789907<br />mean: 0.9510492","value:  0.8987688<br />mean: 0.9515878","value:  0.9185469<br />mean: 0.9521310","value:  0.9383249<br />mean: 0.9526748","value:  0.9581030<br />mean: 0.9532152","value:  0.9778811<br />mean: 0.9537481","value:  0.9976592<br />mean: 0.9542695","value:  1.0174373<br />mean: 0.9547753","value:  1.0372154<br />mean: 0.9552616","value:  1.0569935<br />mean: 0.9557295","value:  1.0767716<br />mean: 0.9561961","value:  1.0965496<br />mean: 0.9566572","value:  1.1163277<br />mean: 0.9571061","value:  1.1361058<br />mean: 0.9575361","value:  1.1558839<br />mean: 0.9579405","value:  1.1756620<br />mean: 0.9583112","value:  1.1954401<br />mean: 0.9586519","value:  1.2152182<br />mean: 0.9589792","value:  1.2349963<br />mean: 0.9593100","value:  1.2547743<br />mean: 0.9596590","value:  1.2745524<br />mean: 0.9600247","value:  1.2943305<br />mean: 0.9604007","value:  1.3141086<br />mean: 0.9607803","value:  1.3338867<br />mean: 0.9611573","value:  1.3536648<br />mean: 0.9615252","value:  1.3734429<br />mean: 0.9618775","value:  1.3932210<br />mean: 0.9622078","value:  1.4129990<br />mean: 0.9625098","value:  1.4327771<br />mean: 0.9627768","value:  1.4525552<br />mean: 0.9630032","value:  1.4723333<br />mean: 0.9632011","value:  1.4921114<br />mean: 0.9633781","value:  1.5118895<br />mean: 0.9635347","value:  1.5316676<br />mean: 0.9636711","value:  1.5514457<br />mean: 0.9637878","value:  1.5712237<br />mean: 0.9638852","value:  1.5910018<br />mean: 0.9639635","value:  1.6107799<br />mean: 0.9640232","value:  1.6305580<br />mean: 0.9640646","value:  1.6503361<br />mean: 0.9640881","value:  1.6701142<br />mean: 0.9640941","value:  1.6898923<br />mean: 0.9640830","value:  1.7096704<br />mean: 0.9640550","value:  1.7294484<br />mean: 0.9640107","value:  1.7492265<br />mean: 0.9639503","value:  1.7690046<br />mean: 0.9638742","value:  1.7887827<br />mean: 0.9637828","value:  1.8085608<br />mean: 0.9636764","value:  1.8283389<br />mean: 0.9635567"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y10","hoverinfo":"text","frame":null},{"x":[2,2.15189873417722,2.30379746835443,2.45569620253165,2.60759493670886,2.75949367088608,2.91139240506329,3.06329113924051,3.21518987341772,3.36708860759494,3.51898734177215,3.67088607594937,3.82278481012658,3.9746835443038,4.12658227848101,4.27848101265823,4.43037974683544,4.58227848101266,4.73417721518987,4.88607594936709,5.0379746835443,5.18987341772152,5.34177215189873,5.49367088607595,5.64556962025316,5.79746835443038,5.94936708860759,6.10126582278481,6.25316455696203,6.40506329113924,6.55696202531646,6.70886075949367,6.86075949367089,7.0126582278481,7.16455696202532,7.31645569620253,7.46835443037975,7.62025316455696,7.77215189873418,7.92405063291139,8.07594936708861,8.22784810126582,8.37974683544304,8.53164556962025,8.68354430379747,8.83544303797468,8.9873417721519,9.13924050632911,9.29113924050633,9.44303797468354,9.59493670886076,9.74683544303798,9.89873417721519,10.0506329113924,10.2025316455696,10.3544303797468,10.5063291139241,10.6582278481013,10.8101265822785,10.9620253164557,11.1139240506329,11.2658227848101,11.4177215189873,11.5696202531646,11.7215189873418,11.873417721519,12.0253164556962,12.1772151898734,12.3291139240506,12.4810126582278,12.6329113924051,12.7848101265823,12.9367088607595,13.0886075949367,13.2405063291139,13.3924050632911,13.5443037974684,13.6962025316456,13.8481012658228,14],"y":[0.980782010285203,0.979854839052828,0.978999715007716,0.97821391767742,0.97749472658949,0.976839421271481,0.976245281250943,0.975709586055429,0.975229615212492,0.974802648249683,0.974425964694554,0.974096844074658,0.973812565917547,0.973570409750773,0.973428279744876,0.9734803226001,0.973700154675687,0.974058846004911,0.974527466621044,0.97507708655736,0.97567877584713,0.976303604523629,0.976922642620129,0.977506960169902,0.978027627206222,0.978455713762361,0.978762289871592,0.978906640807145,0.978863204294691,0.978688440682073,0.978443423233648,0.978189225213773,0.977986919886806,0.977896755819816,0.977833097266813,0.977714103198077,0.977550697756718,0.977353805085849,0.977134349328581,0.976903254628027,0.976671445127296,0.976449844969501,0.976249378297753,0.976080969255164,0.975955541984846,0.975884020629909,0.975877329333465,0.975992477121461,0.976261957594496,0.976629121557835,0.977036860208102,0.977428064741924,0.977745626355926,0.977941819312948,0.97809625210549,0.978235402679701,0.978351901075645,0.978438377333385,0.978487461492986,0.978491783594513,0.978456716096899,0.978406344643531,0.978335311210812,0.97823684822569,0.978104188115111,0.977930563306024,0.977709498046205,0.977449174727741,0.977156070390983,0.976830145232621,0.976471359449345,0.976079673237845,0.975655046794809,0.975197440316928,0.974706814000891,0.974183128043389,0.973626342641109,0.973036417990744,0.972413314288981,0.971756991732511],"text":["value:  2.0000000<br />mean: 0.9807820","value:  2.1518987<br />mean: 0.9798548","value:  2.3037975<br />mean: 0.9789997","value:  2.4556962<br />mean: 0.9782139","value:  2.6075949<br />mean: 0.9774947","value:  2.7594937<br />mean: 0.9768394","value:  2.9113924<br />mean: 0.9762453","value:  3.0632911<br />mean: 0.9757096","value:  3.2151899<br />mean: 0.9752296","value:  3.3670886<br />mean: 0.9748026","value:  3.5189873<br />mean: 0.9744260","value:  3.6708861<br />mean: 0.9740968","value:  3.8227848<br />mean: 0.9738126","value:  3.9746835<br />mean: 0.9735704","value:  4.1265823<br />mean: 0.9734283","value:  4.2784810<br />mean: 0.9734803","value:  4.4303797<br />mean: 0.9737002","value:  4.5822785<br />mean: 0.9740588","value:  4.7341772<br />mean: 0.9745275","value:  4.8860759<br />mean: 0.9750771","value:  5.0379747<br />mean: 0.9756788","value:  5.1898734<br />mean: 0.9763036","value:  5.3417722<br />mean: 0.9769226","value:  5.4936709<br />mean: 0.9775070","value:  5.6455696<br />mean: 0.9780276","value:  5.7974684<br />mean: 0.9784557","value:  5.9493671<br />mean: 0.9787623","value:  6.1012658<br />mean: 0.9789066","value:  6.2531646<br />mean: 0.9788632","value:  6.4050633<br />mean: 0.9786884","value:  6.5569620<br />mean: 0.9784434","value:  6.7088608<br />mean: 0.9781892","value:  6.8607595<br />mean: 0.9779869","value:  7.0126582<br />mean: 0.9778968","value:  7.1645570<br />mean: 0.9778331","value:  7.3164557<br />mean: 0.9777141","value:  7.4683544<br />mean: 0.9775507","value:  7.6202532<br />mean: 0.9773538","value:  7.7721519<br />mean: 0.9771343","value:  7.9240506<br />mean: 0.9769033","value:  8.0759494<br />mean: 0.9766714","value:  8.2278481<br />mean: 0.9764498","value:  8.3797468<br />mean: 0.9762494","value:  8.5316456<br />mean: 0.9760810","value:  8.6835443<br />mean: 0.9759555","value:  8.8354430<br />mean: 0.9758840","value:  8.9873418<br />mean: 0.9758773","value:  9.1392405<br />mean: 0.9759925","value:  9.2911392<br />mean: 0.9762620","value:  9.4430380<br />mean: 0.9766291","value:  9.5949367<br />mean: 0.9770369","value:  9.7468354<br />mean: 0.9774281","value:  9.8987342<br />mean: 0.9777456","value: 10.0506329<br />mean: 0.9779418","value: 10.2025316<br />mean: 0.9780963","value: 10.3544304<br />mean: 0.9782354","value: 10.5063291<br />mean: 0.9783519","value: 10.6582278<br />mean: 0.9784384","value: 10.8101266<br />mean: 0.9784875","value: 10.9620253<br />mean: 0.9784918","value: 11.1139241<br />mean: 0.9784567","value: 11.2658228<br />mean: 0.9784063","value: 11.4177215<br />mean: 0.9783353","value: 11.5696203<br />mean: 0.9782368","value: 11.7215190<br />mean: 0.9781042","value: 11.8734177<br />mean: 0.9779306","value: 12.0253165<br />mean: 0.9777095","value: 12.1772152<br />mean: 0.9774492","value: 12.3291139<br />mean: 0.9771561","value: 12.4810127<br />mean: 0.9768301","value: 12.6329114<br />mean: 0.9764714","value: 12.7848101<br />mean: 0.9760797","value: 12.9367089<br />mean: 0.9756550","value: 13.0886076<br />mean: 0.9751974","value: 13.2405063<br />mean: 0.9747068","value: 13.3924051<br />mean: 0.9741831","value: 13.5443038<br />mean: 0.9736263","value: 13.6962025<br />mean: 0.9730364","value: 13.8481013<br />mean: 0.9724133","value: 14.0000000<br />mean: 0.9717570"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y11","hoverinfo":"text","frame":null},{"x":[0.26586997034261,0.285648057899125,0.305426145455641,0.325204233012156,0.344982320568672,0.364760408125187,0.384538495681702,0.404316583238218,0.424094670794733,0.443872758351249,0.463650845907764,0.48342893346428,0.503207021020795,0.52298510857731,0.542763196133826,0.562541283690341,0.582319371246857,0.602097458803372,0.621875546359887,0.641653633916403,0.661431721472918,0.681209809029434,0.700987896585949,0.720765984142464,0.74054407169898,0.760322159255495,0.780100246812011,0.799878334368526,0.819656421925041,0.839434509481557,0.859212597038072,0.878990684594588,0.898768772151103,0.918546859707619,0.938324947264134,0.958103034820649,0.977881122377165,0.99765920993368,1.0174372974902,1.03721538504671,1.05699347260323,1.07677156015974,1.09654964771626,1.11632773527277,1.13610582282929,1.1558839103858,1.17566199794232,1.19544008549883,1.21521817305535,1.23499626061186,1.25477434816838,1.2745524357249,1.29433052328141,1.31410861083793,1.33388669839444,1.35366478595096,1.37344287350747,1.39322096106399,1.4129990486205,1.43277713617702,1.45255522373353,1.47233331129005,1.49211139884657,1.51188948640308,1.5316675739596,1.55144566151611,1.57122374907263,1.59100183662914,1.61077992418566,1.63055801174217,1.65033609929869,1.6701141868552,1.68989227441172,1.70967036196823,1.72944844952475,1.74922653708127,1.76900462463778,1.7887827121943,1.80856079975081,1.82833888730733],"y":[0.962137188581309,0.963006715192627,0.963841878691303,0.964643897663586,0.965413990695729,0.966153376373985,0.966863273284604,0.967544900013839,0.968199475147941,0.968828217273162,0.969431455158605,0.969999715235146,0.970532369827701,0.971032278872894,0.971502302307348,0.971945300067687,0.972364132090535,0.972761658312516,0.973140738670253,0.973504233100371,0.973824701713482,0.974045830299347,0.974194223095301,0.974299996055395,0.974393265133686,0.974504146284225,0.974662755461068,0.974870298366998,0.97508603144009,0.975307715872889,0.975534134436031,0.975764069900153,0.975996305035892,0.976229622613883,0.976462805404764,0.976694636179172,0.976923897707742,0.977149372761112,0.977369844109918,0.977584094524796,0.977792829318439,0.978002069742977,0.97820944971684,0.978411631541445,0.978605277518205,0.978787049948537,0.978952391088034,0.979102239801283,0.97924570595203,0.979392061541083,0.979548597943209,0.979712676221186,0.979881285269746,0.980051667512988,0.98022106537501,0.980386721279908,0.980545877651782,0.980695776914729,0.980833661492847,0.980956773810234,0.981062601089287,0.981156476864856,0.981241689313866,0.98131836610193,0.981386634894663,0.981446623357675,0.981498459156581,0.981542269956993,0.981578183424524,0.981606327224788,0.981626829023396,0.981639816485964,0.981645417278102,0.981643759065425,0.981634969513545,0.981619176288075,0.981596507054628,0.981567089478817,0.981531051226256,0.981489097769847],"text":["value:  0.2658700<br />mean: 0.9621372","value:  0.2856481<br />mean: 0.9630067","value:  0.3054261<br />mean: 0.9638419","value:  0.3252042<br />mean: 0.9646439","value:  0.3449823<br />mean: 0.9654140","value:  0.3647604<br />mean: 0.9661534","value:  0.3845385<br />mean: 0.9668633","value:  0.4043166<br />mean: 0.9675449","value:  0.4240947<br />mean: 0.9681995","value:  0.4438728<br />mean: 0.9688282","value:  0.4636508<br />mean: 0.9694315","value:  0.4834289<br />mean: 0.9699997","value:  0.5032070<br />mean: 0.9705324","value:  0.5229851<br />mean: 0.9710323","value:  0.5427632<br />mean: 0.9715023","value:  0.5625413<br />mean: 0.9719453","value:  0.5823194<br />mean: 0.9723641","value:  0.6020975<br />mean: 0.9727617","value:  0.6218755<br />mean: 0.9731407","value:  0.6416536<br />mean: 0.9735042","value:  0.6614317<br />mean: 0.9738247","value:  0.6812098<br />mean: 0.9740458","value:  0.7009879<br />mean: 0.9741942","value:  0.7207660<br />mean: 0.9743000","value:  0.7405441<br />mean: 0.9743933","value:  0.7603222<br />mean: 0.9745041","value:  0.7801002<br />mean: 0.9746628","value:  0.7998783<br />mean: 0.9748703","value:  0.8196564<br />mean: 0.9750860","value:  0.8394345<br />mean: 0.9753077","value:  0.8592126<br />mean: 0.9755341","value:  0.8789907<br />mean: 0.9757641","value:  0.8987688<br />mean: 0.9759963","value:  0.9185469<br />mean: 0.9762296","value:  0.9383249<br />mean: 0.9764628","value:  0.9581030<br />mean: 0.9766946","value:  0.9778811<br />mean: 0.9769239","value:  0.9976592<br />mean: 0.9771494","value:  1.0174373<br />mean: 0.9773698","value:  1.0372154<br />mean: 0.9775841","value:  1.0569935<br />mean: 0.9777928","value:  1.0767716<br />mean: 0.9780021","value:  1.0965496<br />mean: 0.9782094","value:  1.1163277<br />mean: 0.9784116","value:  1.1361058<br />mean: 0.9786053","value:  1.1558839<br />mean: 0.9787870","value:  1.1756620<br />mean: 0.9789524","value:  1.1954401<br />mean: 0.9791022","value:  1.2152182<br />mean: 0.9792457","value:  1.2349963<br />mean: 0.9793921","value:  1.2547743<br />mean: 0.9795486","value:  1.2745524<br />mean: 0.9797127","value:  1.2943305<br />mean: 0.9798813","value:  1.3141086<br />mean: 0.9800517","value:  1.3338867<br />mean: 0.9802211","value:  1.3536648<br />mean: 0.9803867","value:  1.3734429<br />mean: 0.9805459","value:  1.3932210<br />mean: 0.9806958","value:  1.4129990<br />mean: 0.9808337","value:  1.4327771<br />mean: 0.9809568","value:  1.4525552<br />mean: 0.9810626","value:  1.4723333<br />mean: 0.9811565","value:  1.4921114<br />mean: 0.9812417","value:  1.5118895<br />mean: 0.9813184","value:  1.5316676<br />mean: 0.9813866","value:  1.5514457<br />mean: 0.9814466","value:  1.5712237<br />mean: 0.9814985","value:  1.5910018<br />mean: 0.9815423","value:  1.6107799<br />mean: 0.9815782","value:  1.6305580<br />mean: 0.9816063","value:  1.6503361<br />mean: 0.9816268","value:  1.6701142<br />mean: 0.9816398","value:  1.6898923<br />mean: 0.9816454","value:  1.7096704<br />mean: 0.9816438","value:  1.7294484<br />mean: 0.9816350","value:  1.7492265<br />mean: 0.9816192","value:  1.7690046<br />mean: 0.9815965","value:  1.7887827<br />mean: 0.9815671","value:  1.8085608<br />mean: 0.9815311","value:  1.8283389<br />mean: 0.9814891"],"type":"scatter","mode":"lines","name":"fitted values","line":{"width":3.77952755905512,"color":"rgba(51,102,255,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x2","yaxis":"y11","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":37.9178082191781,"r":18.9954337899543,"b":25.5707762557078,"l":34.337899543379},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"xaxis":{"domain":[0,0.495923026744945],"automargin":true,"type":"linear","autorange":false,"range":[1.4,14.6],"tickmode":"array","ticktext":["5","10"],"tickvals":[5,10],"categoryorder":"array","categoryarray":["5","10"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y11","title":"","hoverformat":".2f"},"yaxis":{"domain":[0.914798671647987,1],"automargin":true,"type":"linear","autorange":false,"range":[0.920714285714286,0.967857142857143],"tickmode":"array","ticktext":["0.93","0.94","0.95","0.96"],"tickvals":[0.93,0.94,0.95,0.96],"categoryorder":"array","categoryarray":["0.93","0.94","0.95","0.96"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.914798671647987,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.914798671647987,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.914798671647987,"y1":1,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.823889580738896,"y1":0.903383146533831},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.823889580738896,"y1":0.903383146533831},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.823889580738896,"y1":0.903383146533831,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.732980489829805,"y1":0.812474055624741},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.732980489829805,"y1":0.812474055624741},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.732980489829805,"y1":0.812474055624741,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.642071398920714,"y1":0.72156496471565},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.642071398920714,"y1":0.72156496471565},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.642071398920714,"y1":0.72156496471565,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.551162308011623,"y1":0.630655873806559},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.551162308011623,"y1":0.630655873806559},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.551162308011623,"y1":0.630655873806559,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.460253217102532,"y1":0.539746782897468},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.460253217102532,"y1":0.539746782897468},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.460253217102532,"y1":0.539746782897468,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.369344126193441,"y1":0.448837691988377},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.369344126193441,"y1":0.448837691988377},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.369344126193441,"y1":0.448837691988377,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.27843503528435,"y1":0.357928601079286},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.27843503528435,"y1":0.357928601079286},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.27843503528435,"y1":0.357928601079286,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.187525944375259,"y1":0.267019510170195},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.187525944375259,"y1":0.267019510170195},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.187525944375259,"y1":0.267019510170195,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0.0966168534661685,"y1":0.176110419261104},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0.0966168534661685,"y1":0.176110419261104},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.0966168534661685,"y1":0.176110419261104,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.495923026744945,"y0":0,"y1":0.0852013283520132},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":1,"y0":0,"y1":0.0852013283520132},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0,"y1":0.0852013283520132,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"}],"annotations":[{"text":"# Nearest Neighbors","x":0.247961513372472,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Minkowski Distance Order","x":0.752038486627528,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"accuracy","x":1,"y":0.957399335823993,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"bal_accuracy","x":1,"y":0.863636363636364,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"f_meas","x":1,"y":0.772727272727273,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"kap","x":1,"y":0.681818181818182,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"mcc","x":1,"y":0.590909090909091,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"npv","x":1,"y":0.5,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"ppv","x":1,"y":0.409090909090909,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"precision","x":1,"y":0.318181818181818,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"recall","x":1,"y":0.227272727272727,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"sensitivity","x":1,"y":0.136363636363636,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"specificity","x":1,"y":0.0426006641760066,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"}],"xaxis2":{"type":"linear","autorange":false,"range":[0.187746524494374,1.90646233315556],"tickmode":"array","ticktext":["0.5","1.0","1.5"],"tickvals":[0.5,1,1.5],"categoryorder":"array","categoryarray":["0.5","1.0","1.5"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.504076973255055,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y11","title":"","hoverformat":".2f"},"yaxis2":{"type":"linear","autorange":false,"range":[0.937304020688148,0.976129102593898],"tickmode":"array","ticktext":["0.94","0.95","0.96","0.97"],"tickvals":[0.94,0.95,0.96,0.97],"categoryorder":"array","categoryarray":["0.94","0.95","0.96","0.97"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.823889580738896,0.903383146533831],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis3":{"type":"linear","autorange":false,"range":[0.911721898829442,0.967169843319605],"tickmode":"array","ticktext":["0.92","0.93","0.94","0.95","0.96"],"tickvals":[0.92,0.93,0.94,0.95,0.96],"categoryorder":"array","categoryarray":["0.92","0.93","0.94","0.95","0.96"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.732980489829805,0.812474055624741],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis4":{"type":"linear","autorange":false,"range":[0.87746600558112,0.950824607802905],"tickmode":"array","ticktext":["0.88","0.90","0.92","0.94"],"tickvals":[0.88,0.9,0.92,0.94],"categoryorder":"array","categoryarray":["0.88","0.90","0.92","0.94"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.642071398920714,0.72156496471565],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis5":{"type":"linear","autorange":false,"range":[0.882102928200679,0.954298913659143],"tickmode":"array","ticktext":["0.90","0.92","0.94"],"tickvals":[0.9,0.92,0.94],"categoryorder":"array","categoryarray":["0.90","0.92","0.94"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.551162308011623,0.630655873806559],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis6":{"type":"linear","autorange":false,"range":[0.962242283195459,0.98508005231989],"tickmode":"array","ticktext":["0.965","0.970","0.975","0.980","0.985"],"tickvals":[0.965,0.97,0.975,0.98,0.985],"categoryorder":"array","categoryarray":["0.965","0.970","0.975","0.980","0.985"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.460253217102532,0.539746782897468],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis7":{"type":"linear","autorange":false,"range":[0.920341308691309,0.972995317645318],"tickmode":"array","ticktext":["0.93","0.94","0.95","0.96","0.97"],"tickvals":[0.93,0.94,0.95,0.96,0.97],"categoryorder":"array","categoryarray":["0.93","0.94","0.95","0.96","0.97"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.369344126193441,0.448837691988377],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis8":{"type":"linear","autorange":false,"range":[0.920341308691309,0.972995317645318],"tickmode":"array","ticktext":["0.93","0.94","0.95","0.96","0.97"],"tickvals":[0.93,0.94,0.95,0.96,0.97],"categoryorder":"array","categoryarray":["0.93","0.94","0.95","0.96","0.97"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.27843503528435,0.357928601079286],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis9":{"type":"linear","autorange":false,"range":[0.914624925074925,0.968573765123765],"tickmode":"array","ticktext":["0.92","0.93","0.94","0.95","0.96"],"tickvals":[0.92,0.93,0.94,0.95,0.96],"categoryorder":"array","categoryarray":["0.92","0.93","0.94","0.95","0.96"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.187525944375259,0.267019510170195],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis10":{"type":"linear","autorange":false,"range":[0.914624925074925,0.968573765123765],"tickmode":"array","ticktext":["0.92","0.93","0.94","0.95","0.96"],"tickvals":[0.92,0.93,0.94,0.95,0.96],"categoryorder":"array","categoryarray":["0.92","0.93","0.94","0.95","0.96"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.0966168534661685,0.176110419261104],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis11":{"type":"linear","autorange":false,"range":[0.959983116301371,0.983684440064031],"tickmode":"array","ticktext":["0.960","0.965","0.970","0.975","0.980"],"tickvals":[0.96,0.965,0.97,0.975,0.98],"categoryorder":"array","categoryarray":["0.960","0.965","0.970","0.975","0.980"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.0852013283520132],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"showlegend":true,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"Distance Weighting Function","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"433036a76ece":{"x":{},"y":{},"colour":{},"type":"scatter"},"43301594a61":{"x":{},"y":{}}},"cur_data":"433036a76ece","visdat":{"433036a76ece":["function (y) ","x"],"43301594a61":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Voila!</p>
<p>Thank you for reading.</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>weeklyrtip</category>
  <category>knn</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrai-2022-12-02/index.html</guid>
  <pubDate>Fri, 02 Dec 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Extract Boilerplate Workflow Metrics with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-12-01/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>When working with the <code>{tidymodels}</code> framework there are ways to pull model metrics from a <code>workflow</code>, since <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a> is built on and around the <code>{tidyverse}</code> and <code>{tidymodels}</code> we can do the same. This post will focus on the function <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html"><code>hai_auto_wflw_metrics()</code></a></p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_auto_wflw_metrics</span>(.data)</span></code></pre></div>
</div>
<p>The only parameter is <code>.data</code> and this is strictly the output object of one of the <a href="https://www.spsanderson.com/healthyR.ai/reference/index.html#boiler-plate-functions"><code>hai_auto_</code> boiler plate functions</a></p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Since this function requires the input from an <code>hai_auto</code> function, we will walk through an example with the <strong>iris</strong> data set. We are going to use the <code>hai_auto_knn()</code> to classify the <code>Species</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-2"></span>
<span id="cb2-3">data <span class="ot" style="color: #003B4F;">&lt;-</span> iris</span>
<span id="cb2-4"></span>
<span id="cb2-5">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_knn_data_prepper</span>(data, Species <span class="sc" style="color: #5E5E5E;">~</span> .)</span>
<span id="cb2-6"></span>
<span id="cb2-7">auto_knn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_auto_knn</span>(</span>
<span id="cb2-8">  <span class="at" style="color: #657422;">.data =</span> data,</span>
<span id="cb2-9">  <span class="at" style="color: #657422;">.rec_obj =</span> rec_obj,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;">.best_metric =</span> <span class="st" style="color: #20794D;">"f_meas"</span>,</span>
<span id="cb2-11">  <span class="at" style="color: #657422;">.model_type =</span> <span class="st" style="color: #20794D;">"classification"</span>,</span>
<span id="cb2-12">  <span class="at" style="color: #657422;">.grid_size =</span> <span class="dv" style="color: #AD0000;">2</span>,</span>
<span id="cb2-13">  <span class="at" style="color: #657422;">.num_cores =</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb2-14">)</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="fu" style="color: #4758AB;">hai_auto_wflw_metrics</span>(auto_knn)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 22 × 9
   neighbors weight_func dist_power .metric  .esti…¹  mean     n std_err .config
       &lt;int&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;   &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;  
 1         8 rank             0.888 accuracy multic… 0.95     25 0.00652 Prepro…
 2         8 rank             0.888 bal_acc… macro   0.962    25 0.00471 Prepro…
 3         8 rank             0.888 f_meas   macro   0.947    25 0.00649 Prepro…
 4         8 rank             0.888 kap      multic… 0.922    25 0.0102  Prepro…
 5         8 rank             0.888 mcc      multic… 0.925    25 0.00964 Prepro…
 6         8 rank             0.888 npv      macro   0.975    25 0.00351 Prepro…
 7         8 rank             0.888 ppv      macro   0.949    25 0.00663 Prepro…
 8         8 rank             0.888 precisi… macro   0.949    25 0.00663 Prepro…
 9         8 rank             0.888 recall   macro   0.949    25 0.00633 Prepro…
10         8 rank             0.888 sensiti… macro   0.949    25 0.00633 Prepro…
# … with 12 more rows, and abbreviated variable name ¹​.estimator</code></pre>
</div>
</div>
<p>As we see this pulls out the full metric table from the workflow.</p>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-12-01/index.html</guid>
  <pubDate>Thu, 01 Dec 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Generate Random Walk Data with {healthyR.ts}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-30/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Generating random walk data for timesieries analysis does not have to be difficult, and in fact is not. It can be generated for multiple simulations and have a tidy output. How? <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_random_walk.html"><code>ts_random_walk()</code></a> from the <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> package. Let’s take a look at the function.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_random_walk</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">.mean =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;">.sd =</span> <span class="fl" style="color: #AD0000;">0.1</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.num_walks =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.periods =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.initial_value =</span> <span class="dv" style="color: #AD0000;">1000</span></span>
<span id="cb1-7">)</span></code></pre></div>
</div>
<p>Now let’s look at the arguments to the parameters.</p>
<ul>
<li><code>.mean</code> - The desired mean of the random walks</li>
<li><code>.sd</code> - The standard deviation of the random walks</li>
<li><code>.num_walks</code> - The number of random walks you want generated</li>
<li><code>.periods</code> - The length of the random walk(s) you want generated</li>
<li><code>.initial_value</code> - The initial value where the random walks should start</li>
</ul>
<p>The underlying data of this function is generated by <code>rnorm()</code></p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s take a look at an example and see some visuals.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb2-3"></span>
<span id="cb2-4">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts_random_walk</span>(<span class="at" style="color: #657422;">.num_walks =</span> <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10,000 × 4
     run     x        y cum_y
   &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;
 1     1     1 -0.144    856.
 2     1     2  0.00648  862.
 3     1     3  0.0726   924.
 4     1     4 -0.152    784.
 5     1     5  0.0228   802.
 6     1     6 -0.0455   765.
 7     1     7  0.0972   840.
 8     1     8 -0.234    643.
 9     1     9 -0.0501   611.
10     1    10 -0.0358   589.
# … with 9,990 more rows</code></pre>
</div>
</div>
<p>There are attributes attached to the output of this function, let’s see what they are.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">atb <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">attributes</span>(df)</span>
<span id="cb4-2"></span>
<span id="cb4-3">names_to_print <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">names</span>(atb)[<span class="fu" style="color: #4758AB;">which</span>(<span class="fu" style="color: #4758AB;">names</span>(atb) <span class="sc" style="color: #5E5E5E;">!=</span> <span class="st" style="color: #20794D;">"row.names"</span>)]</span>
<span id="cb4-4"></span>
<span id="cb4-5">atb[names_to_print]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$class
[1] "tbl_df"     "tbl"        "data.frame"

$names
[1] "run"   "x"     "y"     "cum_y"

$.mean
[1] 0

$.sd
[1] 0.1

$.num_walks
[1] 100

$.periods
[1] 100

$.initial_value
[1] 1000</code></pre>
</div>
</div>
<p>Now lets visualize.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">df <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2">   <span class="fu" style="color: #4758AB;">ggplot</span>(</span>
<span id="cb6-3">       <span class="at" style="color: #657422;">mapping =</span> <span class="fu" style="color: #4758AB;">aes</span>(</span>
<span id="cb6-4">           <span class="at" style="color: #657422;">x =</span> x</span>
<span id="cb6-5">           , <span class="at" style="color: #657422;">y =</span> cum_y</span>
<span id="cb6-6">           , <span class="at" style="color: #657422;">color =</span> <span class="fu" style="color: #4758AB;">factor</span>(run)</span>
<span id="cb6-7">           , <span class="at" style="color: #657422;">group =</span> <span class="fu" style="color: #4758AB;">factor</span>(run)</span>
<span id="cb6-8">        )</span>
<span id="cb6-9">    ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-10">    <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.8</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-11">    <span class="fu" style="color: #4758AB;">ts_random_walk_ggplot_layers</span>(df)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2022-11-30/index_files/figure-html/viz-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <category>healthyrts</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-30/index.html</guid>
  <pubDate>Wed, 30 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Working with Lists</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-29/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In <strong>R</strong> there are many times where we will work with <em>lists</em>. I won’t go into why lists are great or really the structure of a list but rather simply working with them.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>First let’s make a list.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">l <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb1-2">  letters,</span>
<span id="cb1-3">  <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">26</span>,</span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">26</span>)</span>
<span id="cb1-5">)</span>
<span id="cb1-6"></span>
<span id="cb1-7">l</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
 [1] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s"
[20] "t" "u" "v" "w" "x" "y" "z"

[[2]]
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26

[[3]]
 [1] -1.5647537840 -1.3080486753  1.3331315389 -0.5490502644 -0.4467608750
 [6] -1.5876952894  0.2292049732 -0.2885449316  1.4614499298 -0.0864987690
[11]  0.5686850031 -0.3897819578  0.1776603862 -1.1326372302 -1.8651290164
[16]  1.2676006036  0.2405115523 -1.0506728047  1.4069277686 -1.0125778892
[21] -0.7687818102 -0.1325350681  0.3639485041  0.0005700058 -1.0698214370
[26]  1.1972767040</code></pre>
</div>
</div>
<p>Now let’s look at somethings we can do with lists. First, let’s see if we can get the class of each item in the list. We are going to use <code>lapply()</code> for this.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">lapply</span>(l, class)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] "character"

[[2]]
[1] "integer"

[[3]]
[1] "numeric"</code></pre>
</div>
</div>
<p>Now, let’s perform some simple operations on each item of the list.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">lapply</span>(l, length)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 26

[[2]]
[1] 26

[[3]]
[1] 26</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">try</span>(<span class="fu" style="color: #4758AB;">lapply</span>(l, sum))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Error in FUN(X[[i]], ...) : invalid 'type' (character) of argument</code></pre>
</div>
</div>
<p>Ok so we see taking the sum of the first element of the list in <code>lapply()</code> did not work because of a class type mismatch. Let’s see how we can get around this an only apply the <code>sum</code> function to a <code>numeric</code> type. To do this we can rely on <a href="https://purrr.tidyverse.org/"><code>{purrr}</code></a> by using a function <a href="https://purrr.tidyverse.org/reference/map_if.html?q=map_if#null"><code>map_if()</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">library</span>(purrr)</span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;">map_if</span>(l, is.numeric, sum)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
 [1] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s"
[20] "t" "u" "v" "w" "x" "y" "z"

[[2]]
[1] 351

[[3]]
[1] -5.006323</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">map_if</span>(l, is.numeric, mean)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
 [1] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s"
[20] "t" "u" "v" "w" "x" "y" "z"

[[2]]
[1] 13.5

[[3]]
[1] -0.1925509</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <category>lapply</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-29/index.html</guid>
  <pubDate>Tue, 29 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Default Metric Sets with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-28/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>When modeling it is always good to understand your model performance against some metric The <code>{tidymodels}</code> <code>package</code> <code>{yardstick}</code> is a great resource for this.</p>
<p>In my <em>R package</em> <code>{healthyR.ai}</code> there are two functions that allow you to either <strong>minimize</strong> or <strong>maximize</strong> some cost function against your modeling problem.</p>
<p>These functions are: * <code>hai_default_regression_metric_set()</code> * <code>hai_default_classification_metric_set()</code></p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>The functions themselves are <code>{yardstick}</code> metric set functions. Let’s take a look at them.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">hai_default_classification_metric_set</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 11 × 3
   metric       class        direction
   &lt;chr&gt;        &lt;chr&gt;        &lt;chr&gt;    
 1 sensitivity  class_metric maximize 
 2 specificity  class_metric maximize 
 3 recall       class_metric maximize 
 4 precision    class_metric maximize 
 5 mcc          class_metric maximize 
 6 accuracy     class_metric maximize 
 7 f_meas       class_metric maximize 
 8 kap          class_metric maximize 
 9 ppv          class_metric maximize 
10 npv          class_metric maximize 
11 bal_accuracy class_metric maximize </code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">hai_default_regression_metric_set</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 3
  metric class          direction
  &lt;chr&gt;  &lt;chr&gt;          &lt;chr&gt;    
1 mae    numeric_metric minimize 
2 mape   numeric_metric minimize 
3 mase   numeric_metric minimize 
4 smape  numeric_metric minimize 
5 rmse   numeric_metric minimize 
6 rsq    numeric_metric maximize </code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-28/index.html</guid>
  <pubDate>Mon, 28 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Summary Statistics with {TidyDensity}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-tidydensity-2022-11-23/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Many times someone may want to see a summary or cumulative statistic for a given set of data or even from several simulations of data. I went over <a href="https://www.spsanderson.com/steveondata/posts/weekly-tip-tidydensity-2022-11-04/">bootstrap plotting</a> earlier this month, and this is a form of what we will go over today although slightly more restrictive.</p>
<p>I have decided to make today my <a href="https://www.spsanderson.com/steveondata/#category=weeklytip">weekly r-tip</a> because tomorrow is Thanksgiving here in the US and I am taking an extended holiday so I won’t be back until Monday.</p>
<p>Today’s function and weekly tip is on <a href="https://www.spsanderson.com/TidyDensity/reference/tidy_stat_tbl.html"><code>tidy_stat_tbl()</code></a>. It is meant to be used with a <code>tidy_</code> distribution function. Let’s take a look.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the function call:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;">.x =</span> y,</span>
<span id="cb1-4">  .fns,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.return_type =</span> <span class="st" style="color: #20794D;">"vector"</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.use_data_table =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb1-7">  ...</span>
<span id="cb1-8">)</span></code></pre></div>
</div>
<p>Here are the arguments to the parameters of the function:</p>
<ul>
<li><code>.data</code> - The input data coming from a tidy_ distribution function.</li>
<li><code>.x</code> - The default is y but can be one of the other columns from the input <code>data.</code></li>
<li><code>.fns</code> - The default is IQR, but this can be any stat function like quantile or median etc.</li>
<li><code>.return_type</code> - The default is “vector” which returns an sapply object.</li>
<li><code>.use_data_table</code> - The default is FALSE, TRUE will use data.table under the hood and still return a tibble. If this argument is set to TRUE then the .return_type parameter will be ignored.</li>
<li><code>...</code> - Addition function arguments to be supplied to the parameters of <code>.fns</code></li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="single-simulation" class="level2">
<h2 class="anchored" data-anchor-id="single-simulation">Single Simulation</h2>
<p>Let’s go over some examples. Firstly, we will go over all the different <code>.return_type</code>’s of a single simulation of <code>tidy_normal()</code> using the <code>quantile</code> function.</p>
<p><em>Vector Output</em> <strong>BE CAREFUL IT USES SAPPLY</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(TidyDensity)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb2-4">tn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tidy_normal</span>()</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb2-7">  <span class="at" style="color: #657422;">.data =</span> tn,</span>
<span id="cb2-8">  <span class="at" style="color: #657422;">.x =</span> y,</span>
<span id="cb2-9">  <span class="at" style="color: #657422;">.return_type =</span> <span class="st" style="color: #20794D;">"vector"</span>,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;">.fns =</span> quantile,</span>
<span id="cb2-11">  <span class="at" style="color: #657422;">na.rm =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb2-12">  <span class="at" style="color: #657422;">probs =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.025</span>, <span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">0.975</span>)</span>
<span id="cb2-13">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      sim_number_1
2.5%   -1.59190149
50%    -0.07264039
97.5%   1.77074730</code></pre>
</div>
</div>
<p><em>List Output with lapply</em></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb4-2">  tn, y, quantile, <span class="st" style="color: #20794D;">"list"</span>, <span class="at" style="color: #657422;">na.rm =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb4-3">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$sim_number_1
         0%         25%         50%         75%        100% 
-1.96661716 -0.55931702 -0.07264039  0.69817699  2.16895597 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb6-2">  tn, y, quantile, <span class="st" style="color: #20794D;">"list"</span>, <span class="at" style="color: #657422;">na.rm =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, </span>
<span id="cb6-3">  <span class="at" style="color: #657422;">probs =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.025</span>, <span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">0.975</span>)</span>
<span id="cb6-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$sim_number_1
       2.5%         50%       97.5% 
-1.59190149 -0.07264039  1.77074730 </code></pre>
</div>
</div>
<p><em>Tibble output with tibble</em></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb8-2">  tn, y, quantile, <span class="st" style="color: #20794D;">"tibble"</span>, <span class="at" style="color: #657422;">na.rm =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb8-3">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5 × 3
  sim_number name  quantile
  &lt;fct&gt;      &lt;chr&gt;    &lt;dbl&gt;
1 1          0%     -1.97  
2 1          25%    -0.559 
3 1          50%    -0.0726
4 1          75%     0.698 
5 1          100%    2.17  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb10-2">  tn, y, quantile, <span class="st" style="color: #20794D;">"tibble"</span>, <span class="at" style="color: #657422;">na.rm =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, </span>
<span id="cb10-3">  <span class="at" style="color: #657422;">probs =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.025</span>, <span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">0.975</span>)</span>
<span id="cb10-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 3
  sim_number name  quantile
  &lt;fct&gt;      &lt;chr&gt;    &lt;dbl&gt;
1 1          2.5%   -1.59  
2 1          50%    -0.0726
3 1          97.5%   1.77  </code></pre>
</div>
</div>
<p><em>Tibble output with data.table</em> The output object is a <code>tibble</code> but <code>data.table</code> is used to perform the calculations which can be magnitudes faster when simulations are large. I will showcase down the post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb12-2">  tn, y, quantile, <span class="at" style="color: #657422;">.use_data_table =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">na.rm =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb12-3">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5 × 3
  sim_number name  quantile
  &lt;fct&gt;      &lt;fct&gt;    &lt;dbl&gt;
1 1          0%     -1.97  
2 1          25%    -0.559 
3 1          50%    -0.0726
4 1          75%     0.698 
5 1          100%    2.17  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb14-2">  tn, y, quantile, <span class="at" style="color: #657422;">.use_data_table =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">na.rm =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, </span>
<span id="cb14-3">  <span class="at" style="color: #657422;">probs =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.025</span>, <span class="fl" style="color: #AD0000;">0.5</span>, <span class="fl" style="color: #AD0000;">0.975</span>)</span>
<span id="cb14-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 3
  sim_number name  quantile
  &lt;fct&gt;      &lt;fct&gt;    &lt;dbl&gt;
1 1          2.5%   -1.59  
2 1          50%    -0.0726
3 1          97.5%   1.77  </code></pre>
</div>
</div>
<p>Now let’s take a look with multiple simulations.</p>
</section>
<section id="multiple-simulations" class="level2">
<h2 class="anchored" data-anchor-id="multiple-simulations">Multiple Simulations</h2>
<p>Let’s set our simulation count to 5. While this is not a large amount it will serve as a good illustration on the outputs.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">ns <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb16-2">f  <span class="ot" style="color: #003B4F;">&lt;-</span> quantile</span>
<span id="cb16-3">nr <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb16-4">p  <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fl" style="color: #AD0000;">0.025</span>, <span class="fl" style="color: #AD0000;">0.975</span>)</span></code></pre></div>
</div>
<p>Ok let’s run the same simulations but with the updated params.</p>
<p><em>Vector Output</em> <strong>BE CAREFUL IT USES SAPPLY</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb17-2">tn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tidy_normal</span>(<span class="at" style="color: #657422;">.num_sims =</span> ns)</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb17-5">  <span class="at" style="color: #657422;">.data =</span> tn,</span>
<span id="cb17-6">  <span class="at" style="color: #657422;">.x =</span> y,</span>
<span id="cb17-7">  <span class="at" style="color: #657422;">.return_type =</span> <span class="st" style="color: #20794D;">"vector"</span>,</span>
<span id="cb17-8">  <span class="at" style="color: #657422;">.fns =</span> f,</span>
<span id="cb17-9">  <span class="at" style="color: #657422;">na.rm =</span> nr,</span>
<span id="cb17-10">  <span class="at" style="color: #657422;">probs =</span> p</span>
<span id="cb17-11">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      sim_number_1 sim_number_2 sim_number_3 sim_number_4 sim_number_5
2.5%     -1.591901    -1.474945    -1.656679    -1.258156    -1.309749
97.5%     1.770747     1.933653     1.894424     2.098923     1.943384</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb19-2">  tn, y, <span class="at" style="color: #657422;">.return_type =</span> <span class="st" style="color: #20794D;">"vector"</span>,</span>
<span id="cb19-3">  <span class="at" style="color: #657422;">.fns =</span> f, <span class="at" style="color: #657422;">na.rm =</span> nr</span>
<span id="cb19-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     sim_number_1 sim_number_2 sim_number_3 sim_number_4 sim_number_5
0%    -1.96661716   -2.3091689   -2.0532472  -1.31080153   -1.3598407
25%   -0.55931702   -0.3612969   -0.9505826  -0.49541417   -0.7140627
50%   -0.07264039    0.1525789   -0.3048700  -0.07675993   -0.2240352
75%    0.69817699    0.6294358    0.2900859   0.55145766    0.5287605
100%   2.16895597    2.1873330    2.1001089   3.24103993    2.1988103</code></pre>
</div>
</div>
<p><em>List Output with lapply</em></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb21-2">  tn, y, f, <span class="st" style="color: #20794D;">"list"</span>, <span class="at" style="color: #657422;">na.rm =</span> nr</span>
<span id="cb21-3">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$sim_number_1
         0%         25%         50%         75%        100% 
-1.96661716 -0.55931702 -0.07264039  0.69817699  2.16895597 

$sim_number_2
        0%        25%        50%        75%       100% 
-2.3091689 -0.3612969  0.1525789  0.6294358  2.1873330 

$sim_number_3
        0%        25%        50%        75%       100% 
-2.0532472 -0.9505826 -0.3048700  0.2900859  2.1001089 

$sim_number_4
         0%         25%         50%         75%        100% 
-1.31080153 -0.49541417 -0.07675993  0.55145766  3.24103993 

$sim_number_5
        0%        25%        50%        75%       100% 
-1.3598407 -0.7140627 -0.2240352  0.5287605  2.1988103 </code></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb23-2">  tn, y, f, <span class="st" style="color: #20794D;">"list"</span>, <span class="at" style="color: #657422;">na.rm =</span> nr, </span>
<span id="cb23-3">  <span class="at" style="color: #657422;">probs =</span> p</span>
<span id="cb23-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$sim_number_1
     2.5%     97.5% 
-1.591901  1.770747 

$sim_number_2
     2.5%     97.5% 
-1.474945  1.933653 

$sim_number_3
     2.5%     97.5% 
-1.656679  1.894424 

$sim_number_4
     2.5%     97.5% 
-1.258156  2.098923 

$sim_number_5
     2.5%     97.5% 
-1.309749  1.943384 </code></pre>
</div>
</div>
<p><em>Tibble output with tibble</em></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb25-2">  tn, y, f, <span class="st" style="color: #20794D;">"tibble"</span>, <span class="at" style="color: #657422;">na.rm =</span> nr</span>
<span id="cb25-3">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 25 × 3
   sim_number name        f
   &lt;fct&gt;      &lt;chr&gt;   &lt;dbl&gt;
 1 1          0%    -1.97  
 2 1          25%   -0.559 
 3 1          50%   -0.0726
 4 1          75%    0.698 
 5 1          100%   2.17  
 6 2          0%    -2.31  
 7 2          25%   -0.361 
 8 2          50%    0.153 
 9 2          75%    0.629 
10 2          100%   2.19  
# … with 15 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb27-2">  tn, y, f, <span class="st" style="color: #20794D;">"tibble"</span>, <span class="at" style="color: #657422;">na.rm =</span> nr, </span>
<span id="cb27-3">  <span class="at" style="color: #657422;">probs =</span> p</span>
<span id="cb27-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 3
   sim_number name      f
   &lt;fct&gt;      &lt;chr&gt; &lt;dbl&gt;
 1 1          2.5%  -1.59
 2 1          97.5%  1.77
 3 2          2.5%  -1.47
 4 2          97.5%  1.93
 5 3          2.5%  -1.66
 6 3          97.5%  1.89
 7 4          2.5%  -1.26
 8 4          97.5%  2.10
 9 5          2.5%  -1.31
10 5          97.5%  1.94</code></pre>
</div>
</div>
<p><em>Tibble output with data.table</em> The output object is a <code>tibble</code> but <code>data.table</code> is used to perform the calculations which can be magnitudes faster when simulations are large. I will showcase down the post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb29-2">  tn, y, f, <span class="at" style="color: #657422;">.use_data_table =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">na.rm =</span> nr</span>
<span id="cb29-3">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 25 × 3
   sim_number name        f
   &lt;fct&gt;      &lt;fct&gt;   &lt;dbl&gt;
 1 1          0%    -1.97  
 2 1          25%   -0.559 
 3 1          50%   -0.0726
 4 1          75%    0.698 
 5 1          100%   2.17  
 6 2          0%    -2.31  
 7 2          25%   -0.361 
 8 2          50%    0.153 
 9 2          75%    0.629 
10 2          100%   2.19  
# … with 15 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(</span>
<span id="cb31-2">  tn, y, f, <span class="at" style="color: #657422;">.use_data_table =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">na.rm =</span> nr, </span>
<span id="cb31-3">  <span class="at" style="color: #657422;">probs =</span> p</span>
<span id="cb31-4">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 × 3
   sim_number name      f
   &lt;fct&gt;      &lt;fct&gt; &lt;dbl&gt;
 1 1          2.5%  -1.59
 2 1          97.5%  1.77
 3 2          2.5%  -1.47
 4 2          97.5%  1.93
 5 3          2.5%  -1.66
 6 3          97.5%  1.89
 7 4          2.5%  -1.26
 8 4          97.5%  2.10
 9 5          2.5%  -1.31
10 5          97.5%  1.94</code></pre>
</div>
</div>
<p>Ok, now that we have shown that, let’s ratchet up the simulations so we can see the true difference in using the <code>.use_data_tbl</code> parameter when simulations are large. We are going to use <code>{rbenchmark}</code> for</p>
</section>
<section id="benchmarking" class="level2">
<h2 class="anchored" data-anchor-id="benchmarking">Benchmarking</h2>
<p>Here we go. We are going to make a <code>tidy_bootstrap()</code> of the <code>mtcars$mpg</code> data which will produce 2000 simulations, we will replicate this 25 times.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;">library</span>(rbenchmark)</span>
<span id="cb33-2"><span class="fu" style="color: #4758AB;">library</span>(TidyDensity)</span>
<span id="cb33-3"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb33-4"></span>
<span id="cb33-5"><span class="co" style="color: #5E5E5E;"># Get the interesting vector, well for this anyways</span></span>
<span id="cb33-6">x <span class="ot" style="color: #003B4F;">&lt;-</span> mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg</span>
<span id="cb33-7"></span>
<span id="cb33-8"><span class="co" style="color: #5E5E5E;"># Bootstrap the vector (2k simulations is default)</span></span>
<span id="cb33-9">tb <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tidy_bootstrap</span>(x) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb33-10">  <span class="fu" style="color: #4758AB;">bootstrap_unnest_tbl</span>()</span>
<span id="cb33-11"></span>
<span id="cb33-12"><span class="fu" style="color: #4758AB;">benchmark</span>(</span>
<span id="cb33-13">  <span class="st" style="color: #20794D;">"tibble"</span> <span class="ot" style="color: #003B4F;">=</span> {</span>
<span id="cb33-14">    <span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(tb, y, IQR, <span class="st" style="color: #20794D;">"tibble"</span>)</span>
<span id="cb33-15">  },</span>
<span id="cb33-16">  <span class="st" style="color: #20794D;">"data.table"</span> <span class="ot" style="color: #003B4F;">=</span> {</span>
<span id="cb33-17">    <span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(tb, y, IQR, <span class="at" style="color: #657422;">.use_data_table =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">type =</span> <span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb33-18">  },</span>
<span id="cb33-19">  <span class="st" style="color: #20794D;">"sapply"</span> <span class="ot" style="color: #003B4F;">=</span> {</span>
<span id="cb33-20">    <span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(tb, y, IQR, <span class="st" style="color: #20794D;">"vector"</span>)</span>
<span id="cb33-21">  },</span>
<span id="cb33-22">  <span class="st" style="color: #20794D;">"lapply"</span> <span class="ot" style="color: #003B4F;">=</span> {</span>
<span id="cb33-23">    <span class="fu" style="color: #4758AB;">tidy_stat_tbl</span>(tb, y, IQR, <span class="st" style="color: #20794D;">"list"</span>)</span>
<span id="cb33-24">  },</span>
<span id="cb33-25">  <span class="at" style="color: #657422;">replications =</span> <span class="dv" style="color: #AD0000;">25</span>,</span>
<span id="cb33-26">  <span class="at" style="color: #657422;">columns =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"test"</span>,<span class="st" style="color: #20794D;">"replications"</span>,<span class="st" style="color: #20794D;">"elapsed"</span>,<span class="st" style="color: #20794D;">"relative"</span>,<span class="st" style="color: #20794D;">"user.self"</span>,<span class="st" style="color: #20794D;">"sys.self"</span>  )</span>
<span id="cb33-27">) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb33-28">  <span class="fu" style="color: #4758AB;">arrange</span>(relative)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        test replications elapsed relative user.self sys.self
1 data.table           25    4.11    1.000      3.33     0.11
2     lapply           25   24.14    5.873     20.02     0.38
3     sapply           25   25.11    6.109     21.01     0.28
4     tibble           25   33.18    8.073     27.45     0.51</code></pre>
</div>
</div>
<p>Voila!</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>weeklytip</category>
  <category>tidydensity</category>
  <category>datatable</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-tidydensity-2022-11-23/index.html</guid>
  <pubDate>Wed, 23 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Preprocessing Scale/Normalize with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-22/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>A large portion of data modeling occurrs not only in the data cleaning phase but also in the <em>data preprocessing</em> phase. This can include things like <em>scaling</em> or <em>normalizing</em> data before proceeding to the modeling phase. I will discuss one such function from my <em>r package</em> <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a>. In this post I will go over <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_data_scale.html"><code>hai_data_scale()</code></a></p>
<p>This is a <code>{recipes}</code> style <code>step</code> function and is <code>tidymodels</code> compliant.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_data_scale</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">.recipe_object =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-3">  ...,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"center"</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.range_min =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.range_max =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.scale_factor =</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb1-8">)</span></code></pre></div>
</div>
<p>Now let’s go over the arguments that get supplied to the parameters of this function.</p>
<ul>
<li><code>.recipe_object</code> - The data that you want to process</li>
<li><code>...</code> - One or more selector functions to choose variables to be imputed. When used with imp_vars, these dots indicate which variables are used to predict the missing data in each variable. See selections() for more details</li>
<li><code>.type_of_scale</code> - This is a quoted argument and can be one of the following:
<ol type="1">
<li>“center”</li>
<li>“normalize”</li>
<li>“range”</li>
<li>“scale”</li>
</ol></li>
<li><code>range_min</code> - A single numeric value for the smallest value in the range. This defaults to 0.</li>
<li><code>.range_max</code> - A single numeric value for the largeest value in the range. This defaults to 1.</li>
<li><code>.scale_factor</code> - A numeric value of either 1 or 2 that scales the numeric inputs by one or two standard deviations. By dividing by two standard deviations, the coefficients attached to continuous predictors can be interpreted the same way as with binary inputs. Defaults to 1.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Now let’s see it in action!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">library</span>(recipes)</span>
<span id="cb2-4"></span>
<span id="cb2-5">date_seq <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(</span>
<span id="cb2-6">  <span class="at" style="color: #657422;">from =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2013-01-01"</span>), </span>
<span id="cb2-7">  <span class="at" style="color: #657422;">length.out =</span> <span class="dv" style="color: #AD0000;">100</span>, </span>
<span id="cb2-8">  <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"month"</span></span>
<span id="cb2-9">)</span>
<span id="cb2-10"></span>
<span id="cb2-11">val_seq <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">6</span>, <span class="at" style="color: #657422;">sd =</span> <span class="dv" style="color: #AD0000;">2</span>), <span class="at" style="color: #657422;">times =</span> <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb2-12"></span>
<span id="cb2-13">df_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb2-14">  <span class="at" style="color: #657422;">date_col =</span> date_seq,</span>
<span id="cb2-15">  <span class="at" style="color: #657422;">value    =</span> val_seq</span>
<span id="cb2-16">)</span>
<span id="cb2-17"></span>
<span id="cb2-18">df_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 100 × 2
   date_col   value
   &lt;date&gt;     &lt;dbl&gt;
 1 2013-01-01  6.66
 2 2013-02-01  6.66
 3 2013-03-01  5.09
 4 2013-04-01  6.94
 5 2013-05-01  5.96
 6 2013-06-01  6.18
 7 2013-07-01  3.62
 8 2013-08-01  7.31
 9 2013-09-01  4.58
10 2013-10-01  7.29
# … with 90 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">recipe</span>(value <span class="sc" style="color: #5E5E5E;">~</span> ., df_tbl)</span>
<span id="cb4-2"></span>
<span id="cb4-3">new_rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_scale</span>(</span>
<span id="cb4-4">  <span class="at" style="color: #657422;">.recipe_object =</span> rec_obj,</span>
<span id="cb4-5">  value,</span>
<span id="cb4-6">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"center"</span></span>
<span id="cb4-7">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj</span>
<span id="cb4-8"></span>
<span id="cb4-9">new_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 100 × 2
   date_col     value
   &lt;date&gt;       &lt;dbl&gt;
 1 2013-01-01  0.633 
 2 2013-02-01  0.630 
 3 2013-03-01 -0.935 
 4 2013-04-01  0.909 
 5 2013-05-01 -0.0676
 6 2013-06-01  0.149 
 7 2013-07-01 -2.41  
 8 2013-08-01  1.28  
 9 2013-09-01 -1.45  
10 2013-10-01  1.26  
# … with 90 more rows</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <category>recipes</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-22/index.html</guid>
  <pubDate>Tue, 22 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Bootstrap Modeling with Base R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-21/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>I have previously written about bootstrap modeling with <a href="https://www.spsanderson.com/steveondata/posts/rtip-2022-11-17/"><code>{purrr} and {modelr}</code> here</a>. What if you would like to do some simple <strong>bootstrap</strong> modeling <em>without</em> importing a library? This itself is easy too!</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>We will be using a very simple for loop to accomplish this. You will find an excellent post on this <a href="https://stats.stackexchange/q/501275">on Stats StackExchange</a> from <a href="https://stats.stackexchange.com/users/305753/francisco-jos-goerlich-gisbert">Francisco Jos Goerlich Gisbert</a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">n    <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">2000</span></span>
<span id="cb1-2">df   <span class="ot" style="color: #003B4F;">&lt;-</span> mtcars</span>
<span id="cb1-3">pred <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">numeric</span>(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(tictoc) <span class="co" style="color: #5E5E5E;"># for timing</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">tic</span>()</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>n){</span>
<span id="cb1-10">  boot    <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sample</span>(<span class="fu" style="color: #4758AB;">nrow</span>(df), n, <span class="at" style="color: #657422;">replace =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb1-11">  fit     <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;">~</span> wt, <span class="at" style="color: #657422;">data =</span> df[boot,])</span>
<span id="cb1-12">  pred[i] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">predict</span>(fit, <span class="at" style="color: #657422;">newdata =</span> df[boot,]) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb1-13">    <span class="fu" style="color: #4758AB;">sample</span>(<span class="fu" style="color: #4758AB;">resid</span>(fit), <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-14">}</span>
<span id="cb1-15"><span class="fu" style="color: #4758AB;">toc</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>6.8 sec elapsed</code></pre>
</div>
</div>
<p>So we can see that the process ran pretty quickly and the loop itself is not a very difficult one. Let’s explain a little.</p>
<p>So the <code>boot</code> object is a sampling of <code>df</code> which in this case is the <code>mtcars</code> data set. We took a sample with replacement from this data set. We took 2000 samples and did this 2000 times.</p>
<p>Next we made the <code>fit</code> object by fitting a simple linear model to the data where <code>mpg</code> is a function of <code>wt</code>. Once this is done, we made out predictions.</p>
<p>That’s it!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>bootstrap</category>
  <category>rtip</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-21/index.html</guid>
  <pubDate>Mon, 21 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Updates to {healthyverse} packages</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-update-2022-11-18/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>I have made several updates to <a href="https://www.spsanderson.com/healthyverse/"><code>{healthyverse}</code></a>, this has resulted in new releases to CRAN for <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a>, <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a>, and <a href="https://www.spsanderson.com/TidyDensity/"><code>{TidyDesnsity}</code></a>.</p>
</section>
<section id="tidydensity" class="level1">
<h1>TidyDensity</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-update-2022-11-18/tidydensity.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">TidyDensity</figcaption><p></p>
</figure>
</div>
</section>
<section id="healthyr.ai" class="level1">
<h1>healthyR.ai</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-update-2022-11-18/healthyr_ai.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">healthyR.ai</figcaption><p></p>
</figure>
</div>
</section>
<section id="healthyr.ts" class="level1">
<h1>healthyR.ts</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-update-2022-11-18/healthyr_ts.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">healthyR.ts</figcaption><p></p>
</figure>
</div>
</section>
<section id="some-new-functions" class="level1">
<h1>Some New Functions</h1>
<p>Let’s take a look at some new functions.</p>
<section id="tidydensity-1" class="level2">
<h2 class="anchored" data-anchor-id="tidydensity-1">TidyDensity</h2>
<p>For TidyDensity a new distribution was added, welcome <a href="https://www.spsanderson.com/TidyDensity/reference/tidy_bernoulli.html?q=ber#null"><code>tidy_bernoulli()</code></a>. This distribution also comes with the standard <a href="https://www.spsanderson.com/TidyDensity/reference/util_bernoulli_param_estimate.html"><code>util_distname_param_estimate()</code></a> and the <a href="https://www.spsanderson.com/TidyDensity/reference/util_bernoulli_stats_tbl.html"><code>util_distname_stats_tbl()</code></a> functions. Let’s take a look at the function calls.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">tidy_bernoulli</span>(<span class="at" style="color: #657422;">.n =</span> <span class="dv" style="color: #AD0000;">50</span>, <span class="at" style="color: #657422;">.prob =</span> <span class="fl" style="color: #AD0000;">0.1</span>, <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">util_bernoulli_param_estimate</span>(.x, <span class="at" style="color: #657422;">.auto_gen_empirical =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">util_bernoulli_stats_tbl</span>(.data)</span></code></pre></div>
</div>
<p>Let’s see them in use.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(TidyDensity)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"></span>
<span id="cb2-4">tb <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tidy_bernoulli</span>()</span>
<span id="cb2-5"></span>
<span id="cb2-6">tb</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 50 × 7
   sim_number     x     y      dx     dy     p     q
   &lt;fct&gt;      &lt;int&gt; &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;
 1 1              1     0 -0.338  0.0366   0.9     0
 2 1              2     0 -0.304  0.0866   0.9     0
 3 1              3     0 -0.270  0.187    0.9     0
 4 1              4     0 -0.236  0.369    0.9     0
 5 1              5     0 -0.201  0.663    0.9     0
 6 1              6     0 -0.167  1.09     0.9     0
 7 1              7     0 -0.133  1.63     0.9     0
 8 1              8     1 -0.0988 2.22     1       1
 9 1              9     0 -0.0646 2.76     0.9     0
10 1             10     0 -0.0304 3.14     0.9     0
# … with 40 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">util_bernoulli_param_estimate</span>(tb<span class="sc" style="color: #5E5E5E;">$</span>y)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$combined_data_tbl
# A tibble: 100 × 8
   sim_number     x     y      dx     dy     p     q dist_type
   &lt;fct&gt;      &lt;int&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;    
 1 1              1     0 -0.338  0.0366  0.92     0 Empirical
 2 1              2     0 -0.304  0.0866  0.92     0 Empirical
 3 1              3     0 -0.270  0.187   0.92     0 Empirical
 4 1              4     0 -0.236  0.369   0.92     0 Empirical
 5 1              5     0 -0.201  0.663   0.92     0 Empirical
 6 1              6     0 -0.167  1.09    0.92     0 Empirical
 7 1              7     0 -0.133  1.63    0.92     0 Empirical
 8 1              8     1 -0.0988 2.22    1        0 Empirical
 9 1              9     0 -0.0646 2.76    0.92     0 Empirical
10 1             10     0 -0.0304 3.14    0.92     0 Empirical
# … with 90 more rows

$parameter_tbl
# A tibble: 1 × 8
  dist_type samp_size   min   max  mean variance sum_x  prob
  &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;
1 Bernoulli        50     0     1  0.08   0.0736     4  0.08</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">util_bernoulli_stats_tbl</span>(tb) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 1
Columns: 18
$ tidy_function      &lt;chr&gt; "tidy_bernoulli"
$ function_call      &lt;chr&gt; "Bernoulli c(0.1)"
$ distribution       &lt;chr&gt; "Bernoulli"
$ distribution_type  &lt;chr&gt; "discrete"
$ points             &lt;dbl&gt; 50
$ simulations        &lt;dbl&gt; 1
$ mean               &lt;dbl&gt; 0.1
$ mode               &lt;chr&gt; "0"
$ coeff_var          &lt;dbl&gt; 0.09
$ skewness           &lt;dbl&gt; 2.666667
$ kurtosis           &lt;dbl&gt; 5.111111
$ mad                &lt;dbl&gt; 0.5
$ entropy            &lt;dbl&gt; 0.325083
$ fisher_information &lt;dbl&gt; 11.11111
$ computed_std_skew  &lt;dbl&gt; 3.096281
$ computed_std_kurt  &lt;dbl&gt; 10.58696
$ ci_lo              &lt;dbl&gt; 0
$ ci_hi              &lt;dbl&gt; 1</code></pre>
</div>
</div>
</section>
<section id="healthyr.ai-1" class="level2">
<h2 class="anchored" data-anchor-id="healthyr.ai-1">healthyR.ai</h2>
<p>This was a minor patch release that exported some previously internal only functions and fixed an error with the custom recipe steps. One of the functions that has been exported is <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_data_impute.html?q=hai_data#null"><code>hai_data_impute()</code></a></p>
<p>Let’s take a look.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">hai_data_impute</span>(</span>
<span id="cb8-2">  <span class="at" style="color: #657422;">.recipe_object =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb8-3">  ...,</span>
<span id="cb8-4">  <span class="at" style="color: #657422;">.seed_value =</span> <span class="dv" style="color: #AD0000;">123</span>,</span>
<span id="cb8-5">  <span class="at" style="color: #657422;">.type_of_imputation =</span> <span class="st" style="color: #20794D;">"mean"</span>,</span>
<span id="cb8-6">  <span class="at" style="color: #657422;">.number_of_trees =</span> <span class="dv" style="color: #AD0000;">25</span>,</span>
<span id="cb8-7">  <span class="at" style="color: #657422;">.neighbors =</span> <span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb8-8">  <span class="at" style="color: #657422;">.mean_trim =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb8-9">  .roll_statistic,</span>
<span id="cb8-10">  <span class="at" style="color: #657422;">.roll_window =</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb8-11">)</span></code></pre></div>
</div>
<p>Let’s take a look at an example of it’s use.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;">library</span>(recipes)</span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb9-4"></span>
<span id="cb9-5">date_seq <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(<span class="at" style="color: #657422;">from =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2013-01-01"</span>), <span class="at" style="color: #657422;">length.out =</span> <span class="dv" style="color: #AD0000;">100</span>, <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"month"</span>)</span>
<span id="cb9-6">val_seq <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">9</span>), <span class="cn" style="color: #8f5902;">NA</span>), <span class="at" style="color: #657422;">times =</span> <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb9-7">df_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb9-8">  <span class="at" style="color: #657422;">date_col =</span> date_seq,</span>
<span id="cb9-9">  <span class="at" style="color: #657422;">value    =</span> val_seq</span>
<span id="cb9-10">)</span>
<span id="cb9-11"></span>
<span id="cb9-12">df_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 100 × 2
   date_col     value
   &lt;date&gt;       &lt;dbl&gt;
 1 2013-01-01  0.325 
 2 2013-02-01 -0.308 
 3 2013-03-01  0.562 
 4 2013-04-01  0.0805
 5 2013-05-01 -0.528 
 6 2013-06-01 -2.49  
 7 2013-07-01 -0.964 
 8 2013-08-01 -0.337 
 9 2013-09-01 -1.08  
10 2013-10-01 NA     
# … with 90 more rows</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">recipe</span>(value <span class="sc" style="color: #5E5E5E;">~</span> ., df_tbl)</span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;">hai_data_impute</span>(</span>
<span id="cb11-4">  <span class="at" style="color: #657422;">.recipe_object =</span> rec_obj,</span>
<span id="cb11-5">  value,</span>
<span id="cb11-6">  <span class="at" style="color: #657422;">.type_of_imputation =</span> <span class="st" style="color: #20794D;">"roll"</span>,</span>
<span id="cb11-7">  <span class="at" style="color: #657422;">.roll_statistic =</span> median</span>
<span id="cb11-8">)<span class="sc" style="color: #5E5E5E;">$</span>impute_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 100 × 2
   date_col     value
   &lt;date&gt;       &lt;dbl&gt;
 1 2013-01-01  0.325 
 2 2013-02-01 -0.308 
 3 2013-03-01  0.562 
 4 2013-04-01  0.0805
 5 2013-05-01 -0.528 
 6 2013-06-01 -2.49  
 7 2013-07-01 -0.964 
 8 2013-08-01 -0.337 
 9 2013-09-01 -1.08  
10 2013-10-01 -0.322 
# … with 90 more rows</code></pre>
</div>
</div>
</section>
<section id="healthyr.ts-1" class="level2">
<h2 class="anchored" data-anchor-id="healthyr.ts-1">healthyR.ts</h2>
<p>This was a minor patch release fixing the function <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_lag_correlation.html"><code>ts_lag_correlation()</code></a> when the column that was the value was not explicitly called…<code>value</code>.</p>
<p>Thank you!</p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>weeklytip</category>
  <category>healthyverse</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-update-2022-11-18/index.html</guid>
  <pubDate>Fri, 18 Nov 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.spsanderson.com/steveondata/posts/weekly-rtip-update-2022-11-18/tidydensity.png" medium="image" type="image/png" height="100" width="144"/>
</item>
<item>
  <title>Bootstrap Modeling with {purrr} and {modler}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-17/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Many times in modeling we want to get the uncertainty in the model, well, bootstrapping to the rescue!</p>
<p>I am going to go over a very simple example on how to use <code>purrr</code> and <code>modelr</code> for this situation. We will use the mtcars dataset.</p>
</section>
<section id="functions" class="level1">
<h1>Functions</h1>
<p>The main functions that we are going to showcase are <a href="https://purrr.tidyverse.org/reference/map.html"><code>purrr::map()</code></a> and <a href="https://modelr.tidyverse.org/reference/bootstrap.html"><code>modelr::bootstrap()</code></a></p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s get right into it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tidymodels)</span>
<span id="cb1-3"></span>
<span id="cb1-4">df <span class="ot" style="color: #003B4F;">&lt;-</span> mtcars</span>
<span id="cb1-5"></span>
<span id="cb1-6">fit_boots <span class="ot" style="color: #003B4F;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-7">  modelr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">bootstrap</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">200</span>, <span class="at" style="color: #657422;">id =</span> <span class="st" style="color: #20794D;">'boot_num'</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;">group_by</span>(boot_num) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">fit =</span> <span class="fu" style="color: #4758AB;">map</span>(strap, <span class="sc" style="color: #5E5E5E;">~</span><span class="fu" style="color: #4758AB;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> <span class="fu" style="color: #4758AB;">data.frame</span>(.))))</span>
<span id="cb1-10"></span>
<span id="cb1-11">fit_boots</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 200 × 3
# Groups:   boot_num [200]
   strap                boot_num fit   
   &lt;list&gt;               &lt;chr&gt;    &lt;list&gt;
 1 &lt;resample [32 x 11]&gt; 001      &lt;lm&gt;  
 2 &lt;resample [32 x 11]&gt; 002      &lt;lm&gt;  
 3 &lt;resample [32 x 11]&gt; 003      &lt;lm&gt;  
 4 &lt;resample [32 x 11]&gt; 004      &lt;lm&gt;  
 5 &lt;resample [32 x 11]&gt; 005      &lt;lm&gt;  
 6 &lt;resample [32 x 11]&gt; 006      &lt;lm&gt;  
 7 &lt;resample [32 x 11]&gt; 007      &lt;lm&gt;  
 8 &lt;resample [32 x 11]&gt; 008      &lt;lm&gt;  
 9 &lt;resample [32 x 11]&gt; 009      &lt;lm&gt;  
10 &lt;resample [32 x 11]&gt; 010      &lt;lm&gt;  
# … with 190 more rows</code></pre>
</div>
</div>
<p>Now lets get our parameter estimates.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># get parameters ####</span></span>
<span id="cb3-2">params_boot <span class="ot" style="color: #003B4F;">&lt;-</span> fit_boots <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">tidy_fit =</span> <span class="fu" style="color: #4758AB;">map</span>(fit, tidy)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;">unnest</span>(<span class="at" style="color: #657422;">cols =</span> tidy_fit) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;">ungroup</span>()</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;"># get predictions</span></span>
<span id="cb3-8">preds_boot <span class="ot" style="color: #003B4F;">&lt;-</span> fit_boots <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">augment_fit =</span> <span class="fu" style="color: #4758AB;">map</span>(fit, augment)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;">unnest</span>(<span class="at" style="color: #657422;">cols =</span> augment_fit) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;">ungroup</span>()</span></code></pre></div>
</div>
<p>Time to visualize.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">library</span>(patchwork)</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;"># plot distribution of estimated parameters</span></span>
<span id="cb4-4">p1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ggplot</span>(params_boot, <span class="fu" style="color: #4758AB;">aes</span>(estimate)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">geom_histogram</span>(<span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">'black'</span>, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">'white'</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span> term, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">'free'</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;"># plot points with predictions</span></span>
<span id="cb4-10">p2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ggplot</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;">geom_line</span>(<span class="fu" style="color: #4758AB;">aes</span>(mpg, .fitted, <span class="at" style="color: #657422;">group =</span> boot_num), preds_boot, <span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">03</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;">geom_point</span>(<span class="fu" style="color: #4758AB;">aes</span>(mpg, .fitted), preds_boot, <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">'steelblue'</span>, <span class="at" style="color: #657422;">alpha =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span>
<span id="cb4-14">  </span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;"># plot both</span></span>
<span id="cb4-16">p1 <span class="sc" style="color: #5E5E5E;">+</span> p2</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2022-11-17/index_files/figure-html/viz-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>purrr</category>
  <category>modelr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-17/index.html</guid>
  <pubDate>Thu, 17 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Cumulative Harmonic Mean with {TidyDensity}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-16/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>There can be times in which you may want to see a cumulative statistic, maybe in this particular case it is the harmonic mean. Well with the <a href="https://www.spsanderson.com/TidyDensity/"><code>{TidyDensity}</code></a> it is possible with a function called <a href="https://www.spsanderson.com/TidyDensity/reference/chmean.html"><code>chmean()</code></a></p>
<p>Let’s take a look at the function.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the function call, it is very simple as it is a vectorized function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">chmean</span>(.x)</span></code></pre></div>
</div>
<p>The only argument you provide to this function is a numeric vector. Let’s take a quick look at the construction of the function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">chmean <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(.x) {</span>
<span id="cb2-2">  <span class="dv" style="color: #AD0000;">1</span> <span class="sc" style="color: #5E5E5E;">/</span> (<span class="fu" style="color: #4758AB;">cumsum</span>(<span class="dv" style="color: #AD0000;">1</span> <span class="sc" style="color: #5E5E5E;">/</span> .x))</span>
<span id="cb2-3">}</span></code></pre></div>
</div>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s take a look at an example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(TidyDensity)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb3-3"></span>
<span id="cb3-4">x <span class="ot" style="color: #003B4F;">&lt;-</span> mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;">chmean</span>(x)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 21.0000000 10.5000000  7.1891892  5.3813575  4.1788087  3.3949947
 [7]  2.7436247  2.4663044  2.2255626  1.9943841  1.7934398  1.6166494
[13]  1.4784877  1.3474251  1.1928760  1.0701322  0.9975150  0.9677213
[19]  0.9378663  0.9126181  0.8754572  0.8286539  0.7858140  0.7419753
[25]  0.7143688  0.6961523  0.6779989  0.6632076  0.6364908  0.6165699
[31]  0.5922267  0.5762786</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">mtcars <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">select</span>(mpg) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">cum_har_mean =</span> <span class="fu" style="color: #4758AB;">chmean</span>(mpg)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;">head</span>(<span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                   mpg cum_har_mean
Mazda RX4         21.0    21.000000
Mazda RX4 Wag     21.0    10.500000
Datsun 710        22.8     7.189189
Hornet 4 Drive    21.4     5.381358
Hornet Sportabout 18.7     4.178809
Valiant           18.1     3.394995
Duster 360        14.3     2.743625
Merc 240D         24.4     2.466304
Merc 230          22.8     2.225563
Merc 280          19.2     1.994384</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidydensity</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-16/index.html</guid>
  <pubDate>Wed, 16 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Auto Prep data for XGBoost with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-15/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Sometimes we may want to quickly format some data in order to just pass it through some algorithm just to see what happens, how crazy are things, just to get an idea of what may lie ahead…a lot of prep.</p>
<p>With my <em>r package</em> <code>{healthyR.ai}</code> there is a set of <strong>prepper</strong> functions that will automatically do a <strong>‘best effort’</strong> to format you data to be used in the algorithm you choose (should it be supported).</p>
<p>Today we will talk about <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html"><code>[hai_xgboost_data_prepper()</code></a></p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_xgboost_data_prepper</span>(.data, .recipe_formula)</span></code></pre></div>
</div>
<p>Now let’s go over the arguments that are passed to the function.</p>
<ul>
<li><code>.data</code> - The data that you are passing to the function. Can be any type of data that is accepted by the data parameter of the recipes::reciep() function.</li>
<li><code>.recipe_formula</code> - The formula that is going to be passed. For example if you are using the diamonds data then the formula would most likely be something like price ~ .</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s go over some examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;"># Regression</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;">hai_xgboost_data_prepper</span>(<span class="at" style="color: #657422;">.data =</span> diamonds, <span class="at" style="color: #657422;">.recipe_formula =</span> price <span class="sc" style="color: #5E5E5E;">~</span> .)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Recipe

Inputs:

      role #variables
   outcome          1
 predictor          9

Operations:

Factor variables from tidyselect::vars_select_helpers$where(is.charac...
Novel factor level assignment for recipes::all_nominal_predictors()
Dummy variables from recipes::all_nominal_predictors()
Zero variance filter on recipes::all_predictors()</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">reg_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_xgboost_data_prepper</span>(diamonds, price <span class="sc" style="color: #5E5E5E;">~</span> .)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;">get_juiced_data</span>(reg_obj)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 53,940 × 27
   carat depth table     x     y     z price  cut_1  cut_2  cut_3  cut_4   cut_5
   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;
 1  0.23  61.5    55  3.95  3.98  2.43   326  0.359 -0.109 -0.522 -0.567 -0.315 
 2  0.21  59.8    61  3.89  3.84  2.31   326  0.120 -0.436 -0.298  0.378  0.630 
 3  0.23  56.9    65  4.05  4.07  2.31   327 -0.359 -0.109  0.522 -0.567  0.315 
 4  0.29  62.4    58  4.2   4.23  2.63   334  0.120 -0.436 -0.298  0.378  0.630 
 5  0.31  63.3    58  4.34  4.35  2.75   335 -0.359 -0.109  0.522 -0.567  0.315 
 6  0.24  62.8    57  3.94  3.96  2.48   336 -0.120 -0.436  0.298  0.378 -0.630 
 7  0.24  62.3    57  3.95  3.98  2.47   336 -0.120 -0.436  0.298  0.378 -0.630 
 8  0.26  61.9    55  4.07  4.11  2.53   337 -0.120 -0.436  0.298  0.378 -0.630 
 9  0.22  65.1    61  3.87  3.78  2.49   337 -0.598  0.546 -0.373  0.189 -0.0630
10  0.23  59.4    61  4     4.05  2.39   338 -0.120 -0.436  0.298  0.378 -0.630 
# … with 53,930 more rows, and 15 more variables: color_1 &lt;dbl&gt;, color_2 &lt;dbl&gt;,
#   color_3 &lt;dbl&gt;, color_4 &lt;dbl&gt;, color_5 &lt;dbl&gt;, color_6 &lt;dbl&gt;, color_7 &lt;dbl&gt;,
#   clarity_1 &lt;dbl&gt;, clarity_2 &lt;dbl&gt;, clarity_3 &lt;dbl&gt;, clarity_4 &lt;dbl&gt;,
#   clarity_5 &lt;dbl&gt;, clarity_6 &lt;dbl&gt;, clarity_7 &lt;dbl&gt;, clarity_8 &lt;dbl&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;"># Classification</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">hai_xgboost_data_prepper</span>(Titanic, Survived <span class="sc" style="color: #5E5E5E;">~</span> .)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Recipe

Inputs:

      role #variables
   outcome          1
 predictor          4

Operations:

Factor variables from tidyselect::vars_select_helpers$where(is.charac...
Novel factor level assignment for recipes::all_nominal_predictors()
Dummy variables from recipes::all_nominal_predictors()
Zero variance filter on recipes::all_predictors()</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">cla_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_xgboost_data_prepper</span>(Titanic, Survived <span class="sc" style="color: #5E5E5E;">~</span> .)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">get_juiced_data</span>(cla_obj)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 32 × 7
       n Survived Class_X2nd Class_X3rd Class_Crew Sex_Male Age_Child
   &lt;dbl&gt; &lt;fct&gt;         &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;
 1     0 No                0          0          0        1         1
 2     0 No                1          0          0        1         1
 3    35 No                0          1          0        1         1
 4     0 No                0          0          1        1         1
 5     0 No                0          0          0        0         1
 6     0 No                1          0          0        0         1
 7    17 No                0          1          0        0         1
 8     0 No                0          0          1        0         1
 9   118 No                0          0          0        1         0
10   154 No                1          0          0        1         0
# … with 22 more rows</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <category>xgboost</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-15/index.html</guid>
  <pubDate>Tue, 15 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Find Skewed Features with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-14/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Sometimes we may want to quickly find skewed features in a data set. This is easily achiveable using the <code>{healthyR.ai}</code> library. There is a simple function called <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_skewed_features.html"><code>hai_skewed_features()</code></a>. We are going to go over this function today.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s first take a look at the function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_skewed_features</span>(</span>
<span id="cb1-2">  .data, </span>
<span id="cb1-3">  <span class="at" style="color: #657422;">.threshold =</span> <span class="fl" style="color: #AD0000;">0.6</span>, </span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.drop_keys =</span> <span class="cn" style="color: #8f5902;">NULL</span></span>
<span id="cb1-5">  )</span></code></pre></div>
</div>
<p>Now let’s take a look at the arguments that go to the parameters of the function.</p>
<ul>
<li><code>.data</code> - The data.frame/tibble you are passing in.</li>
<li><code>.threshold</code> - A level of skewness that indicates where you feel a column should be considered skewed.</li>
<li><code>.drop_keys</code> - A c() character vector of columns you do not want passed to the function.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Here are a couple of examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">hai_skewed_features</span>(mtcars)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "mpg"  "hp"   "carb"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">hai_skewed_features</span>(mtcars, <span class="at" style="color: #657422;">.drop_keys =</span> <span class="st" style="color: #20794D;">"hp"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "mpg"  "carb"</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <category>skew</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-14/index.html</guid>
  <pubDate>Mon, 14 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Time Series Lag Correlation Plots</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-11-11/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In time series analysis there is something called a lag. This simply means we take a look at some past event from some point in time <em>t</em>. This is a non-statistical method for looking at a relationship between a timeseries and its lags.</p>
<p><a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> has a function called <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_lag_correlation.html"><code>ts_lag_correlation()</code></a>. This function, as described by it’s name, provides more than just a simple lag plot.</p>
<p>This function provides a lot of extra information for the end user. First let’s go over the function call.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<section id="function-call" class="level2">
<h2 class="anchored" data-anchor-id="function-call">Function Call</h2>
<p>Here is the full call:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_lag_correlation</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .date_col,</span>
<span id="cb1-4">  .value_col,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.lags =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.heatmap_color_low =</span> <span class="st" style="color: #20794D;">"white"</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.heatmap_color_hi =</span> <span class="st" style="color: #20794D;">"steelblue"</span></span>
<span id="cb1-8">)</span></code></pre></div>
</div>
<p>Here are the arguments that get supplied to the different parameters.</p>
<ul>
<li><code>.data</code> - A tibble of time series data</li>
<li><code>.date_col</code> - A date column</li>
<li><code>.value_col</code> - The value column being analyzed</li>
<li><code>.lags</code> - This is a vector of integer lags, ie 1 or c(1,6,12)</li>
<li><code>.heatmap_color_low</code> - What color should the low values of the heatmap of the correlation matrix be, the default is <strong>‘white’</strong></li>
<li><code>.heatmap_color_hi</code> - What color should the low values of the heatmap of the correlation matrix be, the default is <strong>‘steelblue’</strong></li>
</ul>
</section>
<section id="function-return" class="level2">
<h2 class="anchored" data-anchor-id="function-return">Function Return</h2>
<p>The function itself returns a list object. The list has the following elements in it:</p>
<p><em>Data Elements</em></p>
<ul>
<li><code>lag_list</code></li>
<li><code>lag_tbl</code></li>
<li><code>correlation_lag_matrix</code></li>
<li><code>correlation_lag_tbl</code></li>
</ul>
<p><em>Plot Elements</em></p>
<ul>
<li><code>lag_plot</code></li>
<li><code>plotly_lag_plot</code></li>
<li><code>correlation_heatmap</code></li>
<li><code>plotly_heatmap</code></li>
</ul>
</section>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s take a look at an example. We are going to use the built in data set of <strong>AirPassengers</strong>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"></span>
<span id="cb2-4">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts_to_tbl</span>(AirPassengers) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>index)</span>
<span id="cb2-5">lags <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">6</span>,<span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7">output <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts_lag_correlation</span>(</span>
<span id="cb2-8">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb2-9">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;">.value_col =</span> value,</span>
<span id="cb2-11">  <span class="at" style="color: #657422;">.lags =</span> lags</span>
<span id="cb2-12">)</span></code></pre></div>
</div>
<p>Now that we have our output, let’s examine each piece of it.</p>
<section id="data-elements" class="level2">
<h2 class="anchored" data-anchor-id="data-elements">Data Elements</h2>
<p>Here are the data elements.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">output<span class="sc" style="color: #5E5E5E;">$</span>data<span class="sc" style="color: #5E5E5E;">$</span>lag_list</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
# A tibble: 143 × 3
   lag   value lagged_value
   &lt;fct&gt; &lt;dbl&gt;        &lt;dbl&gt;
 1 1       118          112
 2 1       132          118
 3 1       129          132
 4 1       121          129
 5 1       135          121
 6 1       148          135
 7 1       148          148
 8 1       136          148
 9 1       119          136
10 1       104          119
# … with 133 more rows

[[2]]
# A tibble: 141 × 3
   lag   value lagged_value
   &lt;fct&gt; &lt;dbl&gt;        &lt;dbl&gt;
 1 3       129          112
 2 3       121          118
 3 3       135          132
 4 3       148          129
 5 3       148          121
 6 3       136          135
 7 3       119          148
 8 3       104          148
 9 3       118          136
10 3       115          119
# … with 131 more rows

[[3]]
# A tibble: 138 × 3
   lag   value lagged_value
   &lt;fct&gt; &lt;dbl&gt;        &lt;dbl&gt;
 1 6       148          112
 2 6       148          118
 3 6       136          132
 4 6       119          129
 5 6       104          121
 6 6       118          135
 7 6       115          148
 8 6       126          148
 9 6       141          136
10 6       135          119
# … with 128 more rows

[[4]]
# A tibble: 132 × 3
   lag   value lagged_value
   &lt;fct&gt; &lt;dbl&gt;        &lt;dbl&gt;
 1 12      115          112
 2 12      126          118
 3 12      141          132
 4 12      135          129
 5 12      125          121
 6 12      149          135
 7 12      170          148
 8 12      170          148
 9 12      158          136
10 12      133          119
# … with 122 more rows</code></pre>
</div>
</div>
<p>This is a list of all the tibbles of the different lags that were chosen.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">output<span class="sc" style="color: #5E5E5E;">$</span>data<span class="sc" style="color: #5E5E5E;">$</span>lag_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 554 × 4
   lag   value lagged_value lag_title
   &lt;fct&gt; &lt;dbl&gt;        &lt;dbl&gt; &lt;fct&gt;    
 1 1       118          112 Lag: 1   
 2 1       132          118 Lag: 1   
 3 1       129          132 Lag: 1   
 4 1       121          129 Lag: 1   
 5 1       135          121 Lag: 1   
 6 1       148          135 Lag: 1   
 7 1       148          148 Lag: 1   
 8 1       136          148 Lag: 1   
 9 1       119          136 Lag: 1   
10 1       104          119 Lag: 1   
# … with 544 more rows</code></pre>
</div>
</div>
<p>This is the long lag <code>tibble</code> with all of the lags in it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">output<span class="sc" style="color: #5E5E5E;">$</span>data<span class="sc" style="color: #5E5E5E;">$</span>correlation_lag_matrix</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                value value_lag1 value_lag3 value_lag6 value_lag12
value       1.0000000  0.9542938  0.8186636  0.7657001   0.9905274
value_lag1  0.9542938  1.0000000  0.8828054  0.7726530   0.9492382
value_lag3  0.8186636  0.8828054  1.0000000  0.8349550   0.8218493
value_lag6  0.7657001  0.7726530  0.8349550  1.0000000   0.7780911
value_lag12 0.9905274  0.9492382  0.8218493  0.7780911   1.0000000</code></pre>
</div>
</div>
<p>This is the correlation matrix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">output<span class="sc" style="color: #5E5E5E;">$</span>data<span class="sc" style="color: #5E5E5E;">$</span>correlation_lag_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 25 × 3
   name        data_names value
   &lt;fct&gt;       &lt;fct&gt;      &lt;dbl&gt;
 1 value       value      1    
 2 value_lag1  value      0.954
 3 value_lag3  value      0.819
 4 value_lag6  value      0.766
 5 value_lag12 value      0.991
 6 value       value_lag1 0.954
 7 value_lag1  value_lag1 1    
 8 value_lag3  value_lag1 0.883
 9 value_lag6  value_lag1 0.773
10 value_lag12 value_lag1 0.949
# … with 15 more rows</code></pre>
</div>
</div>
<p>This is the correlation lag <code>tibble</code></p>
</section>
<section id="plot-elements" class="level2">
<h2 class="anchored" data-anchor-id="plot-elements">Plot Elements</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">output<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>lag_plot</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-11-11/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The Lag Plot itself.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">output<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>plotly_lag_plot</span></code></pre></div>
<div class="cell-output-display">
<div id="htmlwidget-2ab03afc70382d2780ce" style="width:100%;height:464px;" class="plotly html-widget"></div>
<script type="application/json" data-for="htmlwidget-2ab03afc70382d2780ce">{"x":{"data":[{"x":[118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390,432],"y":[112,118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390],"text":["value: 118<br />lagged_value: 112<br />lag: 1","value: 132<br />lagged_value: 118<br />lag: 1","value: 129<br />lagged_value: 132<br />lag: 1","value: 121<br />lagged_value: 129<br />lag: 1","value: 135<br />lagged_value: 121<br />lag: 1","value: 148<br />lagged_value: 135<br />lag: 1","value: 148<br />lagged_value: 148<br />lag: 1","value: 136<br />lagged_value: 148<br />lag: 1","value: 119<br />lagged_value: 136<br />lag: 1","value: 104<br />lagged_value: 119<br />lag: 1","value: 118<br />lagged_value: 104<br />lag: 1","value: 115<br />lagged_value: 118<br />lag: 1","value: 126<br />lagged_value: 115<br />lag: 1","value: 141<br />lagged_value: 126<br />lag: 1","value: 135<br />lagged_value: 141<br />lag: 1","value: 125<br />lagged_value: 135<br />lag: 1","value: 149<br />lagged_value: 125<br />lag: 1","value: 170<br />lagged_value: 149<br />lag: 1","value: 170<br />lagged_value: 170<br />lag: 1","value: 158<br />lagged_value: 170<br />lag: 1","value: 133<br />lagged_value: 158<br />lag: 1","value: 114<br />lagged_value: 133<br />lag: 1","value: 140<br />lagged_value: 114<br />lag: 1","value: 145<br />lagged_value: 140<br />lag: 1","value: 150<br />lagged_value: 145<br />lag: 1","value: 178<br />lagged_value: 150<br />lag: 1","value: 163<br />lagged_value: 178<br />lag: 1","value: 172<br />lagged_value: 163<br />lag: 1","value: 178<br />lagged_value: 172<br />lag: 1","value: 199<br />lagged_value: 178<br />lag: 1","value: 199<br />lagged_value: 199<br />lag: 1","value: 184<br />lagged_value: 199<br />lag: 1","value: 162<br />lagged_value: 184<br />lag: 1","value: 146<br />lagged_value: 162<br />lag: 1","value: 166<br />lagged_value: 146<br />lag: 1","value: 171<br />lagged_value: 166<br />lag: 1","value: 180<br />lagged_value: 171<br />lag: 1","value: 193<br />lagged_value: 180<br />lag: 1","value: 181<br />lagged_value: 193<br />lag: 1","value: 183<br />lagged_value: 181<br />lag: 1","value: 218<br />lagged_value: 183<br />lag: 1","value: 230<br />lagged_value: 218<br />lag: 1","value: 242<br />lagged_value: 230<br />lag: 1","value: 209<br />lagged_value: 242<br />lag: 1","value: 191<br />lagged_value: 209<br />lag: 1","value: 172<br />lagged_value: 191<br />lag: 1","value: 194<br />lagged_value: 172<br />lag: 1","value: 196<br />lagged_value: 194<br />lag: 1","value: 196<br />lagged_value: 196<br />lag: 1","value: 236<br />lagged_value: 196<br />lag: 1","value: 235<br />lagged_value: 236<br />lag: 1","value: 229<br />lagged_value: 235<br />lag: 1","value: 243<br />lagged_value: 229<br />lag: 1","value: 264<br />lagged_value: 243<br />lag: 1","value: 272<br />lagged_value: 264<br />lag: 1","value: 237<br />lagged_value: 272<br />lag: 1","value: 211<br />lagged_value: 237<br />lag: 1","value: 180<br />lagged_value: 211<br />lag: 1","value: 201<br />lagged_value: 180<br />lag: 1","value: 204<br />lagged_value: 201<br />lag: 1","value: 188<br />lagged_value: 204<br />lag: 1","value: 235<br />lagged_value: 188<br />lag: 1","value: 227<br />lagged_value: 235<br />lag: 1","value: 234<br />lagged_value: 227<br />lag: 1","value: 264<br />lagged_value: 234<br />lag: 1","value: 302<br />lagged_value: 264<br />lag: 1","value: 293<br />lagged_value: 302<br />lag: 1","value: 259<br />lagged_value: 293<br />lag: 1","value: 229<br />lagged_value: 259<br />lag: 1","value: 203<br />lagged_value: 229<br />lag: 1","value: 229<br />lagged_value: 203<br />lag: 1","value: 242<br />lagged_value: 229<br />lag: 1","value: 233<br />lagged_value: 242<br />lag: 1","value: 267<br />lagged_value: 233<br />lag: 1","value: 269<br />lagged_value: 267<br />lag: 1","value: 270<br />lagged_value: 269<br />lag: 1","value: 315<br />lagged_value: 270<br />lag: 1","value: 364<br />lagged_value: 315<br />lag: 1","value: 347<br />lagged_value: 364<br />lag: 1","value: 312<br />lagged_value: 347<br />lag: 1","value: 274<br />lagged_value: 312<br />lag: 1","value: 237<br />lagged_value: 274<br />lag: 1","value: 278<br />lagged_value: 237<br />lag: 1","value: 284<br />lagged_value: 278<br />lag: 1","value: 277<br />lagged_value: 284<br />lag: 1","value: 317<br />lagged_value: 277<br />lag: 1","value: 313<br />lagged_value: 317<br />lag: 1","value: 318<br />lagged_value: 313<br />lag: 1","value: 374<br />lagged_value: 318<br />lag: 1","value: 413<br />lagged_value: 374<br />lag: 1","value: 405<br />lagged_value: 413<br />lag: 1","value: 355<br />lagged_value: 405<br />lag: 1","value: 306<br />lagged_value: 355<br />lag: 1","value: 271<br />lagged_value: 306<br />lag: 1","value: 306<br />lagged_value: 271<br />lag: 1","value: 315<br />lagged_value: 306<br />lag: 1","value: 301<br />lagged_value: 315<br />lag: 1","value: 356<br />lagged_value: 301<br />lag: 1","value: 348<br />lagged_value: 356<br />lag: 1","value: 355<br />lagged_value: 348<br />lag: 1","value: 422<br />lagged_value: 355<br />lag: 1","value: 465<br />lagged_value: 422<br />lag: 1","value: 467<br />lagged_value: 465<br />lag: 1","value: 404<br />lagged_value: 467<br />lag: 1","value: 347<br />lagged_value: 404<br />lag: 1","value: 305<br />lagged_value: 347<br />lag: 1","value: 336<br />lagged_value: 305<br />lag: 1","value: 340<br />lagged_value: 336<br />lag: 1","value: 318<br />lagged_value: 340<br />lag: 1","value: 362<br />lagged_value: 318<br />lag: 1","value: 348<br />lagged_value: 362<br />lag: 1","value: 363<br />lagged_value: 348<br />lag: 1","value: 435<br />lagged_value: 363<br />lag: 1","value: 491<br />lagged_value: 435<br />lag: 1","value: 505<br />lagged_value: 491<br />lag: 1","value: 404<br />lagged_value: 505<br />lag: 1","value: 359<br />lagged_value: 404<br />lag: 1","value: 310<br />lagged_value: 359<br />lag: 1","value: 337<br />lagged_value: 310<br />lag: 1","value: 360<br />lagged_value: 337<br />lag: 1","value: 342<br />lagged_value: 360<br />lag: 1","value: 406<br />lagged_value: 342<br />lag: 1","value: 396<br />lagged_value: 406<br />lag: 1","value: 420<br />lagged_value: 396<br />lag: 1","value: 472<br />lagged_value: 420<br />lag: 1","value: 548<br />lagged_value: 472<br />lag: 1","value: 559<br />lagged_value: 548<br />lag: 1","value: 463<br />lagged_value: 559<br />lag: 1","value: 407<br />lagged_value: 463<br />lag: 1","value: 362<br />lagged_value: 407<br />lag: 1","value: 405<br />lagged_value: 362<br />lag: 1","value: 417<br />lagged_value: 405<br />lag: 1","value: 391<br />lagged_value: 417<br />lag: 1","value: 419<br />lagged_value: 391<br />lag: 1","value: 461<br />lagged_value: 419<br />lag: 1","value: 472<br />lagged_value: 461<br />lag: 1","value: 535<br />lagged_value: 472<br />lag: 1","value: 622<br />lagged_value: 535<br />lag: 1","value: 606<br />lagged_value: 622<br />lag: 1","value: 508<br />lagged_value: 606<br />lag: 1","value: 461<br />lagged_value: 508<br />lag: 1","value: 390<br />lagged_value: 461<br />lag: 1","value: 432<br />lagged_value: 390<br />lag: 1"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(248,118,109,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)"}},"hoveron":"points","name":"1","legendgroup":"1","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390,432],"y":[112,118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508],"text":["value: 129<br />lagged_value: 112<br />lag: 3","value: 121<br />lagged_value: 118<br />lag: 3","value: 135<br />lagged_value: 132<br />lag: 3","value: 148<br />lagged_value: 129<br />lag: 3","value: 148<br />lagged_value: 121<br />lag: 3","value: 136<br />lagged_value: 135<br />lag: 3","value: 119<br />lagged_value: 148<br />lag: 3","value: 104<br />lagged_value: 148<br />lag: 3","value: 118<br />lagged_value: 136<br />lag: 3","value: 115<br />lagged_value: 119<br />lag: 3","value: 126<br />lagged_value: 104<br />lag: 3","value: 141<br />lagged_value: 118<br />lag: 3","value: 135<br />lagged_value: 115<br />lag: 3","value: 125<br />lagged_value: 126<br />lag: 3","value: 149<br />lagged_value: 141<br />lag: 3","value: 170<br />lagged_value: 135<br />lag: 3","value: 170<br />lagged_value: 125<br />lag: 3","value: 158<br />lagged_value: 149<br />lag: 3","value: 133<br />lagged_value: 170<br />lag: 3","value: 114<br />lagged_value: 170<br />lag: 3","value: 140<br />lagged_value: 158<br />lag: 3","value: 145<br />lagged_value: 133<br />lag: 3","value: 150<br />lagged_value: 114<br />lag: 3","value: 178<br />lagged_value: 140<br />lag: 3","value: 163<br />lagged_value: 145<br />lag: 3","value: 172<br />lagged_value: 150<br />lag: 3","value: 178<br />lagged_value: 178<br />lag: 3","value: 199<br />lagged_value: 163<br />lag: 3","value: 199<br />lagged_value: 172<br />lag: 3","value: 184<br />lagged_value: 178<br />lag: 3","value: 162<br />lagged_value: 199<br />lag: 3","value: 146<br />lagged_value: 199<br />lag: 3","value: 166<br />lagged_value: 184<br />lag: 3","value: 171<br />lagged_value: 162<br />lag: 3","value: 180<br />lagged_value: 146<br />lag: 3","value: 193<br />lagged_value: 166<br />lag: 3","value: 181<br />lagged_value: 171<br />lag: 3","value: 183<br />lagged_value: 180<br />lag: 3","value: 218<br />lagged_value: 193<br />lag: 3","value: 230<br />lagged_value: 181<br />lag: 3","value: 242<br />lagged_value: 183<br />lag: 3","value: 209<br />lagged_value: 218<br />lag: 3","value: 191<br />lagged_value: 230<br />lag: 3","value: 172<br />lagged_value: 242<br />lag: 3","value: 194<br />lagged_value: 209<br />lag: 3","value: 196<br />lagged_value: 191<br />lag: 3","value: 196<br />lagged_value: 172<br />lag: 3","value: 236<br />lagged_value: 194<br />lag: 3","value: 235<br />lagged_value: 196<br />lag: 3","value: 229<br />lagged_value: 196<br />lag: 3","value: 243<br />lagged_value: 236<br />lag: 3","value: 264<br />lagged_value: 235<br />lag: 3","value: 272<br />lagged_value: 229<br />lag: 3","value: 237<br />lagged_value: 243<br />lag: 3","value: 211<br />lagged_value: 264<br />lag: 3","value: 180<br />lagged_value: 272<br />lag: 3","value: 201<br />lagged_value: 237<br />lag: 3","value: 204<br />lagged_value: 211<br />lag: 3","value: 188<br />lagged_value: 180<br />lag: 3","value: 235<br />lagged_value: 201<br />lag: 3","value: 227<br />lagged_value: 204<br />lag: 3","value: 234<br />lagged_value: 188<br />lag: 3","value: 264<br />lagged_value: 235<br />lag: 3","value: 302<br />lagged_value: 227<br />lag: 3","value: 293<br />lagged_value: 234<br />lag: 3","value: 259<br />lagged_value: 264<br />lag: 3","value: 229<br />lagged_value: 302<br />lag: 3","value: 203<br />lagged_value: 293<br />lag: 3","value: 229<br />lagged_value: 259<br />lag: 3","value: 242<br />lagged_value: 229<br />lag: 3","value: 233<br />lagged_value: 203<br />lag: 3","value: 267<br />lagged_value: 229<br />lag: 3","value: 269<br />lagged_value: 242<br />lag: 3","value: 270<br />lagged_value: 233<br />lag: 3","value: 315<br />lagged_value: 267<br />lag: 3","value: 364<br />lagged_value: 269<br />lag: 3","value: 347<br />lagged_value: 270<br />lag: 3","value: 312<br />lagged_value: 315<br />lag: 3","value: 274<br />lagged_value: 364<br />lag: 3","value: 237<br />lagged_value: 347<br />lag: 3","value: 278<br />lagged_value: 312<br />lag: 3","value: 284<br />lagged_value: 274<br />lag: 3","value: 277<br />lagged_value: 237<br />lag: 3","value: 317<br />lagged_value: 278<br />lag: 3","value: 313<br />lagged_value: 284<br />lag: 3","value: 318<br />lagged_value: 277<br />lag: 3","value: 374<br />lagged_value: 317<br />lag: 3","value: 413<br />lagged_value: 313<br />lag: 3","value: 405<br />lagged_value: 318<br />lag: 3","value: 355<br />lagged_value: 374<br />lag: 3","value: 306<br />lagged_value: 413<br />lag: 3","value: 271<br />lagged_value: 405<br />lag: 3","value: 306<br />lagged_value: 355<br />lag: 3","value: 315<br />lagged_value: 306<br />lag: 3","value: 301<br />lagged_value: 271<br />lag: 3","value: 356<br />lagged_value: 306<br />lag: 3","value: 348<br />lagged_value: 315<br />lag: 3","value: 355<br />lagged_value: 301<br />lag: 3","value: 422<br />lagged_value: 356<br />lag: 3","value: 465<br />lagged_value: 348<br />lag: 3","value: 467<br />lagged_value: 355<br />lag: 3","value: 404<br />lagged_value: 422<br />lag: 3","value: 347<br />lagged_value: 465<br />lag: 3","value: 305<br />lagged_value: 467<br />lag: 3","value: 336<br />lagged_value: 404<br />lag: 3","value: 340<br />lagged_value: 347<br />lag: 3","value: 318<br />lagged_value: 305<br />lag: 3","value: 362<br />lagged_value: 336<br />lag: 3","value: 348<br />lagged_value: 340<br />lag: 3","value: 363<br />lagged_value: 318<br />lag: 3","value: 435<br />lagged_value: 362<br />lag: 3","value: 491<br />lagged_value: 348<br />lag: 3","value: 505<br />lagged_value: 363<br />lag: 3","value: 404<br />lagged_value: 435<br />lag: 3","value: 359<br />lagged_value: 491<br />lag: 3","value: 310<br />lagged_value: 505<br />lag: 3","value: 337<br />lagged_value: 404<br />lag: 3","value: 360<br />lagged_value: 359<br />lag: 3","value: 342<br />lagged_value: 310<br />lag: 3","value: 406<br />lagged_value: 337<br />lag: 3","value: 396<br />lagged_value: 360<br />lag: 3","value: 420<br />lagged_value: 342<br />lag: 3","value: 472<br />lagged_value: 406<br />lag: 3","value: 548<br />lagged_value: 396<br />lag: 3","value: 559<br />lagged_value: 420<br />lag: 3","value: 463<br />lagged_value: 472<br />lag: 3","value: 407<br />lagged_value: 548<br />lag: 3","value: 362<br />lagged_value: 559<br />lag: 3","value: 405<br />lagged_value: 463<br />lag: 3","value: 417<br />lagged_value: 407<br />lag: 3","value: 391<br />lagged_value: 362<br />lag: 3","value: 419<br />lagged_value: 405<br />lag: 3","value: 461<br />lagged_value: 417<br />lag: 3","value: 472<br />lagged_value: 391<br />lag: 3","value: 535<br />lagged_value: 419<br />lag: 3","value: 622<br />lagged_value: 461<br />lag: 3","value: 606<br />lagged_value: 472<br />lag: 3","value: 508<br />lagged_value: 535<br />lag: 3","value: 461<br />lagged_value: 622<br />lag: 3","value: 390<br />lagged_value: 606<br />lag: 3","value: 432<br />lagged_value: 508<br />lag: 3"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(124,174,0,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(124,174,0,1)"}},"hoveron":"points","name":"3","legendgroup":"3","showlegend":true,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390,432],"y":[112,118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535],"text":["value: 148<br />lagged_value: 112<br />lag: 6","value: 148<br />lagged_value: 118<br />lag: 6","value: 136<br />lagged_value: 132<br />lag: 6","value: 119<br />lagged_value: 129<br />lag: 6","value: 104<br />lagged_value: 121<br />lag: 6","value: 118<br />lagged_value: 135<br />lag: 6","value: 115<br />lagged_value: 148<br />lag: 6","value: 126<br />lagged_value: 148<br />lag: 6","value: 141<br />lagged_value: 136<br />lag: 6","value: 135<br />lagged_value: 119<br />lag: 6","value: 125<br />lagged_value: 104<br />lag: 6","value: 149<br />lagged_value: 118<br />lag: 6","value: 170<br />lagged_value: 115<br />lag: 6","value: 170<br />lagged_value: 126<br />lag: 6","value: 158<br />lagged_value: 141<br />lag: 6","value: 133<br />lagged_value: 135<br />lag: 6","value: 114<br />lagged_value: 125<br />lag: 6","value: 140<br />lagged_value: 149<br />lag: 6","value: 145<br />lagged_value: 170<br />lag: 6","value: 150<br />lagged_value: 170<br />lag: 6","value: 178<br />lagged_value: 158<br />lag: 6","value: 163<br />lagged_value: 133<br />lag: 6","value: 172<br />lagged_value: 114<br />lag: 6","value: 178<br />lagged_value: 140<br />lag: 6","value: 199<br />lagged_value: 145<br />lag: 6","value: 199<br />lagged_value: 150<br />lag: 6","value: 184<br />lagged_value: 178<br />lag: 6","value: 162<br />lagged_value: 163<br />lag: 6","value: 146<br />lagged_value: 172<br />lag: 6","value: 166<br />lagged_value: 178<br />lag: 6","value: 171<br />lagged_value: 199<br />lag: 6","value: 180<br />lagged_value: 199<br />lag: 6","value: 193<br />lagged_value: 184<br />lag: 6","value: 181<br />lagged_value: 162<br />lag: 6","value: 183<br />lagged_value: 146<br />lag: 6","value: 218<br />lagged_value: 166<br />lag: 6","value: 230<br />lagged_value: 171<br />lag: 6","value: 242<br />lagged_value: 180<br />lag: 6","value: 209<br />lagged_value: 193<br />lag: 6","value: 191<br />lagged_value: 181<br />lag: 6","value: 172<br />lagged_value: 183<br />lag: 6","value: 194<br />lagged_value: 218<br />lag: 6","value: 196<br />lagged_value: 230<br />lag: 6","value: 196<br />lagged_value: 242<br />lag: 6","value: 236<br />lagged_value: 209<br />lag: 6","value: 235<br />lagged_value: 191<br />lag: 6","value: 229<br />lagged_value: 172<br />lag: 6","value: 243<br />lagged_value: 194<br />lag: 6","value: 264<br />lagged_value: 196<br />lag: 6","value: 272<br />lagged_value: 196<br />lag: 6","value: 237<br />lagged_value: 236<br />lag: 6","value: 211<br />lagged_value: 235<br />lag: 6","value: 180<br />lagged_value: 229<br />lag: 6","value: 201<br />lagged_value: 243<br />lag: 6","value: 204<br />lagged_value: 264<br />lag: 6","value: 188<br />lagged_value: 272<br />lag: 6","value: 235<br />lagged_value: 237<br />lag: 6","value: 227<br />lagged_value: 211<br />lag: 6","value: 234<br />lagged_value: 180<br />lag: 6","value: 264<br />lagged_value: 201<br />lag: 6","value: 302<br />lagged_value: 204<br />lag: 6","value: 293<br />lagged_value: 188<br />lag: 6","value: 259<br />lagged_value: 235<br />lag: 6","value: 229<br />lagged_value: 227<br />lag: 6","value: 203<br />lagged_value: 234<br />lag: 6","value: 229<br />lagged_value: 264<br />lag: 6","value: 242<br />lagged_value: 302<br />lag: 6","value: 233<br />lagged_value: 293<br />lag: 6","value: 267<br />lagged_value: 259<br />lag: 6","value: 269<br />lagged_value: 229<br />lag: 6","value: 270<br />lagged_value: 203<br />lag: 6","value: 315<br />lagged_value: 229<br />lag: 6","value: 364<br />lagged_value: 242<br />lag: 6","value: 347<br />lagged_value: 233<br />lag: 6","value: 312<br />lagged_value: 267<br />lag: 6","value: 274<br />lagged_value: 269<br />lag: 6","value: 237<br />lagged_value: 270<br />lag: 6","value: 278<br />lagged_value: 315<br />lag: 6","value: 284<br />lagged_value: 364<br />lag: 6","value: 277<br />lagged_value: 347<br />lag: 6","value: 317<br />lagged_value: 312<br />lag: 6","value: 313<br />lagged_value: 274<br />lag: 6","value: 318<br />lagged_value: 237<br />lag: 6","value: 374<br />lagged_value: 278<br />lag: 6","value: 413<br />lagged_value: 284<br />lag: 6","value: 405<br />lagged_value: 277<br />lag: 6","value: 355<br />lagged_value: 317<br />lag: 6","value: 306<br />lagged_value: 313<br />lag: 6","value: 271<br />lagged_value: 318<br />lag: 6","value: 306<br />lagged_value: 374<br />lag: 6","value: 315<br />lagged_value: 413<br />lag: 6","value: 301<br />lagged_value: 405<br />lag: 6","value: 356<br />lagged_value: 355<br />lag: 6","value: 348<br />lagged_value: 306<br />lag: 6","value: 355<br />lagged_value: 271<br />lag: 6","value: 422<br />lagged_value: 306<br />lag: 6","value: 465<br />lagged_value: 315<br />lag: 6","value: 467<br />lagged_value: 301<br />lag: 6","value: 404<br />lagged_value: 356<br />lag: 6","value: 347<br />lagged_value: 348<br />lag: 6","value: 305<br />lagged_value: 355<br />lag: 6","value: 336<br />lagged_value: 422<br />lag: 6","value: 340<br />lagged_value: 465<br />lag: 6","value: 318<br />lagged_value: 467<br />lag: 6","value: 362<br />lagged_value: 404<br />lag: 6","value: 348<br />lagged_value: 347<br />lag: 6","value: 363<br />lagged_value: 305<br />lag: 6","value: 435<br />lagged_value: 336<br />lag: 6","value: 491<br />lagged_value: 340<br />lag: 6","value: 505<br />lagged_value: 318<br />lag: 6","value: 404<br />lagged_value: 362<br />lag: 6","value: 359<br />lagged_value: 348<br />lag: 6","value: 310<br />lagged_value: 363<br />lag: 6","value: 337<br />lagged_value: 435<br />lag: 6","value: 360<br />lagged_value: 491<br />lag: 6","value: 342<br />lagged_value: 505<br />lag: 6","value: 406<br />lagged_value: 404<br />lag: 6","value: 396<br />lagged_value: 359<br />lag: 6","value: 420<br />lagged_value: 310<br />lag: 6","value: 472<br />lagged_value: 337<br />lag: 6","value: 548<br />lagged_value: 360<br />lag: 6","value: 559<br />lagged_value: 342<br />lag: 6","value: 463<br />lagged_value: 406<br />lag: 6","value: 407<br />lagged_value: 396<br />lag: 6","value: 362<br />lagged_value: 420<br />lag: 6","value: 405<br />lagged_value: 472<br />lag: 6","value: 417<br />lagged_value: 548<br />lag: 6","value: 391<br />lagged_value: 559<br />lag: 6","value: 419<br />lagged_value: 463<br />lag: 6","value: 461<br />lagged_value: 407<br />lag: 6","value: 472<br />lagged_value: 362<br />lag: 6","value: 535<br />lagged_value: 405<br />lag: 6","value: 622<br />lagged_value: 417<br />lag: 6","value: 606<br />lagged_value: 391<br />lag: 6","value: 508<br />lagged_value: 419<br />lag: 6","value: 461<br />lagged_value: 461<br />lag: 6","value: 390<br />lagged_value: 472<br />lag: 6","value: 432<br />lagged_value: 535<br />lag: 6"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,191,196,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)"}},"hoveron":"points","name":"6","legendgroup":"6","showlegend":true,"xaxis":"x3","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390,432],"y":[112,118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,472,548,559,463,407,362,405],"text":["value: 115<br />lagged_value: 112<br />lag: 12","value: 126<br />lagged_value: 118<br />lag: 12","value: 141<br />lagged_value: 132<br />lag: 12","value: 135<br />lagged_value: 129<br />lag: 12","value: 125<br />lagged_value: 121<br />lag: 12","value: 149<br />lagged_value: 135<br />lag: 12","value: 170<br />lagged_value: 148<br />lag: 12","value: 170<br />lagged_value: 148<br />lag: 12","value: 158<br />lagged_value: 136<br />lag: 12","value: 133<br />lagged_value: 119<br />lag: 12","value: 114<br />lagged_value: 104<br />lag: 12","value: 140<br />lagged_value: 118<br />lag: 12","value: 145<br />lagged_value: 115<br />lag: 12","value: 150<br />lagged_value: 126<br />lag: 12","value: 178<br />lagged_value: 141<br />lag: 12","value: 163<br />lagged_value: 135<br />lag: 12","value: 172<br />lagged_value: 125<br />lag: 12","value: 178<br />lagged_value: 149<br />lag: 12","value: 199<br />lagged_value: 170<br />lag: 12","value: 199<br />lagged_value: 170<br />lag: 12","value: 184<br />lagged_value: 158<br />lag: 12","value: 162<br />lagged_value: 133<br />lag: 12","value: 146<br />lagged_value: 114<br />lag: 12","value: 166<br />lagged_value: 140<br />lag: 12","value: 171<br />lagged_value: 145<br />lag: 12","value: 180<br />lagged_value: 150<br />lag: 12","value: 193<br />lagged_value: 178<br />lag: 12","value: 181<br />lagged_value: 163<br />lag: 12","value: 183<br />lagged_value: 172<br />lag: 12","value: 218<br />lagged_value: 178<br />lag: 12","value: 230<br />lagged_value: 199<br />lag: 12","value: 242<br />lagged_value: 199<br />lag: 12","value: 209<br />lagged_value: 184<br />lag: 12","value: 191<br />lagged_value: 162<br />lag: 12","value: 172<br />lagged_value: 146<br />lag: 12","value: 194<br />lagged_value: 166<br />lag: 12","value: 196<br />lagged_value: 171<br />lag: 12","value: 196<br />lagged_value: 180<br />lag: 12","value: 236<br />lagged_value: 193<br />lag: 12","value: 235<br />lagged_value: 181<br />lag: 12","value: 229<br />lagged_value: 183<br />lag: 12","value: 243<br />lagged_value: 218<br />lag: 12","value: 264<br />lagged_value: 230<br />lag: 12","value: 272<br />lagged_value: 242<br />lag: 12","value: 237<br />lagged_value: 209<br />lag: 12","value: 211<br />lagged_value: 191<br />lag: 12","value: 180<br />lagged_value: 172<br />lag: 12","value: 201<br />lagged_value: 194<br />lag: 12","value: 204<br />lagged_value: 196<br />lag: 12","value: 188<br />lagged_value: 196<br />lag: 12","value: 235<br />lagged_value: 236<br />lag: 12","value: 227<br />lagged_value: 235<br />lag: 12","value: 234<br />lagged_value: 229<br />lag: 12","value: 264<br />lagged_value: 243<br />lag: 12","value: 302<br />lagged_value: 264<br />lag: 12","value: 293<br />lagged_value: 272<br />lag: 12","value: 259<br />lagged_value: 237<br />lag: 12","value: 229<br />lagged_value: 211<br />lag: 12","value: 203<br />lagged_value: 180<br />lag: 12","value: 229<br />lagged_value: 201<br />lag: 12","value: 242<br />lagged_value: 204<br />lag: 12","value: 233<br />lagged_value: 188<br />lag: 12","value: 267<br />lagged_value: 235<br />lag: 12","value: 269<br />lagged_value: 227<br />lag: 12","value: 270<br />lagged_value: 234<br />lag: 12","value: 315<br />lagged_value: 264<br />lag: 12","value: 364<br />lagged_value: 302<br />lag: 12","value: 347<br />lagged_value: 293<br />lag: 12","value: 312<br />lagged_value: 259<br />lag: 12","value: 274<br />lagged_value: 229<br />lag: 12","value: 237<br />lagged_value: 203<br />lag: 12","value: 278<br />lagged_value: 229<br />lag: 12","value: 284<br />lagged_value: 242<br />lag: 12","value: 277<br />lagged_value: 233<br />lag: 12","value: 317<br />lagged_value: 267<br />lag: 12","value: 313<br />lagged_value: 269<br />lag: 12","value: 318<br />lagged_value: 270<br />lag: 12","value: 374<br />lagged_value: 315<br />lag: 12","value: 413<br />lagged_value: 364<br />lag: 12","value: 405<br />lagged_value: 347<br />lag: 12","value: 355<br />lagged_value: 312<br />lag: 12","value: 306<br />lagged_value: 274<br />lag: 12","value: 271<br />lagged_value: 237<br />lag: 12","value: 306<br />lagged_value: 278<br />lag: 12","value: 315<br />lagged_value: 284<br />lag: 12","value: 301<br />lagged_value: 277<br />lag: 12","value: 356<br />lagged_value: 317<br />lag: 12","value: 348<br />lagged_value: 313<br />lag: 12","value: 355<br />lagged_value: 318<br />lag: 12","value: 422<br />lagged_value: 374<br />lag: 12","value: 465<br />lagged_value: 413<br />lag: 12","value: 467<br />lagged_value: 405<br />lag: 12","value: 404<br />lagged_value: 355<br />lag: 12","value: 347<br />lagged_value: 306<br />lag: 12","value: 305<br />lagged_value: 271<br />lag: 12","value: 336<br />lagged_value: 306<br />lag: 12","value: 340<br />lagged_value: 315<br />lag: 12","value: 318<br />lagged_value: 301<br />lag: 12","value: 362<br />lagged_value: 356<br />lag: 12","value: 348<br />lagged_value: 348<br />lag: 12","value: 363<br />lagged_value: 355<br />lag: 12","value: 435<br />lagged_value: 422<br />lag: 12","value: 491<br />lagged_value: 465<br />lag: 12","value: 505<br />lagged_value: 467<br />lag: 12","value: 404<br />lagged_value: 404<br />lag: 12","value: 359<br />lagged_value: 347<br />lag: 12","value: 310<br />lagged_value: 305<br />lag: 12","value: 337<br />lagged_value: 336<br />lag: 12","value: 360<br />lagged_value: 340<br />lag: 12","value: 342<br />lagged_value: 318<br />lag: 12","value: 406<br />lagged_value: 362<br />lag: 12","value: 396<br />lagged_value: 348<br />lag: 12","value: 420<br />lagged_value: 363<br />lag: 12","value: 472<br />lagged_value: 435<br />lag: 12","value: 548<br />lagged_value: 491<br />lag: 12","value: 559<br />lagged_value: 505<br />lag: 12","value: 463<br />lagged_value: 404<br />lag: 12","value: 407<br />lagged_value: 359<br />lag: 12","value: 362<br />lagged_value: 310<br />lag: 12","value: 405<br />lagged_value: 337<br />lag: 12","value: 417<br />lagged_value: 360<br />lag: 12","value: 391<br />lagged_value: 342<br />lag: 12","value: 419<br />lagged_value: 406<br />lag: 12","value: 461<br />lagged_value: 396<br />lag: 12","value: 472<br />lagged_value: 420<br />lag: 12","value: 535<br />lagged_value: 472<br />lag: 12","value: 622<br />lagged_value: 548<br />lag: 12","value: 606<br />lagged_value: 559<br />lag: 12","value: 508<br />lagged_value: 463<br />lag: 12","value: 461<br />lagged_value: 407<br />lag: 12","value: 390<br />lagged_value: 362<br />lag: 12","value: 432<br />lagged_value: 405<br />lag: 12"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(199,124,255,1)","opacity":1,"size":5.66929133858268,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(199,124,255,1)"}},"hoveron":"points","name":"12","legendgroup":"12","showlegend":true,"xaxis":"x4","yaxis":"y4","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":37.9178082191781,"r":7.30593607305936,"b":40.1826484018265,"l":43.1050228310502},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"xaxis":{"domain":[0,0.486138290932811],"automargin":true,"type":"linear","autorange":false,"range":[78.1,647.9],"tickmode":"array","ticktext":["200","400","600"],"tickvals":[200,400,600],"categoryorder":"array","categoryarray":["200","400","600"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":"","hoverformat":".2f"},"annotations":[{"text":"Original Value","x":0.5,"y":0,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"top","annotationType":"axis","yshift":-21.9178082191781},{"text":"Lagged Value","x":0,"y":0.5,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"xref":"paper","yref":"paper","textangle":-90,"xanchor":"right","yanchor":"center","annotationType":"axis","xshift":-27.7625570776256},{"text":"Lag: 1","x":0.243069145466406,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 3","x":0.756930854533594,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 6","x":0.243069145466406,"y":0.476027397260274,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Lag: 12","x":0.756930854533594,"y":0.476027397260274,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"}],"yaxis":{"domain":[0.523972602739726,1],"automargin":true,"type":"linear","autorange":false,"range":[78.1,647.9],"tickmode":"array","ticktext":["200","400","600"],"tickvals":[200,400,600],"categoryorder":"array","categoryarray":["200","400","600"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.486138290932811,"y0":0.523972602739726,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.486138290932811,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.513861709067189,"x1":1,"y0":0.523972602739726,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.513861709067189,"x1":1,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.486138290932811,"y0":0,"y1":0.476027397260274},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.486138290932811,"y0":0,"y1":23.37899543379,"yanchor":0.476027397260274,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.513861709067189,"x1":1,"y0":0,"y1":0.476027397260274},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.513861709067189,"x1":1,"y0":0,"y1":23.37899543379,"yanchor":0.476027397260274,"ysizemode":"pixel"}],"xaxis2":{"type":"linear","autorange":false,"range":[78.1,647.9],"tickmode":"array","ticktext":["200","400","600"],"tickvals":[200,400,600],"categoryorder":"array","categoryarray":["200","400","600"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.513861709067189,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y2","title":"","hoverformat":".2f"},"yaxis2":{"type":"linear","autorange":false,"range":[78.1,647.9],"tickmode":"array","ticktext":["200","400","600"],"tickvals":[200,400,600],"categoryorder":"array","categoryarray":["200","400","600"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.523972602739726,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x2","title":"","hoverformat":".2f"},"xaxis3":{"type":"linear","autorange":false,"range":[78.1,647.9],"tickmode":"array","ticktext":["200","400","600"],"tickvals":[200,400,600],"categoryorder":"array","categoryarray":["200","400","600"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.486138290932811],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"yaxis3":{"type":"linear","autorange":false,"range":[81.25,581.75],"tickmode":"array","ticktext":["100","200","300","400","500"],"tickvals":[100,200,300,400,500],"categoryorder":"array","categoryarray":["100","200","300","400","500"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.476027397260274],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x3","title":"","hoverformat":".2f"},"xaxis4":{"type":"linear","autorange":false,"range":[88.6,647.4],"tickmode":"array","ticktext":["100","200","300","400","500","600"],"tickvals":[100,200,300,400,500,600],"categoryorder":"array","categoryarray":["100","200","300","400","500","600"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.513861709067189,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y4","title":"","hoverformat":".2f"},"yaxis4":{"type":"linear","autorange":false,"range":[81.25,581.75],"tickmode":"array","ticktext":["100","200","300","400","500"],"tickvals":[100,200,300,400,500],"categoryorder":"array","categoryarray":["100","200","300","400","500"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.476027397260274],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x4","title":"","hoverformat":".2f"},"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"d543bbe771d":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"d543bbe771d","visdat":{"d543bbe771d":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>A plotly version of the lag plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">output<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>correlation_heatmap</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-11-11/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>A heatmap of the correlations.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">output<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>plotly_heatmap</span></code></pre></div>
<div class="cell-output-display">
<div id="htmlwidget-76f1fe6d587312f5ab2a" style="width:100%;height:464px;" class="plotly html-widget"></div>
<script type="application/json" data-for="htmlwidget-76f1fe6d587312f5ab2a">{"x":{"data":[{"x":[1,2,3,4,5],"y":[1,2,3,4,5],"z":[[1,0.80492439925537,0.226050085010417,0,0.959570487009092],[0.80492439925537,1,0.499809604579061,0.029675212192311,0.783346726886175],[0.226050085010417,0.499809604579061,1,0.295582428364099,0.23964651370852],[0,0.029675212192311,0.295582428364099,1,0.0528852780613667],[0.959570487009092,0.783346726886175,0.23964651370852,0.0528852780613667,1]],"text":[["name: value<br />data_names: value<br />value: 1.0000000","name: value_lag1<br />data_names: value<br />value: 0.9542938","name: value_lag3<br />data_names: value<br />value: 0.8186636","name: value_lag6<br />data_names: value<br />value: 0.7657001","name: value_lag12<br />data_names: value<br />value: 0.9905274"],["name: value<br />data_names: value_lag1<br />value: 0.9542938","name: value_lag1<br />data_names: value_lag1<br />value: 1.0000000","name: value_lag3<br />data_names: value_lag1<br />value: 0.8828054","name: value_lag6<br />data_names: value_lag1<br />value: 0.7726530","name: value_lag12<br />data_names: value_lag1<br />value: 0.9492382"],["name: value<br />data_names: value_lag3<br />value: 0.8186636","name: value_lag1<br />data_names: value_lag3<br />value: 0.8828054","name: value_lag3<br />data_names: value_lag3<br />value: 1.0000000","name: value_lag6<br />data_names: value_lag3<br />value: 0.8349550","name: value_lag12<br />data_names: value_lag3<br />value: 0.8218493"],["name: value<br />data_names: value_lag6<br />value: 0.7657001","name: value_lag1<br />data_names: value_lag6<br />value: 0.7726530","name: value_lag3<br />data_names: value_lag6<br />value: 0.8349550","name: value_lag6<br />data_names: value_lag6<br />value: 1.0000000","name: value_lag12<br />data_names: value_lag6<br />value: 0.7780911"],["name: value<br />data_names: value_lag12<br />value: 0.9905274","name: value_lag1<br />data_names: value_lag12<br />value: 0.9492382","name: value_lag3<br />data_names: value_lag12<br />value: 0.8218493","name: value_lag6<br />data_names: value_lag12<br />value: 0.7780911","name: value_lag12<br />data_names: value_lag12<br />value: 1.0000000"]],"colorscale":[[0,"#FFFFFF"],[0.029675212192311,"#FAFBFD"],[0.0528852780613667,"#F6F8FB"],[0.226050085010417,"#D7E1EE"],[0.23964651370852,"#D5E0ED"],[0.295582428364099,"#CBD8E9"],[0.499809604579061,"#A7BED9"],[0.783346726886175,"#739CC4"],[0.80492439925537,"#6F99C3"],[0.959570487009092,"#4F87B7"],[1,"#4682B4"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1],"y":[1],"name":"99_a0d69953c3e7df3449968e1112b1fa7e","type":"scatter","mode":"markers","opacity":0,"hoverinfo":"skip","showlegend":false,"marker":{"color":[0,1],"colorscale":[[0,"#FFFFFF"],[0.00334448160535118,"#FEFFFF"],[0.00668896321070237,"#FEFEFE"],[0.0100334448160536,"#FDFEFE"],[0.0133779264214047,"#FDFDFE"],[0.0167224080267559,"#FCFDFE"],[0.0200668896321071,"#FBFCFD"],[0.0234113712374583,"#FBFCFD"],[0.0267558528428095,"#FAFBFD"],[0.0301003344481607,"#FAFBFD"],[0.0334448160535118,"#F9FBFC"],[0.036789297658863,"#F9FAFC"],[0.0401337792642142,"#F8FAFC"],[0.0434782608695654,"#F7F9FC"],[0.0468227424749166,"#F7F9FB"],[0.0501672240802677,"#F6F8FB"],[0.0535117056856189,"#F6F8FB"],[0.0568561872909701,"#F5F7FB"],[0.0602006688963213,"#F4F7FA"],[0.0635451505016725,"#F4F7FA"],[0.0668896321070232,"#F3F6FA"],[0.0702341137123744,"#F3F6FA"],[0.0735785953177256,"#F2F5F9"],[0.0769230769230767,"#F2F5F9"],[0.0802675585284279,"#F1F4F9"],[0.0836120401337791,"#F0F4F9"],[0.0869565217391303,"#F0F4F8"],[0.0903010033444815,"#EFF3F8"],[0.0936454849498327,"#EFF3F8"],[0.0969899665551838,"#EEF2F8"],[0.100334448160535,"#EDF2F7"],[0.103678929765886,"#EDF1F7"],[0.107023411371237,"#ECF1F7"],[0.110367892976589,"#ECF0F7"],[0.11371237458194,"#EBF0F6"],[0.117056856187291,"#EAF0F6"],[0.120401337792642,"#EAEFF6"],[0.123745819397993,"#E9EFF6"],[0.127090301003344,"#E9EEF5"],[0.130434782608696,"#E8EEF5"],[0.133779264214047,"#E8EDF5"],[0.137123745819398,"#E7EDF5"],[0.140468227424749,"#E6ECF4"],[0.1438127090301,"#E6ECF4"],[0.147157190635452,"#E5ECF4"],[0.150501672240803,"#E5EBF4"],[0.153846153846154,"#E4EBF3"],[0.157190635451505,"#E3EAF3"],[0.160535117056856,"#E3EAF3"],[0.163879598662207,"#E2E9F3"],[0.167224080267559,"#E2E9F2"],[0.17056856187291,"#E1E9F2"],[0.173913043478261,"#E1E8F2"],[0.177257525083612,"#E0E8F2"],[0.180602006688963,"#DFE7F1"],[0.183946488294315,"#DFE7F1"],[0.187290969899665,"#DEE6F1"],[0.190635451505016,"#DEE6F1"],[0.193979933110368,"#DDE5F0"],[0.197324414715719,"#DCE5F0"],[0.20066889632107,"#DCE5F0"],[0.204013377926421,"#DBE4F0"],[0.207357859531772,"#DBE4EF"],[0.210702341137124,"#DAE3EF"],[0.214046822742475,"#D9E3EF"],[0.217391304347826,"#D9E2EF"],[0.220735785953177,"#D8E2EE"],[0.224080267558528,"#D8E2EE"],[0.22742474916388,"#D7E1EE"],[0.230769230769231,"#D7E1EE"],[0.234113712374582,"#D6E0ED"],[0.237458193979933,"#D5E0ED"],[0.240802675585284,"#D5DFED"],[0.244147157190635,"#D4DFED"],[0.247491638795987,"#D4DFEC"],[0.250836120401338,"#D3DEEC"],[0.254180602006689,"#D2DEEC"],[0.25752508361204,"#D2DDEC"],[0.260869565217391,"#D1DDEB"],[0.264214046822743,"#D1DCEB"],[0.267558528428094,"#D0DCEB"],[0.270903010033445,"#D0DCEB"],[0.274247491638796,"#CFDBEA"],[0.277591973244147,"#CEDBEA"],[0.280936454849498,"#CEDAEA"],[0.28428093645485,"#CDDAEA"],[0.287625418060201,"#CDD9E9"],[0.290969899665552,"#CCD9E9"],[0.294314381270903,"#CBD9E9"],[0.297658862876254,"#CBD8E9"],[0.301003344481606,"#CAD8E8"],[0.304347826086957,"#CAD7E8"],[0.307692307692308,"#C9D7E8"],[0.311036789297659,"#C8D6E8"],[0.31438127090301,"#C8D6E7"],[0.317725752508361,"#C7D6E7"],[0.321070234113713,"#C7D5E7"],[0.324414715719064,"#C6D5E7"],[0.327759197324415,"#C6D4E6"],[0.331103678929766,"#C5D4E6"],[0.334448160535117,"#C4D3E6"],[0.337792642140468,"#C4D3E6"],[0.341137123745819,"#C3D3E5"],[0.34448160535117,"#C3D2E5"],[0.347826086956522,"#C2D2E5"],[0.351170568561873,"#C1D1E5"],[0.354515050167224,"#C1D1E4"],[0.357859531772575,"#C0D0E4"],[0.361204013377926,"#C0D0E4"],[0.364548494983278,"#BFD0E4"],[0.367892976588629,"#BFCFE3"],[0.37123745819398,"#BECFE3"],[0.374581939799331,"#BDCEE3"],[0.377926421404682,"#BDCEE3"],[0.381270903010033,"#BCCDE2"],[0.384615384615385,"#BCCDE2"],[0.387959866220736,"#BBCDE2"],[0.391304347826087,"#BACCE2"],[0.394648829431438,"#BACCE1"],[0.397993311036789,"#B9CBE1"],[0.401337792642141,"#B9CBE1"],[0.404682274247492,"#B8CAE0"],[0.408026755852843,"#B7CAE0"],[0.411371237458194,"#B7CAE0"],[0.414715719063545,"#B6C9E0"],[0.418060200668896,"#B6C9DF"],[0.421404682274248,"#B5C8DF"],[0.424749163879599,"#B5C8DF"],[0.42809364548495,"#B4C7DF"],[0.431438127090301,"#B3C7DE"],[0.434782608695652,"#B3C7DE"],[0.438127090301003,"#B2C6DE"],[0.441471571906354,"#B2C6DE"],[0.444816053511706,"#B1C5DD"],[0.448160535117057,"#B0C5DD"],[0.451505016722408,"#B0C5DD"],[0.454849498327759,"#AFC4DD"],[0.45819397993311,"#AFC4DC"],[0.461538461538461,"#AEC3DC"],[0.464882943143813,"#ADC3DC"],[0.468227424749164,"#ADC2DC"],[0.471571906354515,"#ACC2DB"],[0.474916387959866,"#ACC2DB"],[0.478260869565217,"#ABC1DB"],[0.481605351170569,"#AAC1DB"],[0.48494983277592,"#AAC0DA"],[0.488294314381271,"#A9C0DA"],[0.491638795986622,"#A9BFDA"],[0.494983277591973,"#A8BFDA"],[0.498327759197324,"#A7BFD9"],[0.501672240802676,"#A7BED9"],[0.505016722408027,"#A6BED9"],[0.508361204013378,"#A6BDD9"],[0.511705685618729,"#A5BDD8"],[0.51505016722408,"#A5BDD8"],[0.518394648829432,"#A4BCD8"],[0.521739130434783,"#A3BCD8"],[0.525083612040134,"#A3BBD7"],[0.528428093645485,"#A2BBD7"],[0.531772575250836,"#A2BAD7"],[0.535117056856187,"#A1BAD7"],[0.538461538461539,"#A0BAD6"],[0.54180602006689,"#A0B9D6"],[0.545150501672241,"#9FB9D6"],[0.548494983277592,"#9FB8D6"],[0.551839464882943,"#9EB8D5"],[0.555183946488294,"#9DB8D5"],[0.558528428093646,"#9DB7D5"],[0.561872909698997,"#9CB7D5"],[0.565217391304348,"#9CB6D4"],[0.568561872909699,"#9BB6D4"],[0.57190635451505,"#9AB5D4"],[0.575250836120402,"#9AB5D4"],[0.578595317725753,"#99B5D3"],[0.581939799331104,"#99B4D3"],[0.585284280936455,"#98B4D3"],[0.588628762541806,"#97B3D3"],[0.591973244147157,"#97B3D2"],[0.595317725752508,"#96B3D2"],[0.598662207357859,"#96B2D2"],[0.602006688963211,"#95B2D2"],[0.605351170568562,"#94B1D1"],[0.608695652173913,"#94B1D1"],[0.612040133779264,"#93B0D1"],[0.615384615384615,"#93B0D1"],[0.618729096989966,"#92B0D0"],[0.622073578595318,"#91AFD0"],[0.625418060200669,"#91AFD0"],[0.62876254180602,"#90AED0"],[0.632107023411371,"#90AECF"],[0.635451505016722,"#8FAECF"],[0.638795986622074,"#8EADCF"],[0.642140468227425,"#8EADCF"],[0.645484949832776,"#8DACCE"],[0.648829431438127,"#8CACCE"],[0.652173913043478,"#8CACCE"],[0.65551839464883,"#8BABCE"],[0.658862876254181,"#8BABCD"],[0.662207357859532,"#8AAACD"],[0.665551839464883,"#89AACD"],[0.668896321070234,"#89A9CD"],[0.672240802675586,"#88A9CC"],[0.675585284280937,"#88A9CC"],[0.678929765886288,"#87A8CC"],[0.682274247491639,"#86A8CC"],[0.68561872909699,"#86A7CB"],[0.688963210702341,"#85A7CB"],[0.692307692307692,"#84A7CB"],[0.695652173913043,"#84A6CB"],[0.698996655518394,"#83A6CA"],[0.702341137123746,"#83A5CA"],[0.705685618729097,"#82A5CA"],[0.709030100334448,"#81A5CA"],[0.712374581939799,"#81A4C9"],[0.71571906354515,"#80A4C9"],[0.719063545150502,"#80A3C9"],[0.722408026755853,"#7FA3C9"],[0.725752508361204,"#7EA3C8"],[0.729096989966555,"#7EA2C8"],[0.732441471571906,"#7DA2C8"],[0.735785953177257,"#7CA1C8"],[0.739130434782609,"#7CA1C7"],[0.74247491638796,"#7BA1C7"],[0.745819397993311,"#7BA0C7"],[0.749163879598662,"#7AA0C7"],[0.752508361204013,"#799FC6"],[0.755852842809365,"#799FC6"],[0.759197324414716,"#789FC6"],[0.762541806020067,"#779EC6"],[0.765886287625418,"#779EC5"],[0.769230769230769,"#769DC5"],[0.77257525083612,"#759DC5"],[0.775919732441472,"#759CC5"],[0.779264214046823,"#749CC4"],[0.782608695652174,"#749CC4"],[0.785953177257525,"#739BC4"],[0.789297658862876,"#729BC4"],[0.792642140468228,"#729AC3"],[0.795986622073579,"#719AC3"],[0.79933110367893,"#709AC3"],[0.802675585284281,"#7099C3"],[0.806020066889632,"#6F99C2"],[0.809364548494984,"#6E98C2"],[0.812709030100335,"#6E98C2"],[0.816053511705686,"#6D98C2"],[0.819397993311037,"#6C97C1"],[0.822742474916388,"#6C97C1"],[0.826086956521739,"#6B96C1"],[0.829431438127091,"#6A96C1"],[0.832775919732442,"#6A96C0"],[0.836120401337793,"#6995C0"],[0.839464882943144,"#6895C0"],[0.842809364548495,"#6894C0"],[0.846153846153846,"#6794BF"],[0.849498327759197,"#6794BF"],[0.852842809364548,"#6693BF"],[0.8561872909699,"#6593BF"],[0.859531772575251,"#6492BE"],[0.862876254180602,"#6492BE"],[0.866220735785953,"#6392BE"],[0.869565217391304,"#6291BE"],[0.872909698996655,"#6291BD"],[0.876254180602007,"#6191BD"],[0.879598662207358,"#6090BD"],[0.882943143812709,"#6090BD"],[0.88628762541806,"#5F8FBC"],[0.889632107023411,"#5E8FBC"],[0.892976588628763,"#5E8FBC"],[0.896321070234114,"#5D8EBC"],[0.899665551839465,"#5C8EBB"],[0.903010033444816,"#5C8DBB"],[0.906354515050167,"#5B8DBB"],[0.909698996655519,"#5A8DBB"],[0.91304347826087,"#598CBA"],[0.916387959866221,"#598CBA"],[0.919732441471572,"#588BBA"],[0.923076923076923,"#578BBA"],[0.926421404682274,"#578BB9"],[0.929765886287626,"#568AB9"],[0.933110367892977,"#558AB9"],[0.936454849498327,"#5489B9"],[0.939799331103679,"#5489B8"],[0.94314381270903,"#5389B8"],[0.946488294314381,"#5288B8"],[0.949832775919732,"#5288B8"],[0.953177257525083,"#5187B7"],[0.956521739130435,"#5087B7"],[0.959866220735786,"#4F87B7"],[0.963210702341137,"#4F86B7"],[0.966555183946488,"#4E86B6"],[0.969899665551839,"#4D85B6"],[0.973244147157191,"#4C85B6"],[0.976588628762542,"#4C85B6"],[0.979933110367893,"#4B84B5"],[0.983277591973244,"#4A84B5"],[0.986622073578595,"#4984B5"],[0.989966555183946,"#4883B5"],[0.993311036789298,"#4883B4"],[0.996655518394649,"#4782B4"],[1,"#4682B4"]],"colorbar":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"thickness":23.04,"title":"Correlation","titlefont":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"tickmode":"array","ticktext":["0.80","0.85","0.90","0.95","1.00"],"tickvals":[0.146393142919157,0.359794857189367,0.573196571459578,0.786598285729789,1],"tickfont":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"ticklen":2,"len":0.5}},"xaxis":"x","yaxis":"y","frame":null}],"layout":{"margin":{"t":26.2283105022831,"r":7.30593607305936,"b":25.5707762557078,"l":75.2511415525114},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[0.4,5.6],"tickmode":"array","ticktext":["value","value_lag1","value_lag3","value_lag6","value_lag12"],"tickvals":[1,2,3,4,5],"categoryorder":"array","categoryarray":["value","value_lag1","value_lag3","value_lag6","value_lag12"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[0.4,5.6],"tickmode":"array","ticktext":["value","value_lag1","value_lag3","value_lag6","value_lag12"],"tickvals":[1,2,3,4,5],"categoryorder":"array","categoryarray":["value","value_lag1","value_lag3","value_lag6","value_lag12"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"d5436d71e53":{"x":{},"y":{},"fill":{},"type":"heatmap"}},"cur_data":"d5436d71e53","visdat":{"d5436d71e53":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>A plotly version of the correlation heatmap.</p>
<p><em>Voila!</em></p>


</section>
</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrts</category>
  <category>weeklytip</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-11-11/index.html</guid>
  <pubDate>Fri, 11 Nov 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-11-11/healthyrts_logo.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>Reading Multiple Files with {purrr}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-10/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>There may be times when you have multiple structured files in the same folder, maybe they are <code>.csv</code> files. For this short tip, we will say that they are.</p>
<p>I will show the short script and then discuss it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># Library Load ----</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(purrr)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;"># Set file path ----</span></span>
<span id="cb1-6">folder    <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"FileFolder"</span></span>
<span id="cb1-7">path      <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"C:/Some/Root/Path/"</span></span>
<span id="cb1-8">full_path <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste0</span>(path,folder,<span class="st" style="color: #20794D;">"/"</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;"># File List ----</span></span>
<span id="cb1-11">file_list <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dir</span>(full_path</span>
<span id="cb1-12">                 , <span class="at" style="color: #657422;">pattern =</span> <span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">.csv$"</span></span>
<span id="cb1-13">                 , <span class="at" style="color: #657422;">full.names =</span> T)</span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;"># Read Files ----</span></span>
<span id="cb1-16">files <span class="ot" style="color: #003B4F;">&lt;-</span> file_list <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;">map</span>(read.csv) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-18">  <span class="fu" style="color: #4758AB;">map</span>(as_tibble)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;"># Clean File Names ----</span></span>
<span id="cb1-21">file_names <span class="ot" style="color: #003B4F;">&lt;-</span> file_list <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-22">  <span class="fu" style="color: #4758AB;">str_remove</span>(full_path) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;">str_replace</span>(</span>
<span id="cb1-24">    <span class="at" style="color: #657422;">pattern =</span> <span class="st" style="color: #20794D;">"_OldStuff.csv"</span>, </span>
<span id="cb1-25">    <span class="at" style="color: #657422;">replacement =</span> <span class="st" style="color: #20794D;">"_NewStuff.csv"</span></span>
<span id="cb1-26">  )</span>
<span id="cb1-27"></span>
<span id="cb1-28"><span class="fu" style="color: #4758AB;">names</span>(files) <span class="ot" style="color: #003B4F;">&lt;-</span> file_names</span></code></pre></div>
</div>
<p>We load in <code>{dplyr}</code> for the pipe and the <code>as_tibble</code> function. After this we set out to create the file path. I have chosen to do this in two separate pieces as I have had experience with needing to go through different folders in the same root directory. While this could further be scripted I leave it as is.</p>
<p><code>folder</code> is the folder that has the files of interest, in this case the <code>.csv</code> files. We then get the root path to that folder but not including it, this is defined as <code>path</code> in the above. After we have both <code>folder</code> and <code>path</code> we can create the <code>full_path</code> by using <code>paste0</code></p>
<p>Now after this we use the base <code>R</code> function of <code>dir</code> to list out all of the files that fit the specific format of <code>.csv</code> with a <code>regex</code> pattern. I always want the name of the file as it allows me to go back to the file later and lets me name the files in the upcoming list later on.</p>
<p>Since these are <code>.csv</code> files I use <code>purrr::map</code> and then <code>read.csv</code> to read in all of the <code>.csv</code> files in the list that was created, we then used <code>map</code> again and this time used <code>as_tibble</code> to make sure that each file is a <code>tibble</code> and not something else like <code>data.frame</code></p>
<p>Since I provided the argument of <code>T</code> to <code>dir, full.names</code> I can then get a character vector of the names of the files which then is applied to the file list.</p>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>purrr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-10/index.html</guid>
  <pubDate>Thu, 10 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Mapping K-Means with healthyR.ai</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-09/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>K-Means is a <a href="https://en.wikipedia.org/wiki/K-means_clustering">clustering algorithm</a> that can be used to find potential clusters in your data.</p>
<p>The algorithm does require that you look at different values of <code>K</code> in order to assess which is the optimal value.</p>
<p>In the <code>R</code> package <code>{healthyR.ai}</code> there is a utility to do this.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_kmeans_mapped_tbl</span>(.data, <span class="at" style="color: #657422;">.centers =</span> <span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">kmeans_mapped_tbl</span>(.data, <span class="at" style="color: #657422;">.centers =</span> <span class="dv" style="color: #AD0000;">15</span>)</span></code></pre></div>
</div>
<p>You will notice that there are two, they are synonyms to each other as this functionality is moving out of the <code>{healthyR}</code> package.</p>
<section id="parameters" class="level2">
<h2 class="anchored" data-anchor-id="parameters">Parameters</h2>
<p>The parameters take the following arguments:</p>
<ul>
<li><code>.data</code> - This is the data that should be an output of the <code>hai_user_item_tbl()</code> or it’s synonym, or should at least be in the <code>user item</code> matrix format.</li>
<li><code>.centers</code> - The maximum amount of centers you want to map to the <code>k-means</code> function. The default is 15.</li>
</ul>
</section>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s run an example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.data)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-4"></span>
<span id="cb2-5">data_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> healthyR_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;">filter</span>(ip_op_flag <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"I"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">filter</span>(payer_grouping <span class="sc" style="color: #5E5E5E;">!=</span> <span class="st" style="color: #20794D;">"Medicare B"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;">filter</span>(payer_grouping <span class="sc" style="color: #5E5E5E;">!=</span> <span class="st" style="color: #20794D;">"?"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;">select</span>(service_line, payer_grouping) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">record =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;">as_tibble</span>()</span>
<span id="cb2-12"></span>
<span id="cb2-13">ui_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_kmeans_user_item_tbl</span>(</span>
<span id="cb2-14">  <span class="at" style="color: #657422;">.data =</span> data_tbl,</span>
<span id="cb2-15">  <span class="at" style="color: #657422;">.row_input =</span> service_line,</span>
<span id="cb2-16">  <span class="at" style="color: #657422;">.col_input =</span> payer_grouping,</span>
<span id="cb2-17">  <span class="at" style="color: #657422;">.record_input =</span> record</span>
<span id="cb2-18">)</span>
<span id="cb2-19"></span>
<span id="cb2-20">kmeans_mapped_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_kmeans_mapped_tbl</span>(ui_tbl)</span></code></pre></div>
</div>
<p>Let’s take a look at our data, user item matrix and our kmeans mapped tibble.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">data_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 116,823 × 3
   service_line  payer_grouping record
   &lt;chr&gt;         &lt;chr&gt;           &lt;dbl&gt;
 1 Medical       Blue Cross          1
 2 Schizophrenia Medicare A          1
 3 Syncope       Medicare A          1
 4 Pneumonia     Medicare A          1
 5 Chest Pain    Blue Cross          1
 6 Chest Pain    Blue Cross          1
 7 Surgical      Commercial          1
 8 Medical       Medicare A          1
 9 Alcohol Abuse Medicare A          1
10 Syncope       Medicare A          1
# … with 116,813 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">ui_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 23 × 12
   service_line   Blue …¹ Comme…² Compe…³ Excha…⁴    HMO Medic…⁵ Medic…⁶ Medic…⁷
   &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;
 1 Alcohol Abuse   0.0941 0.0321  5.25e-4 0.0116  0.0788 0.158    0.367   0.173 
 2 Bariatric Sur…  0.317  0.0583  0       0.0518  0.168  0.00324  0.343   0.0485
 3 Carotid Endar…  0.0845 0.0282  0       0       0.0141 0        0.0282  0.648 
 4 Cellulitis      0.110  0.0339  1.18e-2 0.00847 0.0805 0.0869   0.192   0.355 
 5 Chest Pain      0.144  0.0391  2.90e-3 0.00543 0.112  0.0522   0.159   0.324 
 6 CHF             0.0295 0.00958 5.18e-4 0.00414 0.0205 0.0197   0.0596  0.657 
 7 COPD            0.0493 0.0228  2.28e-4 0.00548 0.0342 0.0461   0.172   0.520 
 8 CVA             0.0647 0.0246  1.07e-3 0.0107  0.0524 0.0289   0.0764  0.555 
 9 GI Hemorrhage   0.0542 0.0175  1.25e-3 0.00834 0.0480 0.0350   0.0855  0.588 
10 Joint Replace…  0.139  0.0179  3.36e-2 0.00673 0.0516 0        0.0874  0.5   
# … with 13 more rows, 3 more variables: `Medicare HMO` &lt;dbl&gt;,
#   `No Fault` &lt;dbl&gt;, `Self Pay` &lt;dbl&gt;, and abbreviated variable names
#   ¹​`Blue Cross`, ²​Commercial, ³​Compensation, ⁴​`Exchange Plans`, ⁵​Medicaid,
#   ⁶​`Medicaid HMO`, ⁷​`Medicare A`</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">kmeans_mapped_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 15 × 3
   centers k_means  glance          
     &lt;int&gt; &lt;list&gt;   &lt;list&gt;          
 1       1 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
 2       2 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
 3       3 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
 4       4 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
 5       5 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
 6       6 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
 7       7 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
 8       8 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
 9       9 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
10      10 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
11      11 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
12      12 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
13      13 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
14      14 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;
15      15 &lt;kmeans&gt; &lt;tibble [1 × 4]&gt;</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">kmeans_mapped_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  tidyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">unnest</span>(glance)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 15 × 6
   centers k_means  totss tot.withinss betweenss  iter
     &lt;int&gt; &lt;list&gt;   &lt;dbl&gt;        &lt;dbl&gt;     &lt;dbl&gt; &lt;int&gt;
 1       1 &lt;kmeans&gt;  1.41       1.41    1.33e-15     1
 2       2 &lt;kmeans&gt;  1.41       0.592   8.17e- 1     1
 3       3 &lt;kmeans&gt;  1.41       0.372   1.04e+ 0     2
 4       4 &lt;kmeans&gt;  1.41       0.276   1.13e+ 0     2
 5       5 &lt;kmeans&gt;  1.41       0.202   1.21e+ 0     2
 6       6 &lt;kmeans&gt;  1.41       0.159   1.25e+ 0     3
 7       7 &lt;kmeans&gt;  1.41       0.124   1.28e+ 0     3
 8       8 &lt;kmeans&gt;  1.41       0.0884  1.32e+ 0     3
 9       9 &lt;kmeans&gt;  1.41       0.0745  1.33e+ 0     3
10      10 &lt;kmeans&gt;  1.41       0.0576  1.35e+ 0     2
11      11 &lt;kmeans&gt;  1.41       0.0460  1.36e+ 0     3
12      12 &lt;kmeans&gt;  1.41       0.0363  1.37e+ 0     2
13      13 &lt;kmeans&gt;  1.41       0.0272  1.38e+ 0     2
14      14 &lt;kmeans&gt;  1.41       0.0202  1.39e+ 0     3
15      15 &lt;kmeans&gt;  1.41       0.0161  1.39e+ 0     3</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <category>kmeans</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-09/index.html</guid>
  <pubDate>Wed, 09 Nov 2022 05:00:00 GMT</pubDate>
  <media:content url="https://www.spsanderson.com/steveondata/posts/rtip-2022-11-09/healthyrai_logo.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>Hyperbolic Transform with healthyR.ai</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-08/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In data modeling there can be instanes where you will want some sort of hyperbolic transformation of your data. In <code>{healthyR.ai}</code> this is easy with the use of the <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_hyperbolic_vec.html">function <code>hai_hyperbolic_vec()</code></a> along with it’s corresponding <code>augment</code> and <code>step</code> functions.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>The function takes in a numeric vector as it’s argument and will transform the data with one of the following:</p>
<ul>
<li><code>sin</code></li>
<li><code>cos</code></li>
<li><code>tan</code></li>
<li><code>sincos</code> This will do: <code>value = sin(x) * cos(x)</code></li>
</ul>
<p>The full function call is:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_hyperbolic_vec</span>(.x, <span class="at" style="color: #657422;">.scale_type =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"sin"</span>, <span class="st" style="color: #20794D;">"cos"</span>, <span class="st" style="color: #20794D;">"tan"</span>, <span class="st" style="color: #20794D;">"sincos"</span>))</span></code></pre></div>
</div>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">library</span>(tidyr)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb2-5"></span>
<span id="cb2-6">len_out <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">25</span></span>
<span id="cb2-7">by_unit <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"month"</span></span>
<span id="cb2-8">start_date <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2021-01-01"</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10">data_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb2-11">  <span class="at" style="color: #657422;">date_col =</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(</span>
<span id="cb2-12">    <span class="at" style="color: #657422;">from =</span> start_date, </span>
<span id="cb2-13">    <span class="at" style="color: #657422;">length.out =</span> len_out, </span>
<span id="cb2-14">    <span class="at" style="color: #657422;">by =</span> by_unit</span>
<span id="cb2-15">    ),</span>
<span id="cb2-16">  <span class="at" style="color: #657422;">b =</span> <span class="fu" style="color: #4758AB;">runif</span>(len_out),</span>
<span id="cb2-17">  <span class="at" style="color: #657422;">fv_sin =</span> <span class="fu" style="color: #4758AB;">hai_hyperbolic_vec</span>(b, <span class="at" style="color: #657422;">.scale_type =</span> <span class="st" style="color: #20794D;">"sin"</span>),</span>
<span id="cb2-18">  <span class="at" style="color: #657422;">fv_cos =</span> <span class="fu" style="color: #4758AB;">hai_hyperbolic_vec</span>(b, <span class="at" style="color: #657422;">.scale_type =</span> <span class="st" style="color: #20794D;">"cos"</span>),</span>
<span id="cb2-19">  <span class="at" style="color: #657422;">fv_sc  =</span> <span class="fu" style="color: #4758AB;">hai_hyperbolic_vec</span>(b, <span class="at" style="color: #657422;">.scale_type =</span> <span class="st" style="color: #20794D;">"sincos"</span>)</span>
<span id="cb2-20">)</span>
<span id="cb2-21"></span>
<span id="cb2-22">data_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 25 × 5
   date_col        b fv_sin fv_cos  fv_sc
   &lt;date&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;
 1 2021-01-01 0.961  0.820   0.573 0.470 
 2 2021-02-01 0.418  0.406   0.914 0.371 
 3 2021-03-01 0.0729 0.0728  0.997 0.0726
 4 2021-04-01 0.426  0.413   0.911 0.376 
 5 2021-05-01 0.851  0.752   0.659 0.496 
 6 2021-06-01 0.824  0.734   0.679 0.499 
 7 2021-07-01 0.659  0.612   0.791 0.484 
 8 2021-08-01 0.683  0.631   0.776 0.490 
 9 2021-09-01 0.173  0.172   0.985 0.169 
10 2021-10-01 0.345  0.338   0.941 0.318 
# … with 15 more rows</code></pre>
</div>
</div>
</section>
<section id="visual" class="level1">
<h1>Visual</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">data_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> <span class="sc" style="color: #5E5E5E;">-</span>date_col) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> date_col, <span class="at" style="color: #657422;">y =</span> value, <span class="at" style="color: #657422;">color =</span> name)) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">geom_line</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span> name, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">""</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2022-11-08/index_files/figure-html/viz-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-08/index.html</guid>
  <pubDate>Tue, 08 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Discrete Fourier Vec with healthyR.ai</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-07/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Sometimes in modeling you may want to get a discrete <code>1/0</code> vector of a <code>fourier</code> transform of some input vector. With <code>{healthyR.ai}</code> we can do this easily.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full function call:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_fourier_discrete_vec</span>(</span>
<span id="cb1-2">  .x,</span>
<span id="cb1-3">  .period,</span>
<span id="cb1-4">  .order,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.scale_type =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"sin"</span>, <span class="st" style="color: #20794D;">"cos"</span>, <span class="st" style="color: #20794D;">"sincos"</span>)</span>
<span id="cb1-6">)</span></code></pre></div>
</div>
<p>Here are the parameters to the function and what they expect:</p>
<ul>
<li><code>.x</code> - A numeric vector</li>
<li><code>.period</code> - The number of observations that complete a cycle</li>
<li><code>.order</code> - The fourier term order</li>
<li><code>.scale_type</code> - A character of one of the following: <code>sin</code>,<code>cos</code>,<code>sincos</code></li>
</ul>
<p>The internal caluclation is straightforward:</p>
<ul>
<li><code>sin = sin(2 * pi * h * x), where h = .order/.period</code></li>
<li><code>cos = cos(2 * pi * h * x), where h = .order/.period</code></li>
<li><code>sincos = sin(2 * pi * h * x) * cos(2 * pi * h * x) where h = .order/.period</code></li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s work throught a quick and simple example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;">library</span>(tidyr)</span>
<span id="cb2-5"></span>
<span id="cb2-6">len_out <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">24</span></span>
<span id="cb2-7">by_unit <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"month"</span></span>
<span id="cb2-8">start_date <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2021-01-01"</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10">data_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb2-11">  <span class="at" style="color: #657422;">date_col =</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(</span>
<span id="cb2-12">    <span class="at" style="color: #657422;">from =</span> start_date, </span>
<span id="cb2-13">    <span class="at" style="color: #657422;">length.out =</span> len_out, </span>
<span id="cb2-14">    <span class="at" style="color: #657422;">by =</span> by_unit</span>
<span id="cb2-15">  ),</span>
<span id="cb2-16">  <span class="at" style="color: #657422;">a =</span> <span class="fu" style="color: #4758AB;">rnorm</span>(len_out, <span class="at" style="color: #657422;">sd =</span> <span class="dv" style="color: #AD0000;">2</span>),</span>
<span id="cb2-17">  <span class="at" style="color: #657422;">fv_sin =</span> <span class="fu" style="color: #4758AB;">hai_fourier_discrete_vec</span>(a, <span class="dv" style="color: #AD0000;">12</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="st" style="color: #20794D;">"sin"</span>),</span>
<span id="cb2-18">  <span class="at" style="color: #657422;">fv_cos =</span> <span class="fu" style="color: #4758AB;">hai_fourier_discrete_vec</span>(a, <span class="dv" style="color: #AD0000;">12</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="st" style="color: #20794D;">"cos"</span>),</span>
<span id="cb2-19">  <span class="at" style="color: #657422;">fv_sc  =</span> <span class="fu" style="color: #4758AB;">hai_fourier_discrete_vec</span>(a, <span class="dv" style="color: #AD0000;">12</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="st" style="color: #20794D;">"sincos"</span>)</span>
<span id="cb2-20">)</span>
<span id="cb2-21"></span>
<span id="cb2-22">data_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 24 × 5
   date_col         a fv_sin fv_cos fv_sc
   &lt;date&gt;       &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;
 1 2021-01-01 -0.486       0      1     0
 2 2021-02-01 -0.708       0      1     0
 3 2021-03-01 -0.119       0      1     0
 4 2021-04-01  0.0405      1      1     1
 5 2021-05-01  1.19        1      1     1
 6 2021-06-01  1.88        1      1     1
 7 2021-07-01 -1.32        0      1     0
 8 2021-08-01 -0.0214      0      1     0
 9 2021-09-01  2.80        1      1     1
10 2021-10-01  1.67        1      1     1
# … with 14 more rows</code></pre>
</div>
</div>
</section>
<section id="visual" class="level1">
<h1>Visual</h1>
<p>Let’s visualize.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">data_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> <span class="sc" style="color: #5E5E5E;">-</span>date_col) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> date_col, <span class="at" style="color: #657422;">y =</span> value, <span class="at" style="color: #657422;">color =</span> name)) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">geom_line</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span> name, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">""</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2022-11-07/index_files/figure-html/plt-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-11-07/index.html</guid>
  <pubDate>Mon, 07 Nov 2022 05:00:00 GMT</pubDate>
</item>
</channel>
</rss>
