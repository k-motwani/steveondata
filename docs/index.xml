<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Steve&#39;s Data Tips and Tricks</title>
<link>https://www.spsanderson.com/steveondata/index.html</link>
<atom:link href="https://www.spsanderson.com/steveondata/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Fri, 27 Jan 2023 05:00:00 GMT</lastBuildDate>
<item>
  <title>Service Line Grouping with {healthyR}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyr-2023-01-27/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Healthcare data analysis can be a complex and time-consuming task, but it doesn’t have to be. Meet <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a>, your new go-to R package for all things healthcare data analysis. With <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a>, you can easily and efficiently analyze your healthcare data, and make sense of the information it contains.</p>
<p>One of the key features of <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> is the <a href="https://www.spsanderson.com/healthyR/reference/service_line_augment.html">service_line_augment()</a> function. This function is designed to help you quickly and easily append a vector to a <code>data.frame</code> or <code>tibble</code> that is passed to the <code>.data</code> parameter. In order to use this function, you will need a <code>data.frame</code> or <code>tibble</code> with a <strong>principal diagnosis</strong> column, a <strong>principal procedure</strong> column, and a column for the <strong>DRG number</strong>. These are needed so that the function can join the <em>dx_cc_mapping</em> and <em>px_cc_mapping</em> columns to provide the <strong>service line</strong>.</p>
<p>The <a href="https://www.spsanderson.com/healthyR/reference/service_line_augment.html">service_line_augment()</a> function is especially useful for analyzing healthcare data that is coded using ICD Version 10. This version of the ICD coding system is widely used in the healthcare industry, and the <a href="https://www.spsanderson.com/healthyR/reference/service_line_augment.html">service_line_augment()</a> function is specifically designed to work with it. With this function, you can quickly and easily append a vector to your data.frame or tibble that provides the service line for each visit.</p>
<p>In addition to the <a href="https://www.spsanderson.com/healthyR/reference/service_line_augment.html">service_line_augment()</a> function, <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> also includes a wide range of other useful tools and functions for healthcare data analysis. Whether you’re looking to analyze claims data, clinical data, or any other type of healthcare data, <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> has you covered.</p>
<p>So why wait? Download <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> today and start making sense of your healthcare data! With <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a>, you can easily and efficiently analyze your healthcare data, and make sense of the information it contains.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">service_line_augment</span>(.data, .dx_col, .px_col, .drg_col)</span></code></pre></div>
</div>
<p>Now let’s look at the arguments to the parameters.</p>
<ul>
<li><code>.data</code> - The data being passed that will be augmented by the function.</li>
<li><code>.dx_col</code> - The column containing the Principal Diagnosis for the discharge.</li>
<li><code>.px_col</code> - The column containing the Principal Coded Procedure for the discharge. It is possible that this could be blank.</li>
<li><code>.drg_col</code> - The DRG Number coded to the inpatient discharge.</li>
</ul>
<p>Now for some examples.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>First if you have not already, install <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"healthyR"</span>)</span></code></pre></div>
</div>
<p>Here we go.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR)</span>
<span id="cb3-2"></span>
<span id="cb3-3">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb3-4">  <span class="at" style="color: #657422;">dx_col =</span> <span class="st" style="color: #20794D;">"F10.10"</span>,</span>
<span id="cb3-5">  <span class="at" style="color: #657422;">px_col =</span> <span class="cn" style="color: #8f5902;">NA</span>,</span>
<span id="cb3-6">  <span class="at" style="color: #657422;">drg_col =</span> <span class="st" style="color: #20794D;">"896"</span></span>
<span id="cb3-7">)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;">service_line_augment</span>(</span>
<span id="cb3-10">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb3-11">  <span class="at" style="color: #657422;">.dx_col =</span> dx_col,</span>
<span id="cb3-12">  <span class="at" style="color: #657422;">.px_col =</span> px_col,</span>
<span id="cb3-13">  <span class="at" style="color: #657422;">.drg_col =</span> drg_col</span>
<span id="cb3-14">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 4
  dx_col px_col drg_col service_line 
  &lt;chr&gt;  &lt;lgl&gt;  &lt;chr&gt;   &lt;chr&gt;        
1 F10.10 NA     896     alcohol_abuse</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>weeklytip</category>
  <category>augment</category>
  <category>healthyr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyr-2023-01-27/index.html</guid>
  <pubDate>Fri, 27 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Transforming Your Data: A Guide to Popular Methods and How to Implement Them with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Transforming data refers to the process of changing the scale or distribution of a variable in order to make it more suitable for analysis. There are many different methods for transforming data, and each has its own specific use case.</p>
<ol type="1">
<li>Box-Cox: This is a method for transforming data that is positively skewed (i.e., has a long tail to the right) into a more normal distribution. It uses a power transformation to adjust the scale of the data.</li>
<li>Basis Spline: This is a type of non-parametric regression that uses splines (piecewise polynomials) to model the relationship between a dependent variable and one or more independent variables.</li>
<li>Log: This is a method for transforming data that is positively skewed (i.e., has a long tail to the right) into a more normal distribution. It uses the logarithm function to adjust the scale of the data.</li>
<li>Logit: This is a method for transforming binary data (i.e., data with only two possible values) into a continuous scale. It uses the logistic function to adjust the scale of the data.</li>
<li>Natural Spline: This is a type of non-parametric regression that uses splines (piecewise polynomials) to model the relationship between a dependent variable and one or more independent variables, where the splines are chosen to be as smooth as possible.</li>
<li>Rectified Linear Unit (ReLU): This is a type of activation function used in artificial neural networks. It is used to introduce non-linearity in the output of a neuron.</li>
<li>Square Root: This is a method for transforming data that is positively skewed (i.e., has a long tail to the right) into a more normal distribution. It uses the square root function to adjust the scale of the data.</li>
<li>Yeo-Johnson: This is a power transformation that works well for data that is positively or negatively skewed. It is a generalization of the Box-Cox transformation and handles zero and negative data.</li>
</ol>
<p>The R library <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a> provides a function called <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html"><code>hai_data_transform()</code></a> that allows users to easily apply any of these transforms to their data. The function takes in the data and the type of transformation as arguments, and returns the transformed data. This makes it easy for users to experiment with different transformations and see which one works best for their data.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">.recipe_object =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-3">  ...,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"log"</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.bc_limits =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.bc_num_unique =</span> <span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.bs_deg_free =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.bs_degree =</span> <span class="dv" style="color: #AD0000;">3</span>,</span>
<span id="cb1-9">  <span class="at" style="color: #657422;">.log_base =</span> <span class="fu" style="color: #4758AB;">exp</span>(<span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb1-10">  <span class="at" style="color: #657422;">.log_offset =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-11">  <span class="at" style="color: #657422;">.logit_offset =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-12">  <span class="at" style="color: #657422;">.ns_deg_free =</span> <span class="dv" style="color: #AD0000;">2</span>,</span>
<span id="cb1-13">  <span class="at" style="color: #657422;">.rel_shift =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-14">  <span class="at" style="color: #657422;">.rel_reverse =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb1-15">  <span class="at" style="color: #657422;">.rel_smooth =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb1-16">  <span class="at" style="color: #657422;">.yj_limits =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb1-17">  <span class="at" style="color: #657422;">.yj_num_unique =</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb1-18">)</span></code></pre></div>
</div>
<p>Now let’s go over the arguments to the parameters.</p>
<ul>
<li><code>.recipe_object</code> - The data that you want to process</li>
<li><code>...</code> - One or more selector functions to choose variables to be imputed. When used with imp_vars, these dots indicate which variables are used to predict the missing data in each variable. See selections() for more details</li>
<li><code>.type_of_scale</code> - This is a quoted argument and can be one of the following:
<ul>
<li>“boxcox”</li>
<li>“bs”</li>
<li>“log”</li>
<li>“logit”</li>
<li>“ns”</li>
<li>“relu”</li>
<li>“sqrt”</li>
<li>“yeojohnson</li>
</ul></li>
<li><code>.bc_limits</code> - A length 2 numeric vector defining the range to compute the transformation parameter lambda.</li>
<li><code>.bc_num_unique</code> - An integer to specify minimum required unique values to evaluate for a transformation</li>
<li><code>.bs_deg_free</code> - The degrees of freedom for the spline. As the degrees of freedom for a spline increase, more flexible and complex curves can be generated. When a single degree of freedom is used, the result is a rescaled version of the original data.</li>
<li><code>.bs_degree</code> - Degree of polynomial spline (integer).</li>
<li><code>.log_base</code> - A numeric value for the base.</li>
<li><code>.log_offset</code> - An optional value to add to the data prior to logging (to avoid log(0))</li>
<li><code>.logit_offset</code> - A numeric value to modify values of the columns that are either one or zero. They are modifed to be x - offset or offset respectively.</li>
<li><code>.ns_deg_free</code> - The degrees of freedom for the natural spline. As the degrees of freedom for a natural spline increase, more flexible and complex curves can be generated. When a single degree of freedom is used, the result is a rescaled version of the original data.</li>
<li><code>.rel_shift</code> - A numeric value dictating a translation to apply to the data.</li>
<li><code>.rel_reverse</code> - A logical to indicate if the left hinge should be used as opposed to the right hinge.</li>
<li><code>.rel_smooth</code> - A logical indicating if hte softplus function, a smooth approximation to the rectified linear transformation, should be used.</li>
<li><code>.yj_limits</code> - A length 2 numeric vector defining the range to compute the transformation parameter lambda.</li>
<li><code>.yj_num_unique</code> - An integer where data that have less possible values will not be evaluated for a transformation.</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s look over some examples. For an example data set we are going to pick on the <strong>mtcars</strong> data set as the histogram will prove to be skewed which makes it a good candidate to test these transformations on.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"healthyR.ai"</span>)</span></code></pre></div>
</div>
<p>Now that we have <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a> installed we can get to work. It does use the <code>{recipes}</code> package underneath so you will need to have that installed as well. Let’s look at the histogram of <strong>mtcars</strong> now.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">mpg_vec <span class="ot" style="color: #003B4F;">&lt;-</span> mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;">hist</span>(mpg_vec)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(mpg_vec))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-3-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>First up, Box-Cox</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">library</span>(recipes)</span>
<span id="cb5-3"></span>
<span id="cb5-4">ro <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;">~</span> wt, <span class="at" style="color: #657422;">data =</span> mtcars)</span>
<span id="cb5-5"></span>
<span id="cb5-6">boxcox_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb5-7">  <span class="at" style="color: #657422;">.recipe_object =</span> ro,</span>
<span id="cb5-8">  mpg,</span>
<span id="cb5-9">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"boxcox"</span></span>
<span id="cb5-10">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;">pull</span>(mpg)</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(boxcox_vec))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Basis Spline</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">bs_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb6-2">  <span class="at" style="color: #657422;">.recipe_object =</span> ro,</span>
<span id="cb6-3">  mpg,</span>
<span id="cb6-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"bs"</span></span>
<span id="cb6-5">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>()</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(bs_vec<span class="sc" style="color: #5E5E5E;">$</span>mpg_bs_1))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(bs_vec<span class="sc" style="color: #5E5E5E;">$</span>mpg_bs_2))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-5-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(bs_vec<span class="sc" style="color: #5E5E5E;">$</span>mpg_bs_3))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-5-3.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Log</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">log_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb9-2">  <span class="at" style="color: #657422;">.recipe_object =</span> ro,</span>
<span id="cb9-3">  mpg,</span>
<span id="cb9-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"log"</span></span>
<span id="cb9-5">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;">pull</span>(mpg)</span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(log_vec))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Yeo-Johnson</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">yj_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb10-2">  <span class="at" style="color: #657422;">.recipe_object =</span> ro,</span>
<span id="cb10-3">  mpg,</span>
<span id="cb10-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"yeojohnson"</span></span>
<span id="cb10-5">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;">pull</span>(mpg)</span>
<span id="cb10-8"></span>
<span id="cb10-9"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(yj_vec))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>transforms</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Simplifying List Filtering in R with purrr’s keep()</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-25/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The <a href="https://purrr.tidyverse.org/"><code>{purrr}</code></a> package in R is a powerful tool for working with lists and other data structures. One particularly useful function in the package is <a href="https://purrr.tidyverse.org/reference/keep.html"><code>keep()</code></a>, which allows you to filter a list by keeping only the elements that meet certain conditions.</p>
<p>The <code>keep()</code> function takes two arguments: the list to filter, and a function that returns a logical value indicating whether each element of the list should be kept. The function can be specified as an anonymous function or a named function, and it should take a single argument (the current element of the list).</p>
<p>For example, let’s say we have a list of numbers and we want to keep only the even numbers. We could use the keep() function with an anonymous function that checks the remainder of the current element divided by 2:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(purrr)</span>
<span id="cb1-2"></span>
<span id="cb1-3">numbers <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>)</span>
<span id="cb1-4">even_numbers <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">keep</span>(numbers, <span class="cf" style="color: #003B4F;">function</span>(x) x <span class="sc" style="color: #5E5E5E;">%%</span> <span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-5">even_numbers</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2 4 6</code></pre>
</div>
</div>
<p>We see that this keeps <strong>[1] 2 4 6</strong>.</p>
<p>The purrr package also provides a convenient shorthand for this operation, <code>.p</code>, which can be used inside the keep function to return the element.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">even_numbers <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">keep</span>(numbers, <span class="sc" style="color: #5E5E5E;">~</span> .x <span class="sc" style="color: #5E5E5E;">%%</span> <span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb3-2">even_numbers</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2 4 6</code></pre>
</div>
</div>
<p>You can also use the <code>keep()</code> function to filter a list of other types of objects, such as strings or lists. For example, you could use it to keep only the strings that are longer than a certain length:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">words <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"cat"</span>, <span class="st" style="color: #20794D;">"dog"</span>, <span class="st" style="color: #20794D;">"elephant"</span>, <span class="st" style="color: #20794D;">"bird"</span>)</span>
<span id="cb5-2">long_words <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">keep</span>(words, <span class="cf" style="color: #003B4F;">function</span>(x) <span class="fu" style="color: #4758AB;">nchar</span>(x) <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-3">long_words</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "elephant"</code></pre>
</div>
</div>
<p>We see that this keeps “elephant” &amp; “bird”.</p>
<p>In summary, the <code>{purrr}</code> package’s <code>keep()</code> function is a powerful tool for filtering lists in R, and the <code>.p</code> parameter can be used as a shorthand. It can be used to keep only the items in a list that meet a user-given condition, and it can be used with a variety of data types.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the <code>keep()</code> function and it’s parameters.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">keep</span>(.x, .p, ...)</span></code></pre></div>
</div>
<p>Here are the arguments to the parameters.</p>
<ul>
<li><code>.x</code> - A list or vector.</li>
<li><code>.p</code> - A predicate function (i.e.&nbsp;a function that returns either TRUE or FALSE) specified in one of the following ways:
<ul>
<li>A named function, e.g.&nbsp;is.character.</li>
<li>An anonymous function, e.g.&nbsp;<code>\(x) all(x &lt; 0)</code> or <code>function(x) all(x &lt; 0)</code>.</li>
<li>A formula, e.g.&nbsp;<code>~ all(.x &lt; 0)</code>. You must use <code>.x</code> to refer to the first argument). Only recommended if you require backward compatibility with older versions of R.</li>
</ul></li>
<li><code>...</code> - Additional arguments passed on to .p.</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>I recently came across wanting to filter a list that is given as an argument to a parameter. The function I am working for my upcoming <a href="https://www.spsanderson.com/tidyAML/"><code>{tidyAML}</code></a> package has a function called <a href="https://www.spsanderson.com/tidyAML/reference/create_workflow_set.html"><code>create_workflow_set()</code></a> that has a parameter <code>.recipe_list</code> which is set to <code>list()</code>. The user must only place recipes in this list or else I want it to fail. So I was able to write a quick check using <code>keep()</code> like so:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># Checks ----</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;"># only keep() recipes</span></span>
<span id="cb8-3">rec_list <span class="ot" style="color: #003B4F;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">keep</span>(rec_list, <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">inherits</span>(.x, <span class="st" style="color: #20794D;">"recipe"</span>))</span></code></pre></div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <category>purrr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-25/index.html</guid>
  <pubDate>Wed, 25 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Making Non Stationary Data Stationary</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In the most basic sense for time series, a series is stationary if the properties of the generating process (the process that generates the data) do not change over time, the process remains constant. This does not mean the data does not change, it simply means the process does not change. You can bake a vanilla cake or a chocolate cake but you still cook it in the oven.</p>
<p>A non-stationary time series is like a toy car that doesn’t run in a straight line. Sometimes it goes fast and sometimes it goes slow, so it’s hard to predict what it will do next. But, just like how you can fix a toy car by adjusting it, we can fix a non-stationary time series by making it <em>“stationary.”</em></p>
<p>One way we can do this is by taking the <em>difference</em> in the time series vector. This is like taking the toy car apart and looking at how each piece moves. By subtracting one piece from another, we can see if they are moving at the same speed or not. If they are not, we can adjust them so they are moving at the same speed. This makes it easier to predict what the toy car will do next because it’s moving at a steady pace.</p>
<p>Another way we can make a non-stationary time series stationary is by taking the second difference of the log of the data. This is like looking at the toy car from a different angle. By taking the log of the data, we can see how much each piece has changed over time. Then, by taking the second difference, we can see if the changes are happening at the same rate or not. If they are not, we can adjust them so they are happening at the same rate.</p>
<p>In simple terms, these methods help to stabilize the time series by making the data move at a consistent speed, which allows for better predictions.</p>
<p>In summary, a non-stationary time series is like a toy car that doesn’t run in a straight line. By taking the difference in the time series vector or taking the second difference of the log of the data, we can fix the toy car and make it run in a straight line. This is helpful for making accurate predictions.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>We are going to use the <a href="https://rdrr.io/cran/aTSA/man/adf.test.html"><code>adf.test()</code></a> function from the <a href="https://rdrr.io/cran/aTSA/"><code>{aTSA}</code></a> library. Here is the function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">adf.test</span>(x, <span class="at" style="color: #657422;">nlag =</span> <span class="cn" style="color: #8f5902;">NULL</span>, <span class="at" style="color: #657422;">output =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</div>
<p>Here are the arugments to the parameters.</p>
<ul>
<li><code>x</code>- a numeric vector or time series.</li>
<li><code>alternative</code> - the lag order with default to calculate the test statistic. See details for the default.</li>
<li><code>output</code> - a logical value indicating to print the test results in R console. The default is TRUE.</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>As an example, we are going to use the <code>R</code> built in data set <strong>AirPassengers</strong> as our timeseries. This data is both <em>cyclical</em> and <em>trending</em> so it is good for this purpose.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(aTSA)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">plot</span>(AirPassengers)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now that we know what it looks like, lets see if it is stationary right off the bat.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">adf.test</span>(AirPassengers)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag      ADF p.value
[1,]   0  0.04712   0.657
[2,]   1 -0.35240   0.542
[3,]   2 -0.00582   0.641
[4,]   3  0.26034   0.718
[5,]   4  0.82238   0.879
Type 2: with drift no trend 
     lag    ADF p.value
[1,]   0 -1.748   0.427
[2,]   1 -2.345   0.194
[3,]   2 -1.811   0.402
[4,]   3 -1.536   0.509
[5,]   4 -0.986   0.701
Type 3: with drift and trend 
     lag   ADF p.value
[1,]   0 -4.64    0.01
[2,]   1 -7.65    0.01
[3,]   2 -7.09    0.01
[4,]   3 -6.94    0.01
[5,]   4 -5.95    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
</div>
<p>So we can see that right off the bat that <strong>“Type 1”</strong> and <strong>“Type 2”</strong> fail as there is significant trend in this data as we can plainly see. Let’s see what happens when we take a simpmle <code>diff()</code> of the series.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">diff</span>(AirPassengers))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Looking like its still going to fail, but let’s run the test anyways.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">adf.test</span>(<span class="fu" style="color: #4758AB;">diff</span>(AirPassengers))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag   ADF p.value
[1,]   0 -8.58    0.01
[2,]   1 -8.68    0.01
[3,]   2 -8.13    0.01
[4,]   3 -8.48    0.01
[5,]   4 -6.59    0.01
Type 2: with drift no trend 
     lag   ADF p.value
[1,]   0 -8.58    0.01
[2,]   1 -8.69    0.01
[3,]   2 -8.17    0.01
[4,]   3 -8.60    0.01
[5,]   4 -6.70    0.01
Type 3: with drift and trend 
     lag   ADF p.value
[1,]   0 -8.55    0.01
[2,]   1 -8.66    0.01
[3,]   2 -8.14    0.01
[4,]   3 -8.57    0.01
[5,]   4 -6.69    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
</div>
<p>The adf.test comes back with a <em>p.value &lt;= 0.01</em> as the data is no longer presenting a trend, but as we can plainly see, the data has non constant variance overtime which we know we need. Here we will use the <a href="https://www.spsanderson.com/TidyDensity/"><code>{TidyDensity}</code></a> package to use the <code>cvar()</code> (cumulative variance) function to see the ongoing variance.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">library</span>(TidyDensity)</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cvar</span>(<span class="fu" style="color: #4758AB;">diff</span>(AirPassengers)), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Reject the null that the data is <em>stationary</em>. So lets proceed with a diff diff log of the data and see what we get. First let’s visualize.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">log</span>(AirPassengers))))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cvar</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">log</span>(AirPassengers)))), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-7-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Looking good!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">adf.test</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">log</span>(AirPassengers))))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag    ADF p.value
[1,]   0 -15.90    0.01
[2,]   1 -12.78    0.01
[3,]   2  -9.28    0.01
[4,]   3 -10.76    0.01
[5,]   4  -9.72    0.01
Type 2: with drift no trend 
     lag    ADF p.value
[1,]   0 -15.85    0.01
[2,]   1 -12.73    0.01
[3,]   2  -9.24    0.01
[4,]   3 -10.73    0.01
[5,]   4  -9.68    0.01
Type 3: with drift and trend 
     lag    ADF p.value
[1,]   0 -15.79    0.01
[2,]   1 -12.68    0.01
[3,]   2  -9.21    0.01
[4,]   3 -10.68    0.01
[5,]   4  -9.64    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
</div>
<p>Voila!</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ol type="1">
<li>https://towardsdatascience.com/stationarity-in-time-series-analysis-90c94f27322</li>
<li>https://www.statology.org/dickey-fuller-test-in-r/</li>
</ol>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index.html</guid>
  <pubDate>Tue, 24 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>ADF and Phillips-Perron Tests for Stationarity using lists</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-23/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>A time series is a set of data points collected at regular intervals of time. Sometimes, the data points in a time series change over time in a predictable way. This is called a stationary time series. Other times, the data points change in an unpredictable way. This is called a non-stationary time series.</p>
<p>Imagine you are playing a game of catch with a friend. If you throw the ball back and forth at the same speed and distance, that’s like a stationary time series. But if you keep throwing the ball harder and farther, that’s like a non-stationary time series.</p>
<p>There are two tests that we can use to see if a time series is stationary or non-stationary. The first test is called the ADF test, which stands for Augmented Dickey-Fuller test. The second test is called the Phillips-Perron test.</p>
<p>The ADF test looks at the data points and checks to see if the average value of the data points is the same over time. If the average value is the same, then the time series is stationary. If the average value is not the same, then the time series is non-stationary.</p>
<p>The Phillips-Perron test is similar to the ADF test, but it is a bit more advanced. It checks to see if the data points are changing in a predictable way. If the data points are changing in a predictable way, then the time series is stationary. If the data points are changing in an unpredictable way, then the time series is non-stationary.</p>
<p>So, in short, The ADF test checks if the mean of the time series is constant over time and Phillips-Perron test checks if the variance of the time series is constant over time.</p>
<p>Now, you can use these two tests to see if the time series you are studying is stationary or non-stationary, just like how you can use the game of catch to see if your throws are the same or different.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>To perform these test we can use two libraries, one is the <code>{tseries}</code> library for the <code>adf.test()</code> and the other is the <code>{aTSA}</code> for the <code>pp.test()</code></p>
<p>Let’s see some examples.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s first make our time series obejcts and place them in a list.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tseries)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(aTSA)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;"># create time series objects</span></span>
<span id="cb1-5">ts1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>), <span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1990</span>,<span class="dv" style="color: #AD0000;">1</span>), <span class="at" style="color: #657422;">frequency =</span> <span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb1-6">ts2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>), <span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1995</span>,<span class="dv" style="color: #AD0000;">1</span>), <span class="at" style="color: #657422;">frequency =</span> <span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb1-7">ts3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>), <span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">2000</span>,<span class="dv" style="color: #AD0000;">1</span>), <span class="at" style="color: #657422;">frequency =</span> <span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;"># create list of time series</span></span>
<span id="cb1-10">ts_list <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(ts1, ts2, ts3)</span></code></pre></div>
</div>
<p>Now let’s make our functions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># function to test for stationarity</span></span>
<span id="cb2-2">adf_is_stationary <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x) {</span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;">adf.test</span>(x)<span class="sc" style="color: #5E5E5E;">$</span>p.value <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="fl" style="color: #AD0000;">0.05</span></span>
<span id="cb2-4">}</span>
<span id="cb2-5"></span>
<span id="cb2-6">pp_is_stationary <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x) {</span>
<span id="cb2-7">  pp_df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">pp.test</span>(x) <span class="sc" style="color: #5E5E5E;">|&gt;</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>() </span>
<span id="cb2-8">  pp_df<span class="sc" style="color: #5E5E5E;">$</span>p.value <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="fl" style="color: #AD0000;">0.05</span></span>
<span id="cb2-9">}</span></code></pre></div>
</div>
<p>Time to use <code>lapply()</code>!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># apply function to each time series in list</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">lapply</span>(ts_list, adf_is_stationary)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag    ADF p.value
[1,]   0 -10.97    0.01
[2,]   1  -7.70    0.01
[3,]   2  -5.23    0.01
[4,]   3  -4.05    0.01
[5,]   4  -4.03    0.01
Type 2: with drift no trend 
     lag    ADF p.value
[1,]   0 -11.48    0.01
[2,]   1  -8.32    0.01
[3,]   2  -5.81    0.01
[4,]   3  -4.59    0.01
[5,]   4  -4.63    0.01
Type 3: with drift and trend 
     lag    ADF p.value
[1,]   0 -11.42    0.01
[2,]   1  -8.28    0.01
[3,]   2  -5.77    0.01
[4,]   3  -4.56    0.01
[5,]   4  -4.59    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 
Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag    ADF p.value
[1,]   0 -10.60    0.01
[2,]   1  -7.88    0.01
[3,]   2  -5.96    0.01
[4,]   3  -5.26    0.01
[5,]   4  -4.90    0.01
Type 2: with drift no trend 
     lag    ADF p.value
[1,]   0 -10.64    0.01
[2,]   1  -7.98    0.01
[3,]   2  -6.08    0.01
[4,]   3  -5.41    0.01
[5,]   4  -5.08    0.01
Type 3: with drift and trend 
     lag    ADF p.value
[1,]   0 -10.58    0.01
[2,]   1  -7.94    0.01
[3,]   2  -6.06    0.01
[4,]   3  -5.39    0.01
[5,]   4  -5.07    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 
Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag   ADF p.value
[1,]   0 -9.19    0.01
[2,]   1 -6.65    0.01
[3,]   2 -5.41    0.01
[4,]   3 -5.33    0.01
[5,]   4 -4.77    0.01
Type 2: with drift no trend 
     lag   ADF p.value
[1,]   0 -9.14    0.01
[2,]   1 -6.62    0.01
[3,]   2 -5.39    0.01
[4,]   3 -5.30    0.01
[5,]   4 -4.75    0.01
Type 3: with drift and trend 
     lag   ADF p.value
[1,]   0 -9.11    0.01
[2,]   1 -6.59    0.01
[3,]   2 -5.36    0.01
[4,]   3 -5.29    0.01
[5,]   4 -4.73    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
logical(0)

[[2]]
logical(0)

[[3]]
logical(0)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">lapply</span>(ts_list, pp_is_stationary)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Phillips-Perron Unit Root Test 
alternative: stationary 
 
Type 1: no drift no trend 
 lag Z_rho p.value
   3  -111    0.01
----- 
 Type 2: with drift no trend 
 lag Z_rho p.value
   3  -110    0.01
----- 
 Type 3: with drift and trend 
 lag Z_rho p.value
   3  -110    0.01
--------------- 
Note: p-value = 0.01 means p.value &lt;= 0.01 
Phillips-Perron Unit Root Test 
alternative: stationary 
 
Type 1: no drift no trend 
 lag Z_rho p.value
   3  -101    0.01
----- 
 Type 2: with drift no trend 
 lag Z_rho p.value
   3  -101    0.01
----- 
 Type 3: with drift and trend 
 lag Z_rho p.value
   3  -101    0.01
--------------- 
Note: p-value = 0.01 means p.value &lt;= 0.01 
Phillips-Perron Unit Root Test 
alternative: stationary 
 
Type 1: no drift no trend 
 lag Z_rho p.value
   3 -92.9    0.01
----- 
 Type 2: with drift no trend 
 lag Z_rho p.value
   3 -92.9    0.01
----- 
 Type 3: with drift and trend 
 lag Z_rho p.value
   3   -93    0.01
--------------- 
Note: p-value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] FALSE FALSE FALSE

[[2]]
[1] FALSE FALSE FALSE

[[3]]
[1] FALSE FALSE FALSE</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <category>timeseries</category>
  <category>lapply</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-23/index.html</guid>
  <pubDate>Mon, 23 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Another Post on Lists</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-lists-2023-01-20/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Manipulating lists in R is a powerful tool for organizing and analyzing data. Here are a few common ways to manipulate lists:</p>
<ol type="1">
<li>Indexing: Lists can be indexed using square brackets “[ ]” and numeric indices. For example, to access the first element of a list called “mylist”, you would use the expression “mylist[1]”.</li>
<li>Subsetting: Lists can be subsetted using the same square bracket notation, but with a logical vector indicating which elements to keep. For example, to select all elements of “mylist” that are greater than 5, you would use the expression “mylist[mylist &gt; 5]”.</li>
<li>Modifying elements: Elements of a list can be modified by assigning new values to them using the assignment operator “&lt;-”. For example, to change the third element of “mylist” to 10, you would use the expression “mylist[3] &lt;- 10”.</li>
<li>Adding elements: New elements can be added to a list using the concatenation operator “c()” or the “append()” function. For example, to add the number 7 to the end of “mylist”, you would use the expression “mylist &lt;- c(mylist, 7)”.</li>
<li>Removing elements: Elements can be removed from a list using the “-” operator. For example, to remove the second element of “mylist”, you would use the expression “mylist &lt;- mylist[-2]”.</li>
</ol>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Here is an example of how these methods can be used to manipulate a list in R:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">mylist <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># Indexing</span></span>
<span id="cb1-4">mylist[[<span class="dv" style="color: #AD0000;">1</span>]] <span class="co" style="color: #5E5E5E;"># Returns 1</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># Subsetting</span></span>
<span id="cb3-2">mylist[mylist <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">3</span>] <span class="co" style="color: #5E5E5E;"># Returns 4 &amp; 5</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 4

[[2]]
[1] 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># Modifying elements</span></span>
<span id="cb5-2">mylist[[<span class="dv" style="color: #AD0000;">3</span>]] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb5-3">mylist <span class="co" style="color: #5E5E5E;"># Returns 1 2 10 4 5 7</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 10

[[4]]
[1] 4

[[5]]
[1] 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># Adding elements</span></span>
<span id="cb7-2">mylist <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(mylist, <span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb7-3">mylist <span class="co" style="color: #5E5E5E;"># Returns 1 2 10 4 5 7</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 10

[[4]]
[1] 4

[[5]]
[1] 5

[[6]]
[1] 7</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># Removing elements</span></span>
<span id="cb9-2">mylist[<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 4

[[4]]
[1] 5

[[5]]
[1] 7</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">mylist <span class="co" style="color: #5E5E5E;"># Returns 1 2 4 5 7</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 10

[[4]]
[1] 4

[[5]]
[1] 5

[[6]]
[1] 7</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-lists-2023-01-20/index.html</guid>
  <pubDate>Fri, 20 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Boilerplate XGBoost with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-19/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>XGBoost, short for “eXtreme Gradient Boosting,” is a powerful and popular machine learning library that is specifically designed for gradient boosting. It is an open-source library and is available in many programming languages, including R.</p>
<p>Gradient boosting is a technique that combines the predictions of multiple weak models to create a strong, more accurate model. XGBoost is an optimized version of gradient boosting that is designed to run faster and more efficiently than other implementations.</p>
<p>Let’s take a look at a simple example of how to use XGBoost in R. We will use the iris dataset, a well-known dataset that contains 150 observations of iris flowers, each with four features (sepal length, sepal width, petal length, and petal width) and one target variable (the species of iris). Our goal is to train a model to predict the species of an iris flower based on its features.</p>
<p>First, we need to install the “xgboost” package in R:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"xgboost"</span>)</span></code></pre></div>
</div>
<p>Next, we load the iris dataset and split it into training and test sets:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">data</span>(iris)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span>
<span id="cb2-3">indices <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sample</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">nrow</span>(iris), <span class="fl" style="color: #AD0000;">0.8</span><span class="sc" style="color: #5E5E5E;">*</span><span class="fu" style="color: #4758AB;">nrow</span>(iris))</span>
<span id="cb2-4">train_data <span class="ot" style="color: #003B4F;">&lt;-</span> iris[indices, <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb2-5">train_label <span class="ot" style="color: #003B4F;">&lt;-</span> iris[indices, <span class="dv" style="color: #AD0000;">5</span>]</span>
<span id="cb2-6">test_data <span class="ot" style="color: #003B4F;">&lt;-</span> iris[<span class="sc" style="color: #5E5E5E;">-</span>indices, <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">4</span>]</span>
<span id="cb2-7">test_label <span class="ot" style="color: #003B4F;">&lt;-</span> iris[<span class="sc" style="color: #5E5E5E;">-</span>indices, <span class="dv" style="color: #AD0000;">5</span>]</span></code></pre></div>
</div>
<p>Now we can train our XGBoost model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(xgboost)</span>
<span id="cb3-2">xgb_model <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">xgboost</span>(</span>
<span id="cb3-3">  <span class="at" style="color: #657422;">data =</span> train_data, </span>
<span id="cb3-4">  <span class="at" style="color: #657422;">label =</span> train_label, </span>
<span id="cb3-5">  <span class="at" style="color: #657422;">nrounds =</span> <span class="dv" style="color: #AD0000;">100</span>, </span>
<span id="cb3-6">  <span class="at" style="color: #657422;">objective =</span> <span class="st" style="color: #20794D;">"multi:softmax"</span>, </span>
<span id="cb3-7">  <span class="at" style="color: #657422;">num_class =</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb3-8">  )</span></code></pre></div>
</div>
<p>Here, we specified the training data, labels, number of rounds (iterations) to run, the objective (multiclass classification) and the number of classes.</p>
<p>Finally, we can use the trained model to make predictions on the test set:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">predictions <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">predict</span>(xgb_model, test_data)</span></code></pre></div>
</div>
<p>We can also evaluate the performance of our model by comparing the predicted labels to the true labels using metrics such as accuracy:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">accuracy <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">mean</span>(predictions <span class="sc" style="color: #5E5E5E;">==</span> test_label)</span></code></pre></div>
</div>
<p>In this example, we used XGBoost to train a model to predict the species of iris flowers based on their features. We saw that XGBoost is a powerful and efficient library for gradient boosting, and it can be easily integrated into a R script.</p>
<p>Keep in mind that this is a simple example, and in real-world scenarios, more preprocessing and parameter tuning is necessary to achieve optimal performance. Also, the dataset is small, and the number of rounds used is also small, which is not ideal for real-world scenarios. But this example shows the basic usage of XGBoost in R.</p>
<p>Ok, so, what’s the point? Is there a possibly easier way to do this…yes! You can use the <strong>boilerplace function</strong> <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_auto_xgboost.html"><code>hai_auto_xgboost()</code></a> and it’s data prep helper <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html"><code>hai_xgboost_data_prepper()</code></a> from the <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a> library. Let’s see how that works.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the data prepper function and it’s arguments.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">hai_xgboost_data_prepper</span>(.data, .recipe_formula)</span></code></pre></div>
</div>
<ul>
<li><code>.data</code> - The data that you are passing to the function. Can be any type of data that is accepted by the data parameter of the recipes::reciep() function.</li>
<li><code>.recipe_formula</code> - The formula that is going to be passed. For example if you are using the diamonds data then the formula would most likely be something like <code>price ~</code> .</li>
</ul>
<p>Here is the <strong>boilerplate function</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">hai_auto_xgboost</span>(</span>
<span id="cb7-2">  .data,</span>
<span id="cb7-3">  .rec_obj,</span>
<span id="cb7-4">  <span class="at" style="color: #657422;">.splits_obj =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb7-5">  <span class="at" style="color: #657422;">.rsamp_obj =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb7-6">  <span class="at" style="color: #657422;">.tune =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb7-7">  <span class="at" style="color: #657422;">.grid_size =</span> <span class="dv" style="color: #AD0000;">10</span>,</span>
<span id="cb7-8">  <span class="at" style="color: #657422;">.num_cores =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb7-9">  <span class="at" style="color: #657422;">.best_metric =</span> <span class="st" style="color: #20794D;">"f_meas"</span>,</span>
<span id="cb7-10">  <span class="at" style="color: #657422;">.model_type =</span> <span class="st" style="color: #20794D;">"classification"</span></span>
<span id="cb7-11">)</span></code></pre></div>
</div>
<p>Here are it’s arguments.</p>
<ul>
<li><code>.data</code> - The data being passed to the function. The time-series object.</li>
<li><code>.rec_obj</code> - This is the recipe object you want to use. You can use <code>hai_xgboost_data_prepper()</code> an automatic recipe_object.</li>
<li><code>.splits_obj</code> - NULL is the default, when NULL then one will be created.</li>
<li><code>.rsamp_obj</code> - NULL is the default, when NULL then one will be created. It will default to creating an <code>rsample::mc_cv()</code> object.</li>
<li><code>.tune</code> - Default is TRUE, this will create a tuning grid and tuned workflow</li>
<li><code>.grid_size</code> - Default is 10</li>
<li><code>.num_cores</code> - Default is 1</li>
<li><code>.best_metric</code> - Default is “f_meas”. You can choose a metric depending on the <strong>model_type</strong> used. If regression then see <code>hai_default_regression_metric_set()</code>, if classification then see <code>hai_default_classification_metric_set()</code>.</li>
<li><code>.model_type</code> - Default is classification, can also be regression.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s take a look at an example and it’s output. This is using <code>{parsnip}</code> under the hood.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb8-2"></span>
<span id="cb8-3">data <span class="ot" style="color: #003B4F;">&lt;-</span> iris</span>
<span id="cb8-4"></span>
<span id="cb8-5">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_xgboost_data_prepper</span>(data, Species <span class="sc" style="color: #5E5E5E;">~</span> .)</span>
<span id="cb8-6"></span>
<span id="cb8-7">auto_xgb <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_auto_xgboost</span>(</span>
<span id="cb8-8">  <span class="at" style="color: #657422;">.data =</span> data,</span>
<span id="cb8-9">  <span class="at" style="color: #657422;">.rec_obj =</span> rec_obj,</span>
<span id="cb8-10">  <span class="at" style="color: #657422;">.best_metric =</span> <span class="st" style="color: #20794D;">"f_meas"</span>,</span>
<span id="cb8-11">  <span class="at" style="color: #657422;">.num_cores =</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb8-12">)</span></code></pre></div>
</div>
<p>There are three main outputs to this function, which are:</p>
<ol type="1">
<li><code>recipe_info</code></li>
<li><code>model_info</code></li>
<li><code>tuned_info</code></li>
</ol>
<p>Let’s take a look at each. First the <strong>recipe_info</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">auto_xgb<span class="sc" style="color: #5E5E5E;">$</span>recipe_info</span>
<span id="cb9-2"></span>
<span id="cb9-3">Recipe</span>
<span id="cb9-4"></span>
<span id="cb9-5">Inputs<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb9-6"></span>
<span id="cb9-7">      role <span class="co" style="color: #5E5E5E;">#variables</span></span>
<span id="cb9-8">   outcome          <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb9-9"> predictor          <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb9-10"></span>
<span id="cb9-11">Operations<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb9-12"></span>
<span id="cb9-13">Factor variables from tidyselect<span class="sc" style="color: #5E5E5E;">::</span>vars_select_helpers<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">where</span>(is.charac...</span>
<span id="cb9-14">Novel factor level assignment <span class="cf" style="color: #003B4F;">for</span> recipes<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">all_nominal_predictors</span>()</span>
<span id="cb9-15">Dummy variables from recipes<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">all_nominal_predictors</span>()</span>
<span id="cb9-16">Zero variance filter on recipes<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">all_predictors</span>()</span></code></pre></div>
</div>
<p>Now the <strong>model_info</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">auto_xgb<span class="sc" style="color: #5E5E5E;">$</span>model_info</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="sc" style="color: #5E5E5E;">$</span>model_spec</span>
<span id="cb10-4">Boosted Tree Model <span class="fu" style="color: #4758AB;">Specification</span> (classification)</span>
<span id="cb10-5"></span>
<span id="cb10-6">Main Arguments<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb10-7">  trees <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-8">  min_n <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-9">  tree_depth <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-10">  learn_rate <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-11">  loss_reduction <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-12">  sample_size <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-13"></span>
<span id="cb10-14">Computational engine<span class="sc" style="color: #5E5E5E;">:</span> xgboost </span>
<span id="cb10-15"></span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="sc" style="color: #5E5E5E;">$</span>wflw</span>
<span id="cb10-18">══ Workflow ════════════════════════════════════════════════════════════════════</span>
<span id="cb10-19">Preprocessor<span class="sc" style="color: #5E5E5E;">:</span> Recipe</span>
<span id="cb10-20">Model<span class="sc" style="color: #5E5E5E;">:</span> <span class="fu" style="color: #4758AB;">boost_tree</span>()</span>
<span id="cb10-21"></span>
<span id="cb10-22">── Preprocessor ────────────────────────────────────────────────────────────────</span>
<span id="cb10-23"><span class="dv" style="color: #AD0000;">4</span> Recipe Steps</span>
<span id="cb10-24"></span>
<span id="cb10-25">• <span class="fu" style="color: #4758AB;">step_string2factor</span>()</span>
<span id="cb10-26">• <span class="fu" style="color: #4758AB;">step_novel</span>()</span>
<span id="cb10-27">• <span class="fu" style="color: #4758AB;">step_dummy</span>()</span>
<span id="cb10-28">• <span class="fu" style="color: #4758AB;">step_zv</span>()</span>
<span id="cb10-29"></span>
<span id="cb10-30">── Model ───────────────────────────────────────────────────────────────────────</span>
<span id="cb10-31">Boosted Tree Model <span class="fu" style="color: #4758AB;">Specification</span> (classification)</span>
<span id="cb10-32"></span>
<span id="cb10-33">Main Arguments<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb10-34">  trees <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-35">  min_n <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-36">  tree_depth <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-37">  learn_rate <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-38">  loss_reduction <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-39">  sample_size <span class="ot" style="color: #003B4F;">=</span> tune<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tune</span>()</span>
<span id="cb10-40"></span>
<span id="cb10-41">Computational engine<span class="sc" style="color: #5E5E5E;">:</span> xgboost </span>
<span id="cb10-42"></span>
<span id="cb10-43"></span>
<span id="cb10-44"><span class="sc" style="color: #5E5E5E;">$</span>fitted_wflw</span>
<span id="cb10-45">══ Workflow [trained] ══════════════════════════════════════════════════════════</span>
<span id="cb10-46">Preprocessor<span class="sc" style="color: #5E5E5E;">:</span> Recipe</span>
<span id="cb10-47">Model<span class="sc" style="color: #5E5E5E;">:</span> <span class="fu" style="color: #4758AB;">boost_tree</span>()</span>
<span id="cb10-48"></span>
<span id="cb10-49">── Preprocessor ────────────────────────────────────────────────────────────────</span>
<span id="cb10-50"><span class="dv" style="color: #AD0000;">4</span> Recipe Steps</span>
<span id="cb10-51"></span>
<span id="cb10-52">• <span class="fu" style="color: #4758AB;">step_string2factor</span>()</span>
<span id="cb10-53">• <span class="fu" style="color: #4758AB;">step_novel</span>()</span>
<span id="cb10-54">• <span class="fu" style="color: #4758AB;">step_dummy</span>()</span>
<span id="cb10-55">• <span class="fu" style="color: #4758AB;">step_zv</span>()</span>
<span id="cb10-56"></span>
<span id="cb10-57">── Model ───────────────────────────────────────────────────────────────────────</span>
<span id="cb10-58"><span class="do" style="color: #5E5E5E;
font-style: italic;">##### xgb.Booster</span></span>
<span id="cb10-59">raw<span class="sc" style="color: #5E5E5E;">:</span> <span class="fl" style="color: #AD0000;">2.5</span> Mb </span>
<span id="cb10-60">call<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb10-61">  xgboost<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">xgb.train</span>(<span class="at" style="color: #657422;">params =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="at" style="color: #657422;">eta =</span> <span class="fl" style="color: #AD0000;">0.10962507492329</span>, <span class="at" style="color: #657422;">max_depth =</span> 13L, </span>
<span id="cb10-62">    <span class="at" style="color: #657422;">gamma =</span> <span class="fl" style="color: #AD0000;">0.000498577409120534</span>, <span class="at" style="color: #657422;">colsample_bytree =</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">colsample_bynode =</span> <span class="dv" style="color: #AD0000;">1</span>, </span>
<span id="cb10-63">    <span class="at" style="color: #657422;">min_child_weight =</span> 3L, <span class="at" style="color: #657422;">subsample =</span> <span class="fl" style="color: #AD0000;">0.594320066112559</span>), <span class="at" style="color: #657422;">data =</span> x<span class="sc" style="color: #5E5E5E;">$</span>data, </span>
<span id="cb10-64">    <span class="at" style="color: #657422;">nrounds =</span> 1240L, <span class="at" style="color: #657422;">watchlist =</span> x<span class="sc" style="color: #5E5E5E;">$</span>watchlist, <span class="at" style="color: #657422;">verbose =</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">nthread =</span> <span class="dv" style="color: #AD0000;">1</span>, </span>
<span id="cb10-65">    <span class="at" style="color: #657422;">objective =</span> <span class="st" style="color: #20794D;">"multi:softprob"</span>, <span class="at" style="color: #657422;">num_class =</span> 3L)</span>
<span id="cb10-66"><span class="fu" style="color: #4758AB;">params</span> (as set within xgb.train)<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb10-67">  eta <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"0.10962507492329"</span>, max_depth <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"13"</span>, gamma <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"0.000498577409120534"</span>, colsample_bytree <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"1"</span>, colsample_bynode <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"1"</span>, min_child_weight <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"3"</span>, subsample <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"0.594320066112559"</span>, nthread <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"1"</span>, objective <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"multi:softprob"</span>, num_class <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"3"</span>, validate_parameters <span class="ot" style="color: #003B4F;">=</span> <span class="st" style="color: #20794D;">"TRUE"</span></span>
<span id="cb10-68">xgb.attributes<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb10-69">  niter</span>
<span id="cb10-70">callbacks<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb10-71">  <span class="fu" style="color: #4758AB;">cb.evaluation.log</span>()</span>
<span id="cb10-72"><span class="co" style="color: #5E5E5E;"># of features: 4 </span></span>
<span id="cb10-73">niter<span class="sc" style="color: #5E5E5E;">:</span> <span class="dv" style="color: #AD0000;">1240</span></span>
<span id="cb10-74">nfeatures <span class="sc" style="color: #5E5E5E;">:</span> <span class="dv" style="color: #AD0000;">4</span> </span>
<span id="cb10-75">evaluation_log<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb10-76">    iter training_mlogloss</span>
<span id="cb10-77">       <span class="dv" style="color: #AD0000;">1</span>        <span class="fl" style="color: #AD0000;">0.96929822</span></span>
<span id="cb10-78">       <span class="dv" style="color: #AD0000;">2</span>        <span class="fl" style="color: #AD0000;">0.85785438</span></span>
<span id="cb10-79"><span class="sc" style="color: #5E5E5E;">---</span>                       </span>
<span id="cb10-80">    <span class="dv" style="color: #AD0000;">1239</span>        <span class="fl" style="color: #AD0000;">0.07815044</span></span>
<span id="cb10-81">    <span class="dv" style="color: #AD0000;">1240</span>        <span class="fl" style="color: #AD0000;">0.07808817</span></span>
<span id="cb10-82"></span>
<span id="cb10-83"><span class="sc" style="color: #5E5E5E;">$</span>was_tuned</span>
<span id="cb10-84">[<span class="dv" style="color: #AD0000;">1</span>] <span class="st" style="color: #20794D;">"tuned"</span></span></code></pre></div>
</div>
<p>Now the <strong>tuned_info</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">auto_xgb<span class="sc" style="color: #5E5E5E;">$</span>tuned_info</span>
<span id="cb11-2"></span>
<span id="cb11-3"><span class="sc" style="color: #5E5E5E;">$</span>tuning_grid</span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;"># A tibble: 10 × 6</span></span>
<span id="cb11-5">   trees min_n tree_depth learn_rate loss_reduction sample_size</span>
<span id="cb11-6">   <span class="sc" style="color: #5E5E5E;">&lt;</span>int<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>int<span class="sc" style="color: #5E5E5E;">&gt;</span>      <span class="er" style="color: #AD0000;">&lt;</span>int<span class="sc" style="color: #5E5E5E;">&gt;</span>      <span class="er" style="color: #AD0000;">&lt;</span>dbl<span class="sc" style="color: #5E5E5E;">&gt;</span>          <span class="er" style="color: #AD0000;">&lt;</span>dbl<span class="sc" style="color: #5E5E5E;">&gt;</span>       <span class="er" style="color: #AD0000;">&lt;</span>dbl<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-7"> <span class="dv" style="color: #AD0000;">1</span>   <span class="dv" style="color: #AD0000;">926</span>     <span class="dv" style="color: #AD0000;">6</span>          <span class="dv" style="color: #AD0000;">2</span>    <span class="fl" style="color: #AD0000;">0.0246</span>        <span class="fl" style="color: #AD0000;">2.21</span>e<span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span>       <span class="fl" style="color: #AD0000;">0.952</span></span>
<span id="cb11-8"> <span class="dv" style="color: #AD0000;">2</span>  <span class="dv" style="color: #AD0000;">1510</span>    <span class="dv" style="color: #AD0000;">25</span>         <span class="dv" style="color: #AD0000;">14</span>    <span class="fl" style="color: #AD0000;">0.00189</span>       <span class="fl" style="color: #AD0000;">1.01</span>e<span class="sc" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">1</span>       <span class="fl" style="color: #AD0000;">0.424</span></span>
<span id="cb11-9"> <span class="dv" style="color: #AD0000;">3</span>  <span class="dv" style="color: #AD0000;">1077</span>    <span class="dv" style="color: #AD0000;">29</span>          <span class="dv" style="color: #AD0000;">9</span>    <span class="fl" style="color: #AD0000;">0.195</span>         <span class="fl" style="color: #AD0000;">1.34</span>e<span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">5</span>       <span class="fl" style="color: #AD0000;">0.319</span></span>
<span id="cb11-10"> <span class="dv" style="color: #AD0000;">4</span>   <span class="dv" style="color: #AD0000;">795</span>    <span class="dv" style="color: #AD0000;">32</span>          <span class="dv" style="color: #AD0000;">3</span>    <span class="fl" style="color: #AD0000;">0.00102</span>       <span class="fl" style="color: #AD0000;">1.64</span>e<span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">3</span>       <span class="fl" style="color: #AD0000;">0.686</span></span>
<span id="cb11-11"> <span class="dv" style="color: #AD0000;">5</span>   <span class="dv" style="color: #AD0000;">368</span>    <span class="dv" style="color: #AD0000;">22</span>          <span class="dv" style="color: #AD0000;">4</span>    <span class="fl" style="color: #AD0000;">0.00549</span>       <span class="fl" style="color: #AD0000;">2.97</span>e<span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">7</span>       <span class="fl" style="color: #AD0000;">0.735</span></span>
<span id="cb11-12"> <span class="dv" style="color: #AD0000;">6</span>  <span class="dv" style="color: #AD0000;">1240</span>     <span class="dv" style="color: #AD0000;">3</span>         <span class="dv" style="color: #AD0000;">13</span>    <span class="fl" style="color: #AD0000;">0.110</span>         <span class="fl" style="color: #AD0000;">4.99</span>e<span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">4</span>       <span class="fl" style="color: #AD0000;">0.594</span></span>
<span id="cb11-13"> <span class="dv" style="color: #AD0000;">7</span>  <span class="dv" style="color: #AD0000;">1839</span>    <span class="dv" style="color: #AD0000;">18</span>          <span class="dv" style="color: #AD0000;">5</span>    <span class="fl" style="color: #AD0000;">0.0501</span>        <span class="fl" style="color: #AD0000;">1.67</span>e<span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">7</span>       <span class="fl" style="color: #AD0000;">0.273</span></span>
<span id="cb11-14"> <span class="dv" style="color: #AD0000;">8</span>   <span class="dv" style="color: #AD0000;">139</span>    <span class="dv" style="color: #AD0000;">11</span>         <span class="dv" style="color: #AD0000;">10</span>    <span class="fl" style="color: #AD0000;">0.0153</span>        <span class="fl" style="color: #AD0000;">1.17</span>e<span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">2</span>       <span class="fl" style="color: #AD0000;">0.483</span></span>
<span id="cb11-15"> <span class="dv" style="color: #AD0000;">9</span>   <span class="dv" style="color: #AD0000;">470</span>    <span class="dv" style="color: #AD0000;">40</span>          <span class="dv" style="color: #AD0000;">8</span>    <span class="fl" style="color: #AD0000;">0.0906</span>        <span class="fl" style="color: #AD0000;">6.79e-10</span>       <span class="fl" style="color: #AD0000;">0.168</span></span>
<span id="cb11-16"><span class="dv" style="color: #AD0000;">10</span>  <span class="dv" style="color: #AD0000;">1732</span>    <span class="dv" style="color: #AD0000;">16</span>         <span class="dv" style="color: #AD0000;">11</span>    <span class="fl" style="color: #AD0000;">0.00667</span>       <span class="fl" style="color: #AD0000;">9.19</span>e<span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">9</span>       <span class="fl" style="color: #AD0000;">0.883</span></span>
<span id="cb11-17"></span>
<span id="cb11-18"><span class="sc" style="color: #5E5E5E;">$</span>cv_obj</span>
<span id="cb11-19"><span class="co" style="color: #5E5E5E;"># Monte Carlo cross-validation (0.75/0.25) with 25 resamples  </span></span>
<span id="cb11-20"><span class="co" style="color: #5E5E5E;"># A tibble: 25 × 2</span></span>
<span id="cb11-21">   splits          id        </span>
<span id="cb11-22">   <span class="sc" style="color: #5E5E5E;">&lt;</span>list<span class="sc" style="color: #5E5E5E;">&gt;</span>          <span class="er" style="color: #AD0000;">&lt;</span>chr<span class="sc" style="color: #5E5E5E;">&gt;</span>     </span>
<span id="cb11-23"> <span class="dv" style="color: #AD0000;">1</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample01</span>
<span id="cb11-24"> <span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample02</span>
<span id="cb11-25"> <span class="dv" style="color: #AD0000;">3</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample03</span>
<span id="cb11-26"> <span class="dv" style="color: #AD0000;">4</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample04</span>
<span id="cb11-27"> <span class="dv" style="color: #AD0000;">5</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample05</span>
<span id="cb11-28"> <span class="dv" style="color: #AD0000;">6</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample06</span>
<span id="cb11-29"> <span class="dv" style="color: #AD0000;">7</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample07</span>
<span id="cb11-30"> <span class="dv" style="color: #AD0000;">8</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample08</span>
<span id="cb11-31"> <span class="dv" style="color: #AD0000;">9</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample09</span>
<span id="cb11-32"><span class="dv" style="color: #AD0000;">10</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample10</span>
<span id="cb11-33"><span class="co" style="color: #5E5E5E;"># … with 15 more rows</span></span>
<span id="cb11-34"></span>
<span id="cb11-35"><span class="sc" style="color: #5E5E5E;">$</span>tuned_results</span>
<span id="cb11-36"><span class="co" style="color: #5E5E5E;"># Tuning results</span></span>
<span id="cb11-37"><span class="co" style="color: #5E5E5E;"># Monte Carlo cross-validation (0.75/0.25) with 25 resamples  </span></span>
<span id="cb11-38"><span class="co" style="color: #5E5E5E;"># A tibble: 25 × 4</span></span>
<span id="cb11-39">   splits          id         .metrics            .notes          </span>
<span id="cb11-40">   <span class="sc" style="color: #5E5E5E;">&lt;</span>list<span class="sc" style="color: #5E5E5E;">&gt;</span>          <span class="er" style="color: #AD0000;">&lt;</span>chr<span class="sc" style="color: #5E5E5E;">&gt;</span>      <span class="er" style="color: #AD0000;">&lt;</span>list<span class="sc" style="color: #5E5E5E;">&gt;</span>              <span class="er" style="color: #AD0000;">&lt;</span>list<span class="sc" style="color: #5E5E5E;">&gt;</span>          </span>
<span id="cb11-41"> <span class="dv" style="color: #AD0000;">1</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample01 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-42"> <span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample02 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-43"> <span class="dv" style="color: #AD0000;">3</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample03 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-44"> <span class="dv" style="color: #AD0000;">4</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample04 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-45"> <span class="dv" style="color: #AD0000;">5</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample05 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-46"> <span class="dv" style="color: #AD0000;">6</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample06 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-47"> <span class="dv" style="color: #AD0000;">7</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample07 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-48"> <span class="dv" style="color: #AD0000;">8</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample08 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-49"> <span class="dv" style="color: #AD0000;">9</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample09 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-50"><span class="dv" style="color: #AD0000;">10</span> <span class="sc" style="color: #5E5E5E;">&lt;</span>split [<span class="dv" style="color: #AD0000;">84</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">28</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> Resample10 <span class="sc" style="color: #5E5E5E;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">110</span> × <span class="dv" style="color: #AD0000;">10</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>tibble [<span class="dv" style="color: #AD0000;">1</span> × <span class="dv" style="color: #AD0000;">3</span>]<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-51"><span class="co" style="color: #5E5E5E;"># … with 15 more rows</span></span>
<span id="cb11-52"></span>
<span id="cb11-53">There were issues with some computations<span class="sc" style="color: #5E5E5E;">:</span></span>
<span id="cb11-54"></span>
<span id="cb11-55">  <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...   <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">Warning</span>(s) x1<span class="sc" style="color: #5E5E5E;">:</span> While computing multiclass <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">precision()</span><span class="st" style="color: #20794D;">`</span>, some levels had no pred...</span>
<span id="cb11-56"></span>
<span id="cb11-57">Run <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">show_notes(.Last.tune.result)</span><span class="st" style="color: #20794D;">`</span> <span class="cf" style="color: #003B4F;">for</span> more information.</span>
<span id="cb11-58"></span>
<span id="cb11-59"><span class="sc" style="color: #5E5E5E;">$</span>grid_size</span>
<span id="cb11-60">[<span class="dv" style="color: #AD0000;">1</span>] <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb11-61"></span>
<span id="cb11-62"><span class="sc" style="color: #5E5E5E;">$</span>best_metric</span>
<span id="cb11-63">[<span class="dv" style="color: #AD0000;">1</span>] <span class="st" style="color: #20794D;">"f_meas"</span></span>
<span id="cb11-64"></span>
<span id="cb11-65"><span class="sc" style="color: #5E5E5E;">$</span>best_result_set</span>
<span id="cb11-66"><span class="co" style="color: #5E5E5E;"># A tibble: 1 × 12</span></span>
<span id="cb11-67">  trees min_n tree_depth learn_rate loss_r…¹ sampl…² .metric .esti…³  mean     n</span>
<span id="cb11-68">  <span class="sc" style="color: #5E5E5E;">&lt;</span>int<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>int<span class="sc" style="color: #5E5E5E;">&gt;</span>      <span class="er" style="color: #AD0000;">&lt;</span>int<span class="sc" style="color: #5E5E5E;">&gt;</span>      <span class="er" style="color: #AD0000;">&lt;</span>dbl<span class="sc" style="color: #5E5E5E;">&gt;</span>    <span class="er" style="color: #AD0000;">&lt;</span>dbl<span class="sc" style="color: #5E5E5E;">&gt;</span>   <span class="er" style="color: #AD0000;">&lt;</span>dbl<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>chr<span class="sc" style="color: #5E5E5E;">&gt;</span>   <span class="er" style="color: #AD0000;">&lt;</span>chr<span class="sc" style="color: #5E5E5E;">&gt;</span>   <span class="er" style="color: #AD0000;">&lt;</span>dbl<span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="er" style="color: #AD0000;">&lt;</span>int<span class="sc" style="color: #5E5E5E;">&gt;</span></span>
<span id="cb11-69"><span class="dv" style="color: #AD0000;">1</span>  <span class="dv" style="color: #AD0000;">1240</span>     <span class="dv" style="color: #AD0000;">3</span>         <span class="dv" style="color: #AD0000;">13</span>      <span class="fl" style="color: #AD0000;">0.110</span> <span class="fl" style="color: #AD0000;">0.000499</span>   <span class="fl" style="color: #AD0000;">0.594</span> f_meas  macro   <span class="fl" style="color: #AD0000;">0.944</span>    <span class="dv" style="color: #AD0000;">25</span></span>
<span id="cb11-70"><span class="co" style="color: #5E5E5E;"># … with 2 more variables: std_err &lt;dbl&gt;, .config &lt;chr&gt;, and abbreviated</span></span>
<span id="cb11-71"><span class="co" style="color: #5E5E5E;">#   variable names ¹​loss_reduction, ²​sample_size, ³​.estimator</span></span>
<span id="cb11-72"></span>
<span id="cb11-73"><span class="sc" style="color: #5E5E5E;">$</span>tuning_grid_plot</span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-19/ggplot-plot.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Tuning Grid</figcaption><p></p>
</figure>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>xgboost</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-19/index.html</guid>
  <pubDate>Thu, 19 Jan 2023 05:00:00 GMT</pubDate>
  <media:content url="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-19/ggplot-plot.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Geometric Brownian Motion with {healthyR.ts}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-18/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Geometric Brownian motion (GBM) is a widely used model in financial analysis for modeling the behavior of stock prices. It is a stochastic process that describes the evolution of a stock price over time, assuming that the stock price follows a random walk with a drift term and a volatility term.</p>
<p>One of the advantages of GBM is that it can capture the randomness and volatility of stock prices, which is a key feature of financial markets. GBM can also be used to estimate the expected return and volatility of a stock, which are important inputs for financial decision making.</p>
<p>Another advantage of GBM is that it can be used to generate simulations of future stock prices. These simulations can be used to estimate the probability of different outcomes, such as the probability of a stock price reaching a certain level in the future. This can be useful for risk management and for evaluating investment strategies.</p>
<p>GBM is also very easy to implement, making it a popular choice among financial analysts and traders.</p>
<p>The equation for GBM is: <img src="https://latex.codecogs.com/png.latex?%0AdS(t)%20=%20%CE%BCS(t)dt%20+%20%CF%83S(t)dW(t)%0A"> Where:</p>
<p><img src="https://latex.codecogs.com/png.latex?dS(t)"> is the change in the stock price at time <img src="https://latex.codecogs.com/png.latex?t"></p>
<p><img src="https://latex.codecogs.com/png.latex?S(t)"> is the stock price at time <img src="https://latex.codecogs.com/png.latex?t"></p>
<p><img src="https://latex.codecogs.com/png.latex?%CE%BC"> is the expected return of the stock</p>
<p><img src="https://latex.codecogs.com/png.latex?%CF%83"> is the volatility of the stock</p>
<p><img src="https://latex.codecogs.com/png.latex?dW(t)"> is a Wiener process (a random variable that describes the rate of change of a random variable over time)</p>
<p>It’s important to keep in mind that GBM is a model and not always a perfect fit to real-world stock prices. However, it’s a widely accepted model due to its capability to captures the key characteristics of stock prices and its mathematical tractability.</p>
<p>Attention R users! Are you looking for a reliable and accurate way to model stock prices? We have some exciting news for you! The next release of the R package <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> will include a new function, <code>ts_geometric_brownian_motion()</code>. This powerful function utilizes the geometric Brownian motion model to simulate stock prices, providing you with valuable insights and predictions for your financial analysis.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;">.time =</span> <span class="dv" style="color: #AD0000;">25</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.mean =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.sigma =</span> <span class="fl" style="color: #AD0000;">0.1</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.initial_value =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.delta_time =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">365</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.return_tibble =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb1-9">)</span></code></pre></div>
</div>
<p>Now let’s go over the arguments to the parameters.</p>
<ul>
<li><code>.num_sims</code> - Total number of simulations.</li>
<li><code>.time</code> - Total time of the simulation.</li>
<li><code>.mean</code> - Expected return</li>
<li><code>.sigma</code> - Volatility</li>
<li><code>.initial_value</code> - Integer representing the initial value.</li>
<li><code>.delta_time</code> - Time step size.</li>
<li><code>.return_tibble</code> The default is TRUE. If set to FALSE then an object of class matrix will be returned.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s go over a few examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2,600 × 3
   sim_number        t     y
   &lt;fct&gt;         &lt;int&gt; &lt;dbl&gt;
 1 sim_number 1      1   100
 2 sim_number 2      1   100
 3 sim_number 3      1   100
 4 sim_number 4      1   100
 5 sim_number 5      1   100
 6 sim_number 6      1   100
 7 sim_number 7      1   100
 8 sim_number 8      1   100
 9 sim_number 9      1   100
10 sim_number 10     1   100
# … with 2,590 more rows</code></pre>
</div>
</div>
<p>Now without returning a <code>tibble</code> object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>(<span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">5</span>, <span class="at" style="color: #657422;">.return_tibble =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      sim_number 1 sim_number 2 sim_number 3 sim_number 4 sim_number 5
 [1,]    100.00000     100.0000    100.00000    100.00000     100.0000
 [2,]    101.04170     100.6583    100.46420     99.68513     100.3776
 [3,]    101.58155     100.8959    100.03621     98.91656     101.5732
 [4,]    100.91680     100.7494     99.47735     98.57117     101.1525
 [5,]     99.96787     101.3298     98.70899     99.03101     101.1557
 [6,]     99.29069     101.4187     98.32176     98.33018     101.5584
 [7,]     99.40451     101.5124     98.26237     97.79356     101.4934
 [8,]     99.35345     101.0328     98.69587     97.46604     101.9630
 [9,]     97.94177     100.9534     98.32630     96.95231     102.1643
[10,]     97.95812     101.3813     98.36934     96.64048     101.8546
[11,]     98.47820     101.8262     98.21492     96.12851     102.5529
[12,]     99.53016     102.5522     97.92270     95.97443     102.8912
[13,]     98.82850     102.7482     96.66348     96.26008     103.1899
[14,]     99.87335     102.9351     96.69635     96.15058     103.9259
[15,]    101.03605     103.3796     96.60162     96.63562     103.3790
[16,]    101.83475     103.1900     97.63875     96.00162     103.0422
[17,]    102.10155     103.5851     97.12873     95.99579     103.0913
[18,]    102.16085     103.2966     96.26772     95.95174     103.7034
[19,]    102.35736     103.7429     96.37355     96.02805     102.8406
[20,]    102.49297     104.5301     96.44318     96.28293     103.3507
[21,]    102.36953     105.1809     96.87639     97.32625     104.0307
[22,]    103.30672     104.7480     96.90017     97.16507     104.0751
[23,]    103.55433     104.9848     97.40063     97.49375     102.6901
[24,]    103.44429     104.3553     97.35982     97.39390     102.8163
[25,]    103.23952     102.9840     97.30287     97.66737     103.2160
[26,]    103.48365     103.6117     97.96290     97.91773     103.0579
attr(,".time")
[1] 25
attr(,".num_sims")
[1] 5
attr(,".mean")
[1] 0
attr(,".sigma")
[1] 0.1
attr(,".initial_value")
[1] 100
attr(,".delta_time")
[1] 0.002739726
attr(,".return_tibble")
[1] FALSE</code></pre>
</div>
</div>
<p>Let’s visualize the GBM at different levels of volatility.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb6-3"></span>
<span id="cb6-4">gbm <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rbind</span>(</span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>(<span class="at" style="color: #657422;">.sigma =</span> <span class="fl" style="color: #AD0000;">0.05</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-6">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volatility =</span> <span class="fu" style="color: #4758AB;">as.factor</span>(<span class="st" style="color: #20794D;">"A) Sigma = 5%"</span>)),</span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>(<span class="at" style="color: #657422;">.sigma =</span> <span class="fl" style="color: #AD0000;">0.1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-8">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volatility =</span> <span class="fu" style="color: #4758AB;">as.factor</span>(<span class="st" style="color: #20794D;">"B) Sigma = 10%"</span>)),</span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>(<span class="at" style="color: #657422;">.sigma =</span> .<span class="dv" style="color: #AD0000;">15</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-10">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volatility =</span> <span class="fu" style="color: #4758AB;">as.factor</span>(<span class="st" style="color: #20794D;">"C) Sigma = 15%"</span>)),</span>
<span id="cb6-11">  <span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>(<span class="at" style="color: #657422;">.sigma =</span> .<span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-12">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">volatility =</span> <span class="fu" style="color: #4758AB;">as.factor</span>(<span class="st" style="color: #20794D;">"D) Sigma = 20%"</span>))</span>
<span id="cb6-13">)</span>
<span id="cb6-14"></span>
<span id="cb6-15">gbm <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-16">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> t, <span class="at" style="color: #657422;">y =</span> y, <span class="at" style="color: #657422;">group =</span> sim_number, <span class="at" style="color: #657422;">color =</span> sim_number)) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb6-17">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span> volatility, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-18">  <span class="fu" style="color: #4758AB;">geom_line</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-19">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-20">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-18/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <category>healthyrts</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-18/index.html</guid>
  <pubDate>Wed, 18 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Augmenting a Brownian Motion to a Time Series with {healthyR.ts}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-17/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Time series analysis is a crucial tool for forecasting and understanding trends in various industries, including finance, economics, and engineering. However, traditional time series analysis methods can be limiting, and they may not always capture the complex dynamics of real-world data. That’s where the R package <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> comes in.</p>
<p>The <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> package is a powerful tool for time series analysis that offers a wide range of functions for cleaning, transforming, and analyzing time series data. One of its standout features is the <code>ts_brownian_motion_augment()</code> function, which allows you to add a brownian motion to a given time series dataset. This powerful tool can be used to simulate more realistic and complex scenarios, making it an invaluable tool for forecasters and data analysts.</p>
<p>Brownian motion is a random walk process that can be used to model the movement of particles in a fluid. It has been widely used in mathematical finance, physics, and engineering to model the random movements of stock prices, pollutant concentrations, and other phenomena. By adding a brownian motion to a time series dataset, the <code>ts_brownian_motion_augment()</code> function allows users to capture the unpredictable and random nature of real-world data, making time series analysis more accurate and reliable.</p>
<p>The <code>ts_brownian_motion_augment()</code> function is easy to use and requires no prior knowledge of brownian motion or advanced mathematics. With just a few lines of code, users can quickly add a brownian motion to their time series dataset and begin analyzing the data with greater precision and confidence.</p>
<p>This set of functionality will be included in the next release which will be coming soon as it also speeds up the current <code>ts_brownian_motion()</code> function by 49x!</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_brownian_motion_augment</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .date_col,</span>
<span id="cb1-4">  .value_col,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.time =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">10</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.delta_time =</span> <span class="cn" style="color: #8f5902;">NULL</span></span>
<span id="cb1-8">)</span></code></pre></div>
</div>
<p>Let’s take a look at the arguments for the parameters.</p>
<ul>
<li><code>.data</code> - The data.frame/tibble being augmented.</li>
<li><code>.date_col</code> - The column that holds the date.</li>
<li><code>.value_col</code> - The value that is going to get augmented. The last value of this column becomes the initial value internally.</li>
<li><code>.time</code> - How many time steps ahead.</li>
<li><code>.num_sims</code> - How many simulations should be run.</li>
<li><code>.delta_time</code> - Time step size.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Now for an example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(tidyquant)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">library</span>(timetk)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb2-6"></span>
<span id="cb2-7">df <span class="ot" style="color: #003B4F;">&lt;-</span> FANG <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;">filter</span>(symbol <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"FB"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;">select</span>(symbol, date, adjusted) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;">filter_by_time</span>(<span class="at" style="color: #657422;">.date_var =</span> date, <span class="at" style="color: #657422;">.start_date =</span> <span class="st" style="color: #20794D;">"2016-01-01"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;">tq_mutate</span>(<span class="at" style="color: #657422;">select =</span> adjusted, <span class="at" style="color: #657422;">mutate_fun =</span> periodReturn,</span>
<span id="cb2-12">            <span class="at" style="color: #657422;">period =</span> <span class="st" style="color: #20794D;">"daily"</span>, <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"log"</span>,</span>
<span id="cb2-13">            <span class="at" style="color: #657422;">col_rename =</span> <span class="st" style="color: #20794D;">"daily_returns"</span>)</span></code></pre></div>
</div>
<p>Let’s take a look at our initial data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 252 × 4
   symbol date       adjusted daily_returns
   &lt;chr&gt;  &lt;date&gt;        &lt;dbl&gt;         &lt;dbl&gt;
 1 FB     2016-01-04    102.        0      
 2 FB     2016-01-05    103.        0.00498
 3 FB     2016-01-06    103.        0.00233
 4 FB     2016-01-07     97.9      -0.0503 
 5 FB     2016-01-08     97.3      -0.00604
 6 FB     2016-01-11     97.5       0.00185
 7 FB     2016-01-12     99.4       0.0189 
 8 FB     2016-01-13     95.4      -0.0404 
 9 FB     2016-01-14     98.4       0.0302 
10 FB     2016-01-15     95.0      -0.0352 
# … with 242 more rows</code></pre>
</div>
</div>
<p>Now let’s augment it with the brownian motion and see that data set before we visualize it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">df <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">ts_brownian_motion_augment</span>(</span>
<span id="cb5-3">    <span class="at" style="color: #657422;">.date_col =</span> date,</span>
<span id="cb5-4">    <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">50</span>,</span>
<span id="cb5-5">    <span class="at" style="color: #657422;">.value_col =</span> daily_returns,</span>
<span id="cb5-6">    <span class="at" style="color: #657422;">.delta_time =</span> <span class="fl" style="color: #AD0000;">0.00005</span></span>
<span id="cb5-7">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 5,302 × 3
   sim_number  date       daily_returns
   &lt;fct&gt;       &lt;date&gt;             &lt;dbl&gt;
 1 actual_data 2016-01-04       0      
 2 actual_data 2016-01-05       0.00498
 3 actual_data 2016-01-06       0.00233
 4 actual_data 2016-01-07      -0.0503 
 5 actual_data 2016-01-08      -0.00604
 6 actual_data 2016-01-11       0.00185
 7 actual_data 2016-01-12       0.0189 
 8 actual_data 2016-01-13      -0.0404 
 9 actual_data 2016-01-14       0.0302 
10 actual_data 2016-01-15      -0.0352 
# … with 5,292 more rows</code></pre>
</div>
</div>
<p>As you see the function preserves the names of the input columns!</p>
<p>Now, let’s see it!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">df <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">ts_brownian_motion_augment</span>(</span>
<span id="cb7-3">    <span class="at" style="color: #657422;">.date_col =</span> date,</span>
<span id="cb7-4">    <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">50</span>,</span>
<span id="cb7-5">    <span class="at" style="color: #657422;">.value_col =</span> daily_returns,</span>
<span id="cb7-6">    <span class="at" style="color: #657422;">.delta_time =</span> <span class="fl" style="color: #AD0000;">0.00005</span></span>
<span id="cb7-7">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> date, <span class="at" style="color: #657422;">y =</span> daily_returns</span>
<span id="cb7-9">             , <span class="at" style="color: #657422;">group =</span> sim_number, <span class="at" style="color: #657422;">color =</span> sim_number)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;">geom_line</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb7-14">    <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"FB Log Daily Returns for 2016"</span>,</span>
<span id="cb7-15">    <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Date"</span>,</span>
<span id="cb7-16">    <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Log Daily Returns"</span></span>
<span id="cb7-17">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-17/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <category>healthyrts</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-17/index.html</guid>
  <pubDate>Tue, 17 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Auto K-Means with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-16/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Today’s post is going to center around the automatic k-means functionality of <a href="https://www.spsanderson.com/healthyR.ai"><code>{healthyR.ai}</code></a>. I am not going to get into what it is or how it works, but rather the function call itself and how it works and what it puts out. The function is called <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl.html"><code>hai_kmeans_automl</code></a>. This function is a wrapper around the <code>h2o::h2o.kmeans()</code> function, but also does some processing to enhance the output at the end. Let’s get to it!</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_kmeans_automl</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;">.split_ratio =</span> <span class="fl" style="color: #AD0000;">0.8</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.seed =</span> <span class="dv" style="color: #AD0000;">1234</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.centers =</span> <span class="dv" style="color: #AD0000;">10</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.standardize =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.print_model_summary =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb1-8">  .predictors,</span>
<span id="cb1-9">  <span class="at" style="color: #657422;">.categorical_encoding =</span> <span class="st" style="color: #20794D;">"auto"</span>,</span>
<span id="cb1-10">  <span class="at" style="color: #657422;">.initialization_mode =</span> <span class="st" style="color: #20794D;">"Furthest"</span>,</span>
<span id="cb1-11">  <span class="at" style="color: #657422;">.max_iterations =</span> <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb1-12">)</span></code></pre></div>
</div>
<p>Now let’s go over the function arguments:</p>
<ul>
<li><code>.data</code> - The data that is to be passed for clustering.</li>
<li><code>.split_ratio</code> - The ratio for training and testing splits.</li>
<li><code>.seed</code> - The default is 1234, but can be set to any integer.</li>
<li><code>.centers</code> - The default is 1. Specify the number of clusters (groups of data) in a data set.</li>
<li><code>.standardize</code> - The default is set to TRUE. When TRUE all numeric columns will be set to zero mean and unit variance.</li>
<li><code>.print_model_summary</code> - This is a boolean and controls if the model summary is printed to the console. The default is TRUE.</li>
<li><code>.predictors</code> - This must be in the form of c(“column_1”, “column_2”, … “column_n”)</li>
<li><code>.categorical_encoding</code> - Can be one of the following:
<ul>
<li>“auto”</li>
<li>“enum”</li>
<li>“one_hot_explicit”</li>
<li>“binary”</li>
<li>“eigen”</li>
<li>“label_encoder”</li>
<li>“sort_by_response”</li>
<li>“enum_limited”</li>
</ul></li>
<li><code>.initialization_mode</code> - This can be one of the following:
<ul>
<li>“Random”</li>
<li>“Furthest (default)</li>
<li>“PlusPlus”</li>
</ul></li>
<li><code>.max_iterations</code> - The default is 100. This specifies the number of training iterations</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Time for some examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(h2o)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;">h2o.init</span>()</span>
<span id="cb2-5"></span>
<span id="cb2-6">output <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_kmeans_automl</span>(</span>
<span id="cb2-7">  <span class="at" style="color: #657422;">.data =</span> iris,</span>
<span id="cb2-8">  <span class="at" style="color: #657422;">.predictors =</span> <span class="fu" style="color: #4758AB;">c</span>(</span>
<span id="cb2-9">    <span class="st" style="color: #20794D;">"Sepal.Width"</span>, <span class="st" style="color: #20794D;">"Sepal.Length"</span>, <span class="st" style="color: #20794D;">"Petal.Width"</span>, <span class="st" style="color: #20794D;">"Petal.Length"</span></span>
<span id="cb2-10">    ),</span>
<span id="cb2-11">  <span class="at" style="color: #657422;">.standardize =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb2-12">  <span class="at" style="color: #657422;">.split_ratio =</span> .<span class="dv" style="color: #AD0000;">8</span></span>
<span id="cb2-13">)</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="fu" style="color: #4758AB;">h2o.shutdown</span>(<span class="at" style="color: #657422;">prompt =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</div>
<p>Now let’s take a look at the output. There are going to be 4 pieces of main output. Here they are:</p>
<ol type="1">
<li><code>data</code></li>
<li><code>auto_kmeans_obj</code></li>
<li><code>model_id</code></li>
<li><code>scree_plt</code></li>
</ol>
<p>Let’s take a look at each one. First the <code>data</code> output which itself has 6 different objects in it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">output<span class="sc" style="color: #5E5E5E;">$</span>data</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$splits
$splits$training_tbl
# A tibble: 123 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  
 1          5.1         3.5          1.4         0.2 setosa 
 2          4.9         3            1.4         0.2 setosa 
 3          4.7         3.2          1.3         0.2 setosa 
 4          5           3.6          1.4         0.2 setosa 
 5          5.4         3.9          1.7         0.4 setosa 
 6          4.6         3.4          1.4         0.3 setosa 
 7          5           3.4          1.5         0.2 setosa 
 8          4.4         2.9          1.4         0.2 setosa 
 9          5.4         3.7          1.5         0.2 setosa 
10          4.8         3.4          1.6         0.2 setosa 
# … with 113 more rows

$splits$validate_tbl
# A tibble: 27 × 5
   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  
 1          4.6         3.1          1.5         0.2 setosa 
 2          4.9         3.1          1.5         0.1 setosa 
 3          5.8         4            1.2         0.2 setosa 
 4          5.1         3.5          1.4         0.3 setosa 
 5          5.7         3.8          1.7         0.3 setosa 
 6          5.1         3.8          1.5         0.3 setosa 
 7          5.4         3.4          1.7         0.2 setosa 
 8          5.1         3.7          1.5         0.4 setosa 
 9          5           3.4          1.6         0.4 setosa 
10          4.7         3.2          1.6         0.2 setosa 
# … with 17 more rows


$metrics
$metrics$training_metrics
# A tibble: 2 × 3
  centroid  size within_cluster_sum_of_squares
     &lt;dbl&gt; &lt;dbl&gt;                         &lt;dbl&gt;
1        1    87                         145. 
2        2    36                          38.3

$metrics$validation_metrics
# A tibble: 2 × 3
  centroid  size within_cluster_sum_of_squares
     &lt;dbl&gt; &lt;dbl&gt;                         &lt;dbl&gt;
1        1    13                          35.7
2        2    14                          13.4

$metrics$cv_metric_summary
# A tibble: 5 × 8
  metric_name   mean    sd cv_1_valid cv_2_valid cv_3_valid cv_4_valid cv_5_va…¹
  &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;
1 betweenss     62.5 12.4        66.7       72.7       71.6       42.5      59.1
2 mse          NaN    0         NaN        NaN        NaN        NaN       NaN  
3 rmse         NaN    0         NaN        NaN        NaN        NaN       NaN  
4 tot_withinss  33.6  7.36       45.6       29.7       34.8       26.5      31.3
5 totss         96.1 17.1       112.       102.       106.        69.0      90.3
# … with abbreviated variable name ¹​cv_5_valid


$original_data
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa

[150 rows x 5 columns] 

$scree_data_tbl
# A tibble: 2 × 2
  centers   wss
    &lt;dbl&gt; &lt;dbl&gt;
1       1  745.
2       2  226.

$scoring_history_tbl
# A tibble: 6 × 6
  timestamp           duration     iterations number_of_clusters numbe…¹ withi…²
  &lt;chr&gt;               &lt;chr&gt;             &lt;dbl&gt;              &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;
1 2023-01-16 09:41:25 " 0.241 sec"          0                  0     NaN    NaN 
2 2023-01-16 09:41:25 " 0.246 sec"          1                  1     123   1003.
3 2023-01-16 09:41:25 " 0.247 sec"          2                  1       0    488 
4 2023-01-16 09:41:25 " 0.250 sec"          3                  2      26    311.
5 2023-01-16 09:41:25 " 0.251 sec"          4                  2       2    184.
6 2023-01-16 09:41:25 " 0.251 sec"          5                  2       0    183.
# … with abbreviated variable names ¹​number_of_reassigned_observations,
#   ²​within_cluster_sum_of_squares

$model_summary_tbl
# A tibble: 7 × 2
  name                           value
  &lt;chr&gt;                          &lt;dbl&gt;
1 number_of_rows                  123 
2 number_of_clusters                2 
3 number_of_categorical_columns     0 
4 number_of_iterations              5 
5 within_cluster_sum_of_squares   183.
6 total_sum_of_squares            488 
7 between_cluster_sum_of_squares  305.</code></pre>
</div>
</div>
<p>Now lets take a look at the <code>auto_kmeans_obj</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">output<span class="sc" style="color: #5E5E5E;">$</span>auto_kmeans_obj</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Model Details:
==============

H2OClusteringModel: kmeans
Model ID:  KMeans_model_R_1673880074548_1 
Model Summary: 
  number_of_rows number_of_clusters number_of_categorical_columns
1            123                  2                             0
  number_of_iterations within_cluster_sum_of_squares total_sum_of_squares
1                    5                     183.42511            488.00000
  between_cluster_sum_of_squares
1                      304.57489


H2OClusteringMetrics: kmeans
** Reported on training data. **


Total Within SS:  183.4251
Between SS:  304.5749
Total SS:  488 
Centroid Statistics: 
  centroid     size within_cluster_sum_of_squares
1        1 87.00000                     145.14706
2        2 36.00000                      38.27805

H2OClusteringMetrics: kmeans
** Reported on validation data. **


Total Within SS:  49.05625
Between SS:  53.9303
Total SS:  102.9865 
Centroid Statistics: 
  centroid     size within_cluster_sum_of_squares
1        1 13.00000                      35.67618
2        2 14.00000                      13.38007

H2OClusteringMetrics: kmeans
** Reported on cross-validation data. **
** 5-fold cross-validation on training data (Metrics computed for combined holdout predictions) **


Total Within SS:  167.8887
Between SS:  320.1113
Total SS:  488 
Centroid statistics are not available.
Cross-Validation Metrics Summary: 
                  mean        sd cv_1_valid cv_2_valid cv_3_valid cv_4_valid
betweenss    62.496490 12.417224  66.671760  72.679665  71.595474  42.470100
mse                 NA  0.000000         NA         NA         NA         NA
rmse                NA  0.000000         NA         NA         NA         NA
tot_withinss 33.577747  7.357984  45.607327  29.705257  34.811970  26.512373
totss        96.074234 17.148642 112.279080 102.384926 106.407450  68.982475
             cv_5_valid
betweenss     59.065456
mse                  NA
rmse                 NA
tot_withinss  31.251806
totss         90.317260</code></pre>
</div>
</div>
<p>The model id:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">output<span class="sc" style="color: #5E5E5E;">$</span>model_id</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "KMeans_model_R_1673880074548_1"</code></pre>
</div>
</div>
<p>And finally the <code>scree_plt</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">output<span class="sc" style="color: #5E5E5E;">$</span>scree_plt</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-16/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>kmeans</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-16/index.html</guid>
  <pubDate>Mon, 16 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>The building of {tidyAML}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-tidyaml-2023-01-13/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Yesterday I posted on <a href="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-12/">An Update to <code>{tidyAML}</code></a> where I was discussing some of my thought process and how things could potentially work for the package.</p>
<p>Today I want to showcase how the function <a href="https://www.spsanderson.com/tidyAML/reference/fast_regression_parsnip_spec_tbl.html"><code>fast_regression_parsnip_spec_tbl()</code></a> and it’s complimentary function <a href="https://www.spsanderson.com/tidyAML/reference/fast_classification_parsnip_spec_tbl.html"><code>fast_classification_parsnip_spec_tbl()</code></a> actually work or maybe don’t work for that matter.</p>
<p>We are going to pick on <code>fast_regression_parsnip_spec_tbl()</code> in today’s post. The point of it is that it creates a <code>tibble</code> of <code>parsnip</code> <strong>regression model specifications</strong>. This will create a <code>tibble</code> of 46 different regression model specifications which can be filtered. The model specs are created first and then filtered out. This will only create models for regression problems. To find all of the supported models in this package you can visit <a href="https://www.tidymodels.org/find/parsnip/">the parsnip search page</a></p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>First let’s take a look at the function call itself.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">fast_regression_parsnip_spec_tbl</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="st" style="color: #20794D;">"all"</span>, </span>
<span id="cb1-3">  <span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="st" style="color: #20794D;">"all"</span></span>
<span id="cb1-4">  )</span></code></pre></div>
</div>
<p>Now let’s take a look at the arguments:</p>
<ul>
<li><code>.parsnip_fns</code> - The default for this is set to all. This means that all of the parsnip linear regression functions will be used, for example linear_reg(), or cubist_rules. You can also choose to pass a <code>c()</code> vector like <code>c("linear_reg","cubist_rules")</code></li>
<li><code>.parsnip_eng</code> - The default for this is set to all. This means that all of the parsnip linear regression engines will be used, for example <code>lm</code>, or <code>glm</code>. You can also choose to pass a <code>c(</code>) vector like <code>c('lm', 'glm')</code></li>
</ul>
<p>The workhorse to this function is the <a href="https://www.spsanderson.com/tidyAML/reference/internal_make_spec_tbl.html"><code>internal_make_spec_tbl()</code></a> function. This is the one that will be the subject of the post. Let’s take a look at it’s inner workings, afterall this is open source.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">internal_make_spec_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(.data){</span>
<span id="cb2-2"></span>
<span id="cb2-3">  <span class="co" style="color: #5E5E5E;"># Checks ----</span></span>
<span id="cb2-4">  df <span class="ot" style="color: #003B4F;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">as_tibble</span>(.data)</span>
<span id="cb2-5"></span>
<span id="cb2-6">  nms <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unique</span>(<span class="fu" style="color: #4758AB;">names</span>(df))</span>
<span id="cb2-7"></span>
<span id="cb2-8">  <span class="cf" style="color: #003B4F;">if</span> (<span class="sc" style="color: #5E5E5E;">!</span><span class="st" style="color: #20794D;">".parsnip_engine"</span> <span class="sc" style="color: #5E5E5E;">%in%</span> nms <span class="sc" style="color: #5E5E5E;">|</span> <span class="sc" style="color: #5E5E5E;">!</span><span class="st" style="color: #20794D;">".parsnip_mode"</span> <span class="sc" style="color: #5E5E5E;">%in%</span> nms <span class="sc" style="color: #5E5E5E;">|</span> <span class="sc" style="color: #5E5E5E;">!</span><span class="st" style="color: #20794D;">".parsnip_fns"</span> <span class="sc" style="color: #5E5E5E;">%in%</span> nms){</span>
<span id="cb2-9">    rlang<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">abort</span>(</span>
<span id="cb2-10">      <span class="at" style="color: #657422;">message =</span> <span class="st" style="color: #20794D;">"The model tibble must come from the class/reg to parsnip function."</span>,</span>
<span id="cb2-11">      <span class="at" style="color: #657422;">use_cli_format =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb2-12">    )</span>
<span id="cb2-13">  }</span>
<span id="cb2-14"></span>
<span id="cb2-15">  <span class="co" style="color: #5E5E5E;"># Make tibble ----</span></span>
<span id="cb2-16">  mod_spec_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-17">    dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mutate</span>(</span>
<span id="cb2-18">      <span class="at" style="color: #657422;">model_spec =</span> purrr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">pmap</span>(</span>
<span id="cb2-19">        dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">cur_data</span>(),</span>
<span id="cb2-20">        <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">match.fun</span>(..<span class="dv" style="color: #AD0000;">3</span>)(<span class="at" style="color: #657422;">mode =</span> ..<span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">engine =</span> ..<span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb2-21">      )</span>
<span id="cb2-22">    ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;"># add .model_id column</span></span>
<span id="cb2-24">    dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">.model_id =</span> dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">row_number</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-25">    dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">select</span>(.model_id, dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">everything</span>())</span>
<span id="cb2-26"></span>
<span id="cb2-27">  <span class="co" style="color: #5E5E5E;"># Return ----</span></span>
<span id="cb2-28">  <span class="fu" style="color: #4758AB;">return</span>(mod_spec_tbl)</span>
<span id="cb2-29"></span>
<span id="cb2-30">}</span></code></pre></div>
</div>
<p>Let’s examine this (and it is currently changing form in a github issue). Firstly, we are taking in a data.frame/tibble that has to have certain names in it (this is going to change and look for a class instead). Once this determination is <code>TRUE</code> we then proceed to the meat and potatoes of it. The internal <code>mod_spec_tbl</code> is made using <code>mutate</code>, <code>pmap</code>, <code>cur_data</code> and <code>match.fun</code>. What this does essentially is the following:</p>
<ol type="1">
<li><code>mutate</code> a column called <code>model_spec</code></li>
<li>Use the <code>{purrr}</code> function <code>pmap</code> which maps over several columns in parallel to create the model spec.</li>
<li>Inside of the <code>pmap</code> we use <code>cur_data()</code> to get the current line where we match the function using <code>match.fun</code> (which takes a character string of the function, this means the library needs to be loaded) we supply the column it is in and then we supply the arguments we want.</li>
<li>We give it a numeric model id</li>
<li>We then ensure that the <code>.model_id</code> column is first.</li>
</ol>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s see it in action!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(tidyAML) <span class="co" style="color: #5E5E5E;"># Not yet available, you can install from GitHub though</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;">fast_regression_parsnip_spec_tbl</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 46 × 5
   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
       &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
 1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
 2         2 brulee          regression    linear_reg   &lt;spec[+]&gt; 
 3         3 gee             regression    linear_reg   &lt;spec[+]&gt; 
 4         4 glm             regression    linear_reg   &lt;spec[+]&gt; 
 5         5 glmer           regression    linear_reg   &lt;spec[+]&gt; 
 6         6 glmnet          regression    linear_reg   &lt;spec[+]&gt; 
 7         7 gls             regression    linear_reg   &lt;spec[+]&gt; 
 8         8 lme             regression    linear_reg   &lt;spec[+]&gt; 
 9         9 lmer            regression    linear_reg   &lt;spec[+]&gt; 
10        10 stan            regression    linear_reg   &lt;spec[+]&gt; 
# … with 36 more rows</code></pre>
</div>
</div>
<p>So we see we get a nicely generated <code>tibble</code> of output that matchs a model spec to the <code>.model_id</code> and to the appropriate <code>parsnip engine</code> and <code>mode</code></p>
<p>We can also choose the models we may want by giving either arguments to the <code>.parsnip_engine</code> parameter or <code>.parsnip_fns</code> or both.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="st" style="color: #20794D;">"linear_reg"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 11 × 5
   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
       &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
 1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
 2         2 brulee          regression    linear_reg   &lt;spec[+]&gt; 
 3         3 gee             regression    linear_reg   &lt;spec[+]&gt; 
 4         4 glm             regression    linear_reg   &lt;spec[+]&gt; 
 5         5 glmer           regression    linear_reg   &lt;spec[+]&gt; 
 6         6 glmnet          regression    linear_reg   &lt;spec[+]&gt; 
 7         7 gls             regression    linear_reg   &lt;spec[+]&gt; 
 8         8 lme             regression    linear_reg   &lt;spec[+]&gt; 
 9         9 lmer            regression    linear_reg   &lt;spec[+]&gt; 
10        10 stan            regression    linear_reg   &lt;spec[+]&gt; 
11        11 stan_glmer      regression    linear_reg   &lt;spec[+]&gt; </code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"lm"</span>,<span class="st" style="color: #20794D;">"glm"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 5
  .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
2         2 glm             regression    linear_reg   &lt;spec[+]&gt; 
3         3 glm             regression    poisson_reg  &lt;spec[+]&gt; </code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="st" style="color: #20794D;">"glm"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">pull</span>(model_spec)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
Linear Regression Model Specification (regression)

Computational engine: glm 


[[2]]
Poisson Regression Model Specification (regression)

Computational engine: glm </code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <category>purrr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-tidyaml-2023-01-13/index.html</guid>
  <pubDate>Fri, 13 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>An Update on {tidyAML}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-12/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>I have been doing a lot of work on a new package called <a href="https://www.spsanderson.com/tidyAML/"><code>{tidyAML}</code></a>. <code>{tidyAML}</code> is a new R package that makes it easy to use the <code>{tidymodels}</code> ecosystem to perform automated machine learning (AutoML). This package provides a simple and intuitive interface that allows users to quickly generate machine learning models without worrying about the underlying details. It also includes a safety mechanism that ensures that the package will fail gracefully if any required extension packages are not installed on the user’s machine. With <code>{tidyAML}</code>, users can easily build high-quality machine learning models in just a few lines of code. Whether you are a beginner or an experienced machine learning practitioner, <code>{tidyAML}</code> has something to offer.</p>
<p>Some ideas are that we should be able to generate regression models on the fly without having to actually go through the process of building the specification, especially if it is a non-tuning model, meaning we are not planing on tuning hyper-parameters like penalty and cost.</p>
<p>The idea is not to re-write the excellent work the <code>{tidymodels}</code> team has done (because it’s not possible) but rather to try and make an enhanced easy to use set of functions that do what they say and can generate many models and predictions at once.</p>
<p>This is similar to the great <code>{h2o}</code> package, but, <code>{tidyAML}</code> does not require <code>java</code> to be setup properly like <code>{h2o}</code> because <code>{tidyAML}</code> is built on <code>{tidymodels}</code>.</p>
<p>This package is not yet release, so you can only install from <em>GitHub</em> with the following:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># install.packages("devtools")</span></span>
<span id="cb1-2">devtools<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">install_github</span>(<span class="st" style="color: #20794D;">"spsanderson/tidyAML"</span>)</span></code></pre></div>
</div>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(tidyAML)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="st" style="color: #20794D;">"linear_reg"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 11 × 5
   .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
       &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
 1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
 2         2 brulee          regression    linear_reg   &lt;spec[+]&gt; 
 3         3 gee             regression    linear_reg   &lt;spec[+]&gt; 
 4         4 glm             regression    linear_reg   &lt;spec[+]&gt; 
 5         5 glmer           regression    linear_reg   &lt;spec[+]&gt; 
 6         6 glmnet          regression    linear_reg   &lt;spec[+]&gt; 
 7         7 gls             regression    linear_reg   &lt;spec[+]&gt; 
 8         8 lme             regression    linear_reg   &lt;spec[+]&gt; 
 9         9 lmer            regression    linear_reg   &lt;spec[+]&gt; 
10        10 stan            regression    linear_reg   &lt;spec[+]&gt; 
11        11 stan_glmer      regression    linear_reg   &lt;spec[+]&gt; </code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"lm"</span>,<span class="st" style="color: #20794D;">"glm"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 5
  .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
2         2 glm             regression    linear_reg   &lt;spec[+]&gt; 
3         3 glm             regression    poisson_reg  &lt;spec[+]&gt; </code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">fast_regression_parsnip_spec_tbl</span>(<span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"lm"</span>,<span class="st" style="color: #20794D;">"glm"</span>,<span class="st" style="color: #20794D;">"gee"</span>), </span>
<span id="cb6-2">                                 <span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="st" style="color: #20794D;">"linear_reg"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 5
  .model_id .parsnip_engine .parsnip_mode .parsnip_fns model_spec
      &lt;int&gt; &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;    
1         1 lm              regression    linear_reg   &lt;spec[+]&gt; 
2         2 gee             regression    linear_reg   &lt;spec[+]&gt; 
3         3 glm             regression    linear_reg   &lt;spec[+]&gt; </code></pre>
</div>
</div>
<p>As shown we can easily select the models we want either by choosing the supported parsnip function like linear_reg() or by choose the desired engine, you can also use them both in conjunction with each other!</p>
<p>Now, what if you want to create a non-tuning model spec without using the fast_regression_parsnip_spec_tbl() function. Well, you can. The function is called create_model_spec().</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">create_model_spec</span>(</span>
<span id="cb8-2"> <span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="st" style="color: #20794D;">"lm"</span>,<span class="st" style="color: #20794D;">"glm"</span>,<span class="st" style="color: #20794D;">"glmnet"</span>,<span class="st" style="color: #20794D;">"cubist"</span>),</span>
<span id="cb8-3"> <span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb8-4">      <span class="fu" style="color: #4758AB;">rep</span>(</span>
<span id="cb8-5">        <span class="st" style="color: #20794D;">"linear_reg"</span>, <span class="dv" style="color: #AD0000;">3</span>),</span>
<span id="cb8-6">        <span class="st" style="color: #20794D;">"cubist_rules"</span></span>
<span id="cb8-7">     )</span>
<span id="cb8-8"> )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 × 4
  .parsnip_engine .parsnip_mode .parsnip_fns .model_spec
  &lt;chr&gt;           &lt;chr&gt;         &lt;chr&gt;        &lt;list&gt;     
1 lm              regression    linear_reg   &lt;spec[+]&gt;  
2 glm             regression    linear_reg   &lt;spec[+]&gt;  
3 glmnet          regression    linear_reg   &lt;spec[+]&gt;  
4 cubist          regression    cubist_rules &lt;spec[+]&gt;  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">create_model_spec</span>(</span>
<span id="cb10-2"> <span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="st" style="color: #20794D;">"lm"</span>,<span class="st" style="color: #20794D;">"glm"</span>,<span class="st" style="color: #20794D;">"glmnet"</span>,<span class="st" style="color: #20794D;">"cubist"</span>),</span>
<span id="cb10-3"> <span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb10-4">      <span class="fu" style="color: #4758AB;">rep</span>(</span>
<span id="cb10-5">        <span class="st" style="color: #20794D;">"linear_reg"</span>, <span class="dv" style="color: #AD0000;">3</span>),</span>
<span id="cb10-6">        <span class="st" style="color: #20794D;">"cubist_rules"</span></span>
<span id="cb10-7">     ),</span>
<span id="cb10-8"> <span class="at" style="color: #657422;">.return_tibble =</span> <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb10-9"> )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$.parsnip_engine
$.parsnip_engine[[1]]
[1] "lm"

$.parsnip_engine[[2]]
[1] "glm"

$.parsnip_engine[[3]]
[1] "glmnet"

$.parsnip_engine[[4]]
[1] "cubist"


$.parsnip_mode
$.parsnip_mode[[1]]
[1] "regression"


$.parsnip_fns
$.parsnip_fns[[1]]
[1] "linear_reg"

$.parsnip_fns[[2]]
[1] "linear_reg"

$.parsnip_fns[[3]]
[1] "linear_reg"

$.parsnip_fns[[4]]
[1] "cubist_rules"


$.model_spec
$.model_spec[[1]]
Linear Regression Model Specification (regression)

Computational engine: lm 


$.model_spec[[2]]
Linear Regression Model Specification (regression)

Computational engine: glm 


$.model_spec[[3]]
Linear Regression Model Specification (regression)

Computational engine: glmnet 


$.model_spec[[4]]
Cubist Model Specification (regression)

Computational engine: cubist </code></pre>
</div>
</div>
<p>Now the reason we are here. Let’s take a look at the first function for modeling with tidyAML, fast_regression().</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">library</span>(recipes)</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;">library</span>(purrr)</span>
<span id="cb12-4"></span>
<span id="cb12-5">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> mtcars)</span>
<span id="cb12-6">frt_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">fast_regression</span>(</span>
<span id="cb12-7">  <span class="at" style="color: #657422;">.data =</span> mtcars, </span>
<span id="cb12-8">  <span class="at" style="color: #657422;">.rec_obj =</span> rec_obj, </span>
<span id="cb12-9">  <span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"lm"</span>,<span class="st" style="color: #20794D;">"glm"</span>),</span>
<span id="cb12-10">  <span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="st" style="color: #20794D;">"linear_reg"</span></span>
<span id="cb12-11">)</span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="fu" style="color: #4758AB;">glimpse</span>(frt_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 2
Columns: 8
$ .model_id       &lt;int&gt; 1, 2
$ .parsnip_engine &lt;chr&gt; "lm", "glm"
$ .parsnip_mode   &lt;chr&gt; "regression", "regression"
$ .parsnip_fns    &lt;chr&gt; "linear_reg", "linear_reg"
$ model_spec      &lt;list&gt; [~NULL, ~NULL, NULL, regression, TRUE, NULL, lm, TRUE]…
$ wflw            &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ fitted_wflw     &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ pred_wflw       &lt;list&gt; [&lt;tbl_df[24 x 1]&gt;], [&lt;tbl_df[24 x 1]&gt;]</code></pre>
</div>
</div>
<p>Now lets take a look at a few different things in the <code>frt_tbl</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">names</span>(frt_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] ".model_id"       ".parsnip_engine" ".parsnip_mode"   ".parsnip_fns"   
[5] "model_spec"      "wflw"            "fitted_wflw"     "pred_wflw"      </code></pre>
</div>
</div>
<p>Let’s look at a single model spec.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">frt_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(model_spec) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear Regression Model Specification (regression)

Computational engine: lm </code></pre>
</div>
</div>
<p>Now the <code>wflw</code> column.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">frt_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(wflw) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: lm </code></pre>
</div>
</div>
<p>The fitted wflw object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">frt_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(fitted_wflw) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────

Call:
stats::lm(formula = ..y ~ ., data = data)

Coefficients:
(Intercept)          cyl         disp           hp         drat           wt  
   11.77621      0.59296      0.01626     -0.03191     -0.55350     -5.30785  
       qsec           vs           am         gear         carb  
    0.97840      2.64023      1.68549      0.87059      0.58785  </code></pre>
</div>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">frt_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(fitted_wflw) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-2">  broom<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">glance</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb22-3">  <span class="fu" style="color: #4758AB;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 1
Columns: 12
$ r.squared     &lt;dbl&gt; 0.9085669
$ adj.r.squared &lt;dbl&gt; 0.8382337
$ sigma         &lt;dbl&gt; 2.337527
$ statistic     &lt;dbl&gt; 12.91804
$ p.value       &lt;dbl&gt; 3.367361e-05
$ df            &lt;dbl&gt; 10
$ logLik        &lt;dbl&gt; -47.07551
$ AIC           &lt;dbl&gt; 118.151
$ BIC           &lt;dbl&gt; 132.2877
$ deviance      &lt;dbl&gt; 71.03241
$ df.residual   &lt;int&gt; 13
$ nobs          &lt;int&gt; 24</code></pre>
</div>
</div>
<p>And finally the predictions (this one I am probably going to change up).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">frt_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(pred_wflw) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 24 × 1
   .pred
   &lt;dbl&gt;
 1  17.4
 2  28.4
 3  17.2
 4  10.7
 5  13.4
 6  17.0
 7  22.8
 8  14.3
 9  22.4
10  15.5
# … with 14 more rows</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <category>automl</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-12/index.html</guid>
  <pubDate>Thu, 12 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Reflecting on the Past Year: A LinkedIn Year in Review</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>As we close the door on another year, it’s always a good time to look back and reflect on the past 12 months. And what better way to do that than with a LinkedIn Year in Review?</p>
<p>Whether you’re a job seeker, a business owner, or just someone who enjoys staying connected with their professional network, LinkedIn is an invaluable tool for staying up to date with the latest trends and opportunities in your field. And as we wrap up 2022, now is the perfect time to take a look at how you’ve been using LinkedIn and see where you can improve.</p>
<p>So what did your LinkedIn Year in Review have in store for you? Here are just a few of the things you might have seen:</p>
<ul>
<li>A summary of your activity on LinkedIn, including how many people you’ve connected with, how many posts you’ve shared, and how many likes, comments, and shares your content has received.</li>
<li>A breakdown of the industries and job titles of the people you’ve connected with, which can give you a good idea of the types of people you’ve been spending the most time interacting with.</li>
<li>A summary of your skills and endorsements, as well as which skills are most in demand in your industry.</li>
</ul>
<p>All of these insights can be incredibly valuable as you start planning for the year ahead. With this information in hand, you can start looking for new opportunities, strengthening your existing relationships, and building new ones. And with the start of the new year, it’s a perfect time to set new goals and improve your LinkedIn profile.</p>
<p>If you haven’t yet checked out your LinkedIn Year in Review, don’t wait any longer! Log in to your account and take a look. And while you’re there, why not make a resolution to be more active on LinkedIn in the coming year? The more you put into your professional network, the more you’ll get out of it.</p>
<p>So let’s make the most of this new year, take advantage of the insights from your LinkedIn Year in Review, and make the most of your professional network. Here’s to a successful, connected, and productive 2023!</p>
<p>I have done a lot of work on this already, it is not comprehensive but it is enough to understand what is happening, and I used a lot of functionality from the <a href="https://www.spsanderson.com/healthyverse/"><code>{healthyverse}</code></a></p>
<p>Don’t forget you can also see my package and GitHub development wrap up <a href="https://www.spsanderson.com/year_review_2022.html">on my year in review 2022</a></p>
</section>
<section id="analysis" class="level1">
<h1>Analysis</h1>
<p>I will do this in chunks, as it will be easier to digest. First of course you have to get your data. I am not going to go over this process as there are many a great link just a search away.</p>
<p>Let’s load in those libraries and read the files in.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(readxl)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(lubridate)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(timetk)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(tidyr)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(janitor)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">library</span>(stringr)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb1-10"></span>
<span id="cb1-11">fp <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"linkedin_content.xlsx"</span></span>
<span id="cb1-12"></span>
<span id="cb1-13">engagement_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_excel</span>(fp, <span class="at" style="color: #657422;">sheet =</span> <span class="st" style="color: #20794D;">"ENGAGEMENT"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-14">  <span class="fu" style="color: #4758AB;">clean_names</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-15">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">date =</span> <span class="fu" style="color: #4758AB;">mdy</span>(date)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb1-16">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Engagement Rate</span><span class="st" style="color: #20794D;">`</span> <span class="ot" style="color: #003B4F;">=</span> (engagements <span class="sc" style="color: #5E5E5E;">/</span> impressions) <span class="sc" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">100</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-17">  <span class="fu" style="color: #4758AB;">filter_by_time</span>(</span>
<span id="cb1-18">    <span class="at" style="color: #657422;">.date_var =</span> date,</span>
<span id="cb1-19">    <span class="at" style="color: #657422;">.end_date =</span> <span class="st" style="color: #20794D;">"2022-12-31"</span></span>
<span id="cb1-20">  )</span>
<span id="cb1-21"></span>
<span id="cb1-22">top_posts_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_excel</span>(fp, <span class="at" style="color: #657422;">sheet =</span> <span class="st" style="color: #20794D;">"TOP POSTS"</span>, <span class="at" style="color: #657422;">skip =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;">clean_names</span>()</span>
<span id="cb1-24"></span>
<span id="cb1-25">followers_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_excel</span>(fp, <span class="at" style="color: #657422;">sheet =</span> <span class="st" style="color: #20794D;">"FOLLOWERS"</span>, <span class="at" style="color: #657422;">skip =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;">clean_names</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-27">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">date =</span> <span class="fu" style="color: #4758AB;">mdy</span>(date)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-28">  <span class="fu" style="color: #4758AB;">filter_by_time</span>(</span>
<span id="cb1-29">    <span class="at" style="color: #657422;">.date_var =</span> date,</span>
<span id="cb1-30">    <span class="at" style="color: #657422;">.end_date =</span> <span class="st" style="color: #20794D;">"2022-12-31"</span></span>
<span id="cb1-31">  )</span>
<span id="cb1-32"></span>
<span id="cb1-33">demographics_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read_excel</span>(fp, <span class="at" style="color: #657422;">sheet =</span> <span class="st" style="color: #20794D;">"DEMOGRAPHICS"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-34">  <span class="fu" style="color: #4758AB;">clean_names</span>()</span></code></pre></div>
</div>
<p>Now let’s take a look at that data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">glimpse</span>(engagement_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 362
Columns: 4
$ date              &lt;date&gt; 2022-01-04, 2022-01-05, 2022-01-06, 2022-01-07, 202…
$ impressions       &lt;dbl&gt; 3088, 3911, 3303, 3134, 1118, 799, 3068, 1954, 2663,…
$ engagements       &lt;dbl&gt; 31, 56, 51, 42, 8, 4, 43, 20, 33, 43, 14, 41, 5, 17,…
$ `Engagement Rate` &lt;dbl&gt; 1.0038860, 1.4318589, 1.5440509, 1.3401404, 0.715563…</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">glimpse</span>(top_posts_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 50
Columns: 5
$ post_url_1  &lt;chr&gt; "https://www.linkedin.com/feed/update/urn:li:activity:6999…
$ engagements &lt;dbl&gt; 241, 136, 123, 117, 117, 115, 107, 106, 104, 104, 95, 81, …
$ x3          &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…
$ post_url_4  &lt;chr&gt; "https://www.linkedin.com/feed/update/urn:li:activity:6999…
$ impressions &lt;dbl&gt; 52300, 33903, 30752, 29887, 25953, 24139, 23769, 18522, 18…</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">glimpse</span>(followers_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 362
Columns: 2
$ date          &lt;date&gt; 2022-01-04, 2022-01-05, 2022-01-06, 2022-01-07, 2022-01…
$ new_followers &lt;dbl&gt; 10, 10, 12, 5, 12, 13, 9, 8, 11, 4, 9, 6, 7, 9, 10, 11, …</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">glimpse</span>(demographics_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 30
Columns: 3
$ top_demographics &lt;chr&gt; "Job titles", "Job titles", "Job titles", "Job titles…
$ value            &lt;chr&gt; "Data Scientist", "Data Analyst", "Software Engineer"…
$ percentage       &lt;chr&gt; "0.054587073624134064", "0.035217467695474625", "0.02…</code></pre>
</div>
</div>
<p>We are really only going to focus on the <strong>engagement_tbl</strong> and the <strong>followers_tbl</strong> as this is more of a time series analysis.</p>
<p>Ok, so let’s see how my <strong>Impressions</strong>, <strong>Engagements</strong>, and <strong>Engagement Rate</strong> have been.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">engagement_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> <span class="sc" style="color: #5E5E5E;">-</span>date) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">name =</span> <span class="fu" style="color: #4758AB;">str_to_title</span>(name)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;">plot_time_series</span>(</span>
<span id="cb10-5">    <span class="at" style="color: #657422;">.facet_vars =</span> name,</span>
<span id="cb10-6">    <span class="at" style="color: #657422;">.value =</span> value,</span>
<span id="cb10-7">    <span class="at" style="color: #657422;">.date_var =</span> date,</span>
<span id="cb10-8">    <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb10-9">    <span class="at" style="color: #657422;">.smooth =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb10-10">    <span class="at" style="color: #657422;">.title =</span> <span class="st" style="color: #20794D;">"LinkedIn Stats Time Series Plot"</span></span>
<span id="cb10-11">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb10-13">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-14">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb10-15">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb10-17">    <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span></span>
<span id="cb10-18">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-19">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">followers_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">plot_time_series</span>(</span>
<span id="cb11-3">    <span class="at" style="color: #657422;">.value =</span> new_followers,</span>
<span id="cb11-4">    <span class="at" style="color: #657422;">.date_var =</span> date,</span>
<span id="cb11-5">    <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb11-6">    <span class="at" style="color: #657422;">.smooth =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb11-7">    <span class="at" style="color: #657422;">.title =</span> <span class="st" style="color: #20794D;">"LinkedIn Stats Time Series Plot - New Followers"</span></span>
<span id="cb11-8">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb11-10">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb11-12">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-13">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb11-14">    <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span></span>
<span id="cb11-15">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-3-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>You will notice that I placed a blue line where I started my <a href="https://t.me/steveondata">telegram channel <span class="citation" data-cites="steveondata">@steveondata</span></a> and a red line where I started this <a href="https://www.spsanderson.com/steveondata/">blog</a>. So far, not bad, it looks like the telegram channel helped a little bit but writing on the blog seems to maybe been helping the most.</p>
<p>Let’s look at a cumulative view of things.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">engagement_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;">summarise_by_time</span>(</span>
<span id="cb12-3">    <span class="at" style="color: #657422;">.date_var =</span> date,</span>
<span id="cb12-4">    <span class="at" style="color: #657422;">.by =</span> <span class="st" style="color: #20794D;">"month"</span>,</span>
<span id="cb12-5">    <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Impressions</span><span class="st" style="color: #20794D;">`</span> <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">sum</span>(impressions),</span>
<span id="cb12-6">    <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Engagements</span><span class="st" style="color: #20794D;">`</span> <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">sum</span>(engagements)</span>
<span id="cb12-7">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;">mutate</span>(</span>
<span id="cb12-9">    <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Impressions</span><span class="st" style="color: #20794D;">`</span> <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">cumsum</span>(<span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Impressions</span><span class="st" style="color: #20794D;">`</span>),</span>
<span id="cb12-10">    <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Engagements</span><span class="st" style="color: #20794D;">`</span> <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">cumsum</span>(<span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Engagements</span><span class="st" style="color: #20794D;">`</span>)</span>
<span id="cb12-11">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-12">  <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">12</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> <span class="sc" style="color: #5E5E5E;">-</span>date) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-14">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">name =</span> <span class="fu" style="color: #4758AB;">str_to_title</span>(name)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-15">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> date, <span class="at" style="color: #657422;">y =</span> value)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-16">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-17">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span> name, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-18">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb12-19">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-20">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb12-21">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-22">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb12-23">    <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Date"</span>,</span>
<span id="cb12-24">    <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Value"</span>,</span>
<span id="cb12-25">    <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"LinkedIn Stats Time Series Plot"</span>,</span>
<span id="cb12-26">    <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span></span>
<span id="cb12-27">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-28">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">followers_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-2">    <span class="fu" style="color: #4758AB;">summarise_by_time</span>(</span>
<span id="cb13-3">    <span class="at" style="color: #657422;">.date_var =</span> date,</span>
<span id="cb13-4">    <span class="at" style="color: #657422;">.by =</span> <span class="st" style="color: #20794D;">"month"</span>,</span>
<span id="cb13-5">    <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Followers</span><span class="st" style="color: #20794D;">`</span> <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">sum</span>(new_followers)</span>
<span id="cb13-6">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;">mutate</span>(</span>
<span id="cb13-8">    <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Followers</span><span class="st" style="color: #20794D;">`</span> <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">cumsum</span>(<span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Followers</span><span class="st" style="color: #20794D;">`</span>)</span>
<span id="cb13-9">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-10">  <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">12</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> date, <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Cumulative Followers</span><span class="st" style="color: #20794D;">`</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;">geom_col</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb13-14">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-15">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb13-16">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-17">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb13-18">    <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Date"</span>,</span>
<span id="cb13-19">    <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Value"</span>,</span>
<span id="cb13-20">    <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"LinkedIn Stats Time Series Plot - New Followers"</span>,</span>
<span id="cb13-21">    <span class="at" style="color: #657422;">subtitle =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span></span>
<span id="cb13-22">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-23">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-4-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>It seems again that writing blog posts and sharing them daily has a nice effect. Now we are going to look at some <strong>Value</strong>, <strong>Velocity</strong>, and <strong>Acceleration</strong> plots with the <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_vva_plot.html?q=ts_vva#ref-usage"><code>ts_vva_plot()</code></a> function from the <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts</code>}</a> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">ts_vva_plot</span>(engagement_tbl, date, engagements)<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>static_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb14-3">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb14-5">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">ts_vva_plot</span>(engagement_tbl, date, impressions)<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>static_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb15-3">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb15-5">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-5-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">ts_vva_plot</span>(engagement_tbl, date, <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Engagement Rate</span><span class="st" style="color: #20794D;">`</span>)<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>static_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb16-3">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb16-5">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-5-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;">ts_vva_plot</span>(followers_tbl, date, new_followers)<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>static_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb17-3">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb17-5">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb17-6">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-5-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now some simple moving average plots using the function <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_sma_plot.html?q=ts_sma#null"><code>ts_sma_plot()</code></a> again from the <code>{healthyR.ts}</code> library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;">ts_sma_plot</span>(engagement_tbl, date, impressions, <span class="at" style="color: #657422;">.sma_order =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">14</span>, <span class="dv" style="color: #AD0000;">21</span>, <span class="dv" style="color: #AD0000;">30</span>))<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>static_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb18-4">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb18-5">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb18-6">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb18-7">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;">ts_sma_plot</span>(engagement_tbl, date, engagements, <span class="at" style="color: #657422;">.sma_order =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">14</span>, <span class="dv" style="color: #AD0000;">21</span>, <span class="dv" style="color: #AD0000;">30</span>))<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>static_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb19-4">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb19-6">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb19-7">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-6-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;">ts_sma_plot</span>(engagement_tbl, date, <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Engagement Rate</span><span class="st" style="color: #20794D;">`</span>, <span class="at" style="color: #657422;">.sma_order =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">14</span>, <span class="dv" style="color: #AD0000;">21</span>, <span class="dv" style="color: #AD0000;">30</span>))<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>static_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb20-4">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-5">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb20-6">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb20-7">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-6-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;">ts_sma_plot</span>(followers_tbl, date, new_followers, <span class="at" style="color: #657422;">.sma_order =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">14</span>, <span class="dv" style="color: #AD0000;">21</span>, <span class="dv" style="color: #AD0000;">30</span>))<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>static_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-07-07"</span>),</span>
<span id="cb21-4">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"blue"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-5">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-10-05"</span>), </span>
<span id="cb21-6">             <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb21-7">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">caption =</span> <span class="st" style="color: #20794D;">"Blue Line - Start Telegram Channel, Red Line - Start Blog"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-6-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now some calendar heatmaps with <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_calendar_heatmap_plot.html?q=calendar#null"><code>ts_calendar_heatmap_plot()</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;">ts_calendar_heatmap_plot</span>(engagement_tbl, date, impressions, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Calendar Heatmap - Impressions"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;">ts_calendar_heatmap_plot</span>(engagement_tbl, date, engagements, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Calendar Heatmap - Engagemets"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-7-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;">ts_calendar_heatmap_plot</span>(engagement_tbl, date, <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Engagement Rate</span><span class="st" style="color: #20794D;">`</span>, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Calendar Heatmap - Engagement Rate"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-7-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;">ts_calendar_heatmap_plot</span>(followers_tbl, date, new_followers, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Calendar Heatmap - New Followers"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-7-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Some seasonal diagnostics using <a href="https://business-science.github.io/timetk/"><code>{timetk}</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;">plot_seasonal_diagnostics</span>(engagement_tbl</span>
<span id="cb26-2">                          , date, engagements, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb26-3">                          <span class="at" style="color: #657422;">.feature_set =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"wday.lbl"</span>, <span class="st" style="color: #20794D;">"month.lbl"</span>),</span>
<span id="cb26-4">                          <span class="at" style="color: #657422;">.title =</span> <span class="st" style="color: #20794D;">"Seasonal Diagnostics - Engagements"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb26-5">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;">plot_seasonal_diagnostics</span>(engagement_tbl</span>
<span id="cb27-2">                          , date, impressions, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb27-3">                          <span class="at" style="color: #657422;">.feature_set =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"wday.lbl"</span>, <span class="st" style="color: #20794D;">"month.lbl"</span>),</span>
<span id="cb27-4">                          <span class="at" style="color: #657422;">.title =</span> <span class="st" style="color: #20794D;">"Seasonal Diagnostics - Impressions"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb27-5">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-8-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;">plot_seasonal_diagnostics</span>(engagement_tbl</span>
<span id="cb28-2">                          , date, <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Engagement Rate</span><span class="st" style="color: #20794D;">`</span>, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb28-3">                          <span class="at" style="color: #657422;">.feature_set =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"wday.lbl"</span>, <span class="st" style="color: #20794D;">"month.lbl"</span>),</span>
<span id="cb28-4">                          <span class="at" style="color: #657422;">.title =</span> <span class="st" style="color: #20794D;">"Seasonal Diagnostics - Engagement Rate"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb28-5">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-8-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;">plot_seasonal_diagnostics</span>(</span>
<span id="cb29-2">  followers_tbl, date, new_followers, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, </span>
<span id="cb29-3">  <span class="at" style="color: #657422;">.feature_set =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"wday.lbl"</span>,<span class="st" style="color: #20794D;">"month.lbl"</span>), </span>
<span id="cb29-4">  <span class="at" style="color: #657422;">.title =</span> <span class="st" style="color: #20794D;">"Seasonal Diagnostics - New Followers"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb29-5">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-8-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Finally some lag correlation plots with <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_lag_correlation.html?q=ts_lag#null"><code>ts_lag_correlation()</code></a>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;">ts_lag_correlation</span>(engagement_tbl, date, engagements, <span class="at" style="color: #657422;">.lags =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">14</span>, <span class="dv" style="color: #AD0000;">21</span>, <span class="dv" style="color: #AD0000;">28</span>))<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>lag_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb30-2">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Lag Correlation Plot - Engagements"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb30-3">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;">ts_lag_correlation</span>(engagement_tbl, date, impressions, <span class="at" style="color: #657422;">.lags =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">14</span>, <span class="dv" style="color: #AD0000;">21</span>, <span class="dv" style="color: #AD0000;">28</span>))<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>lag_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb31-2">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Lag Correlation Plot - Impressions"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb31-3">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-9-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;">ts_lag_correlation</span>(engagement_tbl, date, <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">Engagement Rate</span><span class="st" style="color: #20794D;">`</span>, <span class="at" style="color: #657422;">.lags =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">14</span>, <span class="dv" style="color: #AD0000;">21</span>, <span class="dv" style="color: #AD0000;">28</span>))<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>lag_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb32-2">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Lag Correlation Plot - Engagement Rate"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb32-3">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-9-3.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;">ts_lag_correlation</span>(followers_tbl, date, new_followers, <span class="at" style="color: #657422;">.lags =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">7</span>, <span class="dv" style="color: #AD0000;">14</span>, <span class="dv" style="color: #AD0000;">21</span>, <span class="dv" style="color: #AD0000;">28</span>))<span class="sc" style="color: #5E5E5E;">$</span>plots<span class="sc" style="color: #5E5E5E;">$</span>lag_plot <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;">labs</span>(<span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Lag Correlation Plot - New Followers"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb33-3">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"lm"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index_files/figure-html/unnamed-chunk-9-4.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>linkedin</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2021-01-11/index.html</guid>
  <pubDate>Wed, 11 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Optimal Break Points for Histograms with {healthyR}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-10/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Histogram binning is a technique used in data visualization to group continuous data into a set of discrete bins, or intervals. The purpose of histogram binning is to represent the distribution of a dataset in a graphical format, allowing for easy identification of patterns and outliers. However, there are several challenges that can arise when working with histogram binning.</p>
<p>One major challenge is determining the appropriate number of bins to use. If there are too few bins, the histogram may not accurately represent the underlying distribution of the data. On the other hand, if there are too many bins, the histogram may become cluttered and difficult to interpret. To overcome this challenge, there are several strategies that can be employed, such as the Scott’s normal reference rule, Freedman-Diaconis rule, or the Rice rule, to determine the optimal number of bins.</p>
<p>Another challenge with histogram binning is dealing with outliers. If a dataset has outliers, they can greatly skew the distribution of the data and make it difficult to interpret the histogram. One strategy to handle outliers is to use a log-scale on the x-axis, which can help to reduce their impact on the histogram. Alternatively, one could remove the outlier data points before creating the histogram.</p>
<p>A further challenge is to choose the width of the bin that best represents the data. Too narrow bins might cause overfitting and too wide bins may cause loss of information. Different widths of bin can lead to a different representation of the data and hence a different conclusion. To overcome this, one could use the Freedman-Diaconis rule which take into consideration the range and the size of the sample to provide a robust and adaptive way to choose the width of the bin</p>
<p>A simple solution to these challenges is the <a href="https://www.spsanderson.com/healthyR/reference/opt_bin.html"><code>opt_bin()</code></a> function in the <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> library for R. This function uses an optimal binning algorithm to automatically determine the number of bins and bin widths that best represent the data. This can save a lot of time and effort when working with histograms and can help to ensure that the resulting histograms are accurate and easy to interpret.</p>
<p>In conclusion, histogram binning is a useful technique for visualizing the distribution of data, but it can be challenging to determine the appropriate number of bins and bin widths. Strategies such as Scott’s normal reference rule, Freedman-Diaconis rule, or the Rice rule can be used to determine the optimal number of bins. Outliers and bin width selection also can be challenges to take into account, and a function such as opt_bin() in the {healthyR} library can be used to overcome these challenges and create high-quality histograms with ease.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">opt_bin</span>(.data, .value_col, <span class="at" style="color: #657422;">.iters =</span> <span class="dv" style="color: #AD0000;">30</span>)</span></code></pre></div>
</div>
<p>Here are the arguments that get passed to the parameters.</p>
<ul>
<li><code>.data</code> - The data set in question</li>
<li><code>.value_col</code> - The column that holds the values</li>
<li><code>.iters</code> - How many times the cost function loop should run</li>
</ul>
<p>Now under I will provide some code and it’s explanation under the hood that exaplains how this works.</p>
<p>Here is a breakdown of what each part of the code is doing:</p>
<ul>
<li><code>n &lt;- 2:iters</code>: this line creates a sequence of numbers starting at 2 and ending at the number specified by the variable “iters”</li>
<li><code>c &lt;- base::numeric(base::length(n))</code> and <code>d &lt;- c</code>: These lines create two empty numeric vectors (arrays) called “c” and “d” with the same length as the sequence “n”</li>
<li><code>for (i in 1:length(n)) {...}</code>: This is a for loop that iterates through each number in the sequence “n”</li>
<li><code>d[i] &lt;- diff(range( data ) ) / n[i]</code>: Inside the loop, this line calculates the width of the bin for the current iteration by dividing the range of the data by the current number in the sequence “n”</li>
<li><code>hp &lt;- graphics::hist(data, breaks = edges, plot = FALSE) and ki &lt;- hp$counts</code>: This creates a histogram of the data using the current bin width and then gets the count of data points in each bin</li>
<li><code>k &lt;- mean(ki)</code> and <code>v &lt;- sum((ki-k)^2/n[i])</code>: this line uses the counts from the previous step to calculate the average count across all bins (k) and the variance of the counts across all bins (v)</li>
<li><code>c[i] &lt;- (2*k - v)/d[i]^2</code>: this line calculates the cost function for the current bin width, which is based on k and v</li>
<li><code>idx &lt;- which.min(c)</code> and <code>opt_d &lt;- d[idx]</code>: this line finds the index in the “c” vector where the cost function is the lowest and stores that value in the variable “idx”</li>
<li><code>edges &lt;- seq(min(data), max(data), length = n[idx]) and edges &lt;- tibble::as_tibble(edges)</code>: this line creates a new sequence of numbers representing the edges of the bins with the optimal bin width</li>
<li><code>return(edges)</code>: this line returns the sequence of optimal bin edges that the function has determined</li>
</ul>
<p>Overall, this function will return an optimal set of bin edges for a histogram of the given data, the function uses an iterative process and consider the balance between the number of bins and the width of the bins to find the optimal width of the bins for the histogram. This could save a lot of time and effort for the data analysts as it can help to ensure that the resulting histograms are accurate and easy to interpret.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s look at some examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb2-3"></span>
<span id="cb2-4">df_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">1000</span>, <span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">sd =</span> <span class="dv" style="color: #AD0000;">1</span>)</span>
<span id="cb2-5">df_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> df_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;">as_tibble</span>()</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;">opt_bin</span>(</span>
<span id="cb2-9">  <span class="at" style="color: #657422;">.data =</span> df_tbl,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;">.value_col =</span> value</span>
<span id="cb2-11">  , <span class="at" style="color: #657422;">.iters =</span> <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb2-12">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 1
   value
   &lt;dbl&gt;
1 -3.04 
2 -1.81 
3 -0.585
4  0.644
5  1.87 
6  3.10 </code></pre>
</div>
</div>
<p>Now lets user a smaller <code>n</code> to see how the output changes</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">opt_bin</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;">.data =</span> <span class="fu" style="color: #4758AB;">as_tibble</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">50</span>)),</span>
<span id="cb4-3">  value,</span>
<span id="cb4-4">  <span class="dv" style="color: #AD0000;">100</span></span>
<span id="cb4-5">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 11 × 1
     value
     &lt;dbl&gt;
 1 -1.69  
 2 -1.24  
 3 -0.797 
 4 -0.351 
 5  0.0944
 6  0.540 
 7  0.986 
 8  1.43  
 9  1.88  
10  2.32  
11  2.77  </code></pre>
</div>
</div>
<p>Let’s visualize.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">rn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">50</span>)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">hist</span>(rn)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-10/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now let’s use <code>opt_bin()</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">hist</span>(rn, <span class="at" style="color: #657422;">breaks =</span> <span class="fu" style="color: #4758AB;">opt_bin</span>(<span class="fu" style="color: #4758AB;">as_tibble</span>(rn), value) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>())</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-10/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyr</category>
  <category>histograms</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-10/index.html</guid>
  <pubDate>Tue, 10 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>New Release of {healthyR.ts}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-09/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Hello R users!</p>
<p>I am excited to announce a new update to the <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> package: the <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_brownian_motion.html"><code>ts_brownian_motion()</code></a> function.</p>
<p>This function allows you to easily simulate brownian motion, also known as a Wiener process, using just a few parameters. You can specify the length of the simulation using the ‘.time’ parameter, the number of simulations to run using the ‘.num_sims’ parameter, the time step size (standard deviation) using the ‘.delta_time’ parameter, and the initial value (which is set to 0 by default) using the ‘.initial_value’ parameter.</p>
<p>But what is brownian motion, and why might you want to simulate it? Brownian motion is a random process that describes the movement of particles suspended in a fluid. It is named after the botanist Robert Brown, who observed the random movement of pollen grains suspended in water under a microscope in the 19th century.</p>
<p>In finance, brownian motion is often used to model the movement of stock prices over time. By simulating brownian motion, you can get a sense of how prices might fluctuate in the future, and use this information to inform your investment decisions.</p>
<p>I hope that the <code>ts_brownian_motion()</code> function will be a useful tool for anyone interested in simulating brownian motion, whether for financial modeling or any other application. Give it a try and see what you can do with it!</p>
<p>Right now the function is a bit slow at <code>.num_sims</code> &gt; 500 so I am working on optimizing it. I will also later on be introducing the Geometric Brownian Motion to <code>{healthyR.ts}</code></p>
<p>As always, we welcome feedback and suggestions for new features and improvements. Thank you for using the {healthyR.ts} package, and happy simulating!</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full function call:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_brownian_motion</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">.time =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">10</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.delta_time =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.initial_value =</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb1-6">)</span></code></pre></div>
</div>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>A simple example of the output.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">ts_brownian_motion</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1,010 × 3
   sim_number     t     y
   &lt;fct&gt;      &lt;dbl&gt; &lt;dbl&gt;
 1 1              0  0   
 2 1              1  1.46
 3 1              2  2.68
 4 1              3  2.78
 5 1              4  3.07
 6 1              5  3.43
 7 1              6  3.05
 8 1              7  4.43
 9 1              8  6.04
10 1              9  6.89
# … with 1,000 more rows</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrts</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-09/index.html</guid>
  <pubDate>Mon, 09 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Brownian Motion</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-2023-01-06/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p><a href="https://en.wikipedia.org/wiki/Brownian_motion">Brownian motion</a>, also known as the random motion of particles suspended in a fluid, is a phenomenon that was first described by Scottish botanist Robert Brown in 1827. It occurs when a particle is subjected to a series of random collisions with the molecules in the fluid.</p>
<p>The motion of the particle can be described mathematically using the following equation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%20%5Cfrac%7Bdx_t%7D%7Bdt%7D%20=%20%5Cmu%20+%20%5Csigma%20%5Ccdot%20W_t%20"></p>
<p>Where <img src="https://latex.codecogs.com/png.latex?x_t"> represents the position of the particle at time t, <img src="https://latex.codecogs.com/png.latex?%5Cmu"> is the drift coefficient, <img src="https://latex.codecogs.com/png.latex?%5Csigma"> is the diffusion coefficient, and <img src="https://latex.codecogs.com/png.latex?W_t"> is a Wiener process (a type of random process).</p>
<p>Brownian motion has a number of important applications, including in the field of finance. It is used to model the random movements of financial assets, such as stocks, over time. It can also be used to estimate the volatility of an asset, as well as to calculate the prices of financial derivatives such as options.</p>
<p>In physics, Brownian motion is used to study the behavior of small particles suspended in a fluid, as well as to understand the properties of fluids at the molecular level. It has also been used to study the motion of biological molecules, such as proteins, within cells.</p>
<p>Overall, Brownian motion is a fundamental concept that has wide-ranging applications in a variety of fields, including finance, physics, and biology.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at a function to produce such results. This type of functionality will be coming to my R packages <a href="https://www.spsanderson.com/TidyDensity/"><code>{TidyDensity}</code></a> and to <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'dplyr'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:stats':

    filter, lag</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: package 'ggplot2' was built under R version 4.2.2</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">library</span>(forcats)</span>
<span id="cb7-2"></span>
<span id="cb7-3">brownian_motion <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(T, N, delta_t) {</span>
<span id="cb7-4">  <span class="co" style="color: #5E5E5E;"># T: total time of the simulation (in seconds)</span></span>
<span id="cb7-5">  <span class="co" style="color: #5E5E5E;"># N: number of simulations to generate</span></span>
<span id="cb7-6">  <span class="co" style="color: #5E5E5E;"># delta_t: time step size (in seconds)</span></span>
<span id="cb7-7">  </span>
<span id="cb7-8">  <span class="co" style="color: #5E5E5E;"># Initialize empty data.frame to store the simulations</span></span>
<span id="cb7-9">  sim_data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>()</span>
<span id="cb7-10">  </span>
<span id="cb7-11">  <span class="co" style="color: #5E5E5E;"># Generate N simulations</span></span>
<span id="cb7-12">  <span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>N) {</span>
<span id="cb7-13">    <span class="co" style="color: #5E5E5E;"># Initialize the current simulation with a starting value of 0</span></span>
<span id="cb7-14">    sim <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb7-15">    </span>
<span id="cb7-16">    <span class="co" style="color: #5E5E5E;"># Generate the brownian motion values for each time step</span></span>
<span id="cb7-17">    <span class="cf" style="color: #003B4F;">for</span> (t <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>(T <span class="sc" style="color: #5E5E5E;">/</span> delta_t)) {</span>
<span id="cb7-18">      sim <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(sim, sim[t] <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">sd =</span> <span class="fu" style="color: #4758AB;">sqrt</span>(delta_t)))</span>
<span id="cb7-19">    }</span>
<span id="cb7-20">    </span>
<span id="cb7-21">    <span class="co" style="color: #5E5E5E;"># Bind the time steps, simulation values, and simulation number together</span></span>
<span id="cb7-22">    <span class="co" style="color: #5E5E5E;"># in a data.frame and add it to the result</span></span>
<span id="cb7-23">    sim_data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rbind</span>(</span>
<span id="cb7-24">      sim_data, </span>
<span id="cb7-25">      <span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb7-26">        <span class="at" style="color: #657422;">t =</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">0</span>, T, delta_t), </span>
<span id="cb7-27">        <span class="at" style="color: #657422;">y =</span> sim, </span>
<span id="cb7-28">        <span class="at" style="color: #657422;">sim_number =</span> i</span>
<span id="cb7-29">        )</span>
<span id="cb7-30">      ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-31">      <span class="fu" style="color: #4758AB;">as_tibble</span>()</span>
<span id="cb7-32">  }</span>
<span id="cb7-33">  </span>
<span id="cb7-34">  sim_data <span class="ot" style="color: #003B4F;">&lt;-</span> sim_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb7-35">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">sim_number =</span> <span class="fu" style="color: #4758AB;">as_factor</span>(sim_number)</span>
<span id="cb7-36">                  )</span>
<span id="cb7-37">  <span class="fu" style="color: #4758AB;">return</span>(sim_data)</span>
<span id="cb7-38">}</span></code></pre></div>
</div>
<p>We see that the internal variable <code>sim</code> is set to 0, this in the future will be set to an initial value that a user can provide.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s take a look at a couple of examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">brownian_motion</span>(<span class="dv" style="color: #AD0000;">40</span>, <span class="dv" style="color: #AD0000;">25</span>, .<span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> t, <span class="at" style="color: #657422;">y =</span> y, <span class="at" style="color: #657422;">group =</span> sim_number, <span class="at" style="color: #657422;">color =</span> sim_number)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;">geom_line</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, </span>
<span id="cb8-5">              <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">group =</span> <span class="cn" style="color: #8f5902;">FALSE</span>), </span>
<span id="cb8-6">              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>, </span>
<span id="cb8-7">              <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb8-10">    <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Time t"</span>,</span>
<span id="cb8-11">    <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Brownian Motion Value y"</span></span>
<span id="cb8-12">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-2023-01-06/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now lets take a look at the change in a few different ones at the same time.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">bm_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rbind</span>(</span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">brownian_motion</span>(<span class="dv" style="color: #AD0000;">40</span>, <span class="dv" style="color: #AD0000;">25</span>, .<span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-3">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"20% Volatility"</span>),</span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;">brownian_motion</span>(<span class="dv" style="color: #AD0000;">40</span>, <span class="dv" style="color: #AD0000;">25</span>, .<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-5">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"10% Volatility"</span>),</span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;">brownian_motion</span>(<span class="dv" style="color: #AD0000;">40</span>, <span class="dv" style="color: #AD0000;">25</span>, .<span class="dv" style="color: #AD0000;">05</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-7">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"5% Volatility"</span>),</span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;">brownian_motion</span>(<span class="dv" style="color: #AD0000;">40</span>, <span class="dv" style="color: #AD0000;">25</span>, .<span class="dv" style="color: #AD0000;">025</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-9">    <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">label =</span> <span class="st" style="color: #20794D;">"2.5% Volatility"</span>)</span>
<span id="cb9-10">)</span>
<span id="cb9-11"></span>
<span id="cb9-12"><span class="fu" style="color: #4758AB;">ggplot</span>(bm_tbl, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> t, <span class="at" style="color: #657422;">y =</span> y, <span class="at" style="color: #657422;">group =</span> sim_number, <span class="at" style="color: #657422;">color =</span> sim_number)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;">geom_line</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-14">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span> label, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-15">    <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">se =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, </span>
<span id="cb9-16">              <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">group =</span> <span class="cn" style="color: #8f5902;">FALSE</span>), </span>
<span id="cb9-17">              <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>, </span>
<span id="cb9-18">              <span class="at" style="color: #657422;">linetype =</span> <span class="st" style="color: #20794D;">"dashed"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-19">  <span class="fu" style="color: #4758AB;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-20">    <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb9-21">    <span class="at" style="color: #657422;">x =</span> <span class="st" style="color: #20794D;">"Time t"</span>,</span>
<span id="cb9-22">    <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Brownian Motion Value y"</span></span>
<span id="cb9-23">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-24">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-2023-01-06/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>weeklytip</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-2023-01-06/index.html</guid>
  <pubDate>Fri, 06 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>More Randomwalks with {TidyDensity}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-05/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Random walks are a mathematical concept that have found various applications in fields such as economics, biology, and computer science. At a high level, a random walk refers to a process in which a set of objects move in a random direction at each time step. The path that the objects take over time forms a random walk.</p>
<p>One of the main uses of random walks is in modeling the behavior of stock prices. In the stock market, prices can be thought of as performing a random walk because they are influenced by a variety of unpredictable factors such as market trends, news events, and investor sentiment. By modeling stock prices as a random walk, it is possible to make predictions about future price movements and to understand the underlying factors that drive these movements.</p>
<p>Another application of random walks is in studying the movement patterns of animals. For example, biologists have used random walk models to understand the foraging behavior of ants and the migration patterns of animals such as birds and whales.</p>
<p>One interesting aspect of random walks is that they can be generated with different statistical distributions. For example, a random walk could be generated with a standard normal distribution (mean = 0, standard deviation = 1) or with a distribution that has a different mean and standard deviation. By looking at random walks with different distributional parameters, it is possible to understand how the underlying distribution affects the overall shape and pattern of the random walk.</p>
<p>To generate random walks with different distributional parameters, you can use the R package <a href="https://www.spsanderson.com/TidyDensity/"><code>{TidyDensity}</code></a>. This package provides functions for generating random walks and visualizing them using density plots. With <code>{TidyDensity}</code>, you can easily compare random walks with different mean and standard deviation values to see how these parameters affect the shape of the random walk.</p>
<p>In summary, random walks are a useful tool for modeling the behavior of various systems over time. They are particularly useful for understanding the movement patterns of stock prices and animals, and can be generated with different statistical distributions using the R package <code>{TidyDensity}</code>.</p>
</section>
<section id="functions" class="level1">
<h1>Functions</h1>
<p>There are a couple of functions that we are going to use, below you will find them with their full function call and parameter arguments.</p>
<p><a href="https://www.spsanderson.com/TidyDensity/reference/tidy_multi_single_dist.html"><code>tidy_multi_single_dist()</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">tidy_multi_single_dist</span>(<span class="at" style="color: #657422;">.tidy_dist =</span> <span class="cn" style="color: #8f5902;">NULL</span>, <span class="at" style="color: #657422;">.param_list =</span> <span class="fu" style="color: #4758AB;">list</span>())</span></code></pre></div>
</div>
<ul>
<li><code>.tidy_dist</code> - The type of tidy_ distribution that you want to run. You can only choose one.</li>
<li><code>.param_list</code> - This must be a list() object of the parameters that you want to pass through to the TidyDensity tidy_ distribution function.</li>
</ul>
<p><a href="https://www.spsanderson.com/TidyDensity/reference/tidy_random_walk.html"><code>tidy_random_walk()</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">tidy_random_walk</span>(</span>
<span id="cb2-2">  .data,</span>
<span id="cb2-3">  <span class="at" style="color: #657422;">.initial_value =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;">.sample =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb2-5">  <span class="at" style="color: #657422;">.replace =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;">.value_type =</span> <span class="st" style="color: #20794D;">"cum_prod"</span></span>
<span id="cb2-7">)</span></code></pre></div>
</div>
<ul>
<li><code>.data</code> - The data that is being passed from a tidy_ distribution function.</li>
<li><code>.initial_value</code> - The default is 0, this can be set to whatever you want.</li>
<li><code>.sample</code> - This is a boolean value TRUE/FALSE. The default is FALSE. If set to TRUE then the y value from the tidy_ distribution function is sampled.</li>
<li><code>.replace</code> - This is a boolean value TRUE/FALSE. The default is FALSE. If set to TRUE AND .sample is set to TRUE then the replace parameter of the sample function will be set to TRUE.</li>
<li><code>.value_type</code> - This can take one of three different values for now. These are the following:
<ul>
<li>“cum_prod” - This will take the cumprod of y</li>
<li>“cum_sum” - This will take the cumsum of y</li>
</ul></li>
</ul>
<p><a href="https://www.spsanderson.com/TidyDensity/reference/tidy_random_walk_autoplot.html?q=tidy_random#null"><code>tidy_random_walk_autoplot()</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">tidy_random_walk_autoplot</span>(</span>
<span id="cb3-2">  .data,</span>
<span id="cb3-3">  <span class="at" style="color: #657422;">.line_size =</span> <span class="dv" style="color: #AD0000;">1</span>,</span>
<span id="cb3-4">  <span class="at" style="color: #657422;">.geom_rug =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb3-5">  <span class="at" style="color: #657422;">.geom_smooth =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb3-6">  <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb3-7">)</span></code></pre></div>
</div>
<ul>
<li><code>.data</code> - The data passed in from a tidy_distribution function like tidy_normal()</li>
<li><code>.line_size</code> - The size param ggplot</li>
<li><code>.geom_rug</code> - A Boolean value of TRUE/FALSE, FALSE is the default. TRUE will return the use of ggplot2::geom_rug()</li>
<li><code>.geom_smooth</code> - A Boolean value of TRUE/FALSE, FALSE is the default. TRUE will return the use of ggplot2::geom_smooth() The aes parameter of group is set to FALSE. This ensures a single smoothing band returned with SE also set to FALSE. Color is set to ‘black’ and linetype is ‘dashed’.</li>
<li><code>.interactive</code> - A Boolean value of TRUE/FALSE, FALSE is the default. TRUE will return an interactive plotly plot.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">library</span>(TidyDensity)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;">tidy_multi_single_dist</span>(</span>
<span id="cb4-6">  <span class="at" style="color: #657422;">.tidy_dist =</span> <span class="st" style="color: #20794D;">"tidy_normal"</span>,</span>
<span id="cb4-7">  <span class="at" style="color: #657422;">.param_list =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb4-8">    <span class="at" style="color: #657422;">.n =</span> <span class="dv" style="color: #AD0000;">250</span>,</span>
<span id="cb4-9">    <span class="at" style="color: #657422;">.mean =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb4-10">    <span class="at" style="color: #657422;">.sd =</span> <span class="fu" style="color: #4758AB;">c</span>(.<span class="dv" style="color: #AD0000;">025</span>, .<span class="dv" style="color: #AD0000;">05</span>, .<span class="dv" style="color: #AD0000;">1</span>, .<span class="dv" style="color: #AD0000;">15</span>),</span>
<span id="cb4-11">    <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">25</span></span>
<span id="cb4-12">  )</span>
<span id="cb4-13">) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;">tidy_random_walk</span>(<span class="at" style="color: #657422;">.initial_value =</span> <span class="dv" style="color: #AD0000;">1000</span>, <span class="at" style="color: #657422;">.value_type =</span> <span class="st" style="color: #20794D;">"cum_prod"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;">tidy_random_walk_autoplot</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-16">  <span class="fu" style="color: #4758AB;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;">~</span> dist_name, <span class="at" style="color: #657422;">scales =</span> <span class="st" style="color: #20794D;">"free"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-05/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidydensity</category>
  <category>randomwalk</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-05/index.html</guid>
  <pubDate>Thu, 05 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Calendar Heatmap with {healthyR.ts}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-03/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Calendar heatmaps are a useful visualization tool for understanding patterns and trends in time series data. They are particularly useful for displaying daily data, as they allow for the visualization of multiple weeks or months at a time.</p>
<p>The <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_calendar_heatmap_plot.html"><code>ts_calendar_heatmap_plot()</code></a> function from the R library <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> is a powerful tool for creating calendar heatmaps. This function takes in a time series object and creates a heatmap plot with daily data plotted on the calendar. The intensity of the color on each day corresponds to the value of the data for that day.</p>
<p>One application of calendar heatmaps is in understanding daily patterns in data such as website traffic or sales. For example, a business owner could use a calendar heatmap to identify trends in their daily sales data and make informed decisions about their operations. Similarly, a website owner could use a calendar heatmap to understand the daily traffic patterns on their site and optimize their content strategy accordingly.</p>
<p>Calendar heatmaps are also useful for identifying anomalies or unusual patterns in time series data. For example, a calendar heatmap could be used to identify unexpected spikes or dips in daily sales data, or to identify unusual patterns in website traffic.</p>
<p>In addition to their practical applications, calendar heatmaps are also aesthetically pleasing and can be a fun way to visualize data. The <code>ts_calendar_heatmap_plot()</code> function allows for customization of the color palette and other visual options, making it easy to create visually appealing heatmaps.</p>
<p>Overall, calendar heatmaps are a useful tool for understanding patterns and trends in daily time series data. The <code>ts_calendar_heatmap_plot()</code> function from the R library healthyR.ts is a powerful tool for creating calendar heatmaps and can be easily customized to suit the needs of the user.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_calendar_heatmap_plot</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .date_col,</span>
<span id="cb1-4">  .value_col,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.low =</span> <span class="st" style="color: #20794D;">"red"</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.high =</span> <span class="st" style="color: #20794D;">"green"</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.plt_title =</span> <span class="st" style="color: #20794D;">""</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb1-9">)</span></code></pre></div>
</div>
<p>Now let’s see the arguments to the parameters.</p>
<ul>
<li><code>.data</code> - The time-series data with a date column and value column.</li>
<li><code>.date_col</code> - The column that has the datetime values</li>
<li><code>.value_col</code> - The column that has the values</li>
<li><code>.low</code> - The color for the low value, must be quoted like “red”. The default is “red”</li>
<li><code>.high</code> - The color for the high value, must be quoted like “green”. The default is “green”</li>
<li><code>.plt_title</code> - The title of the plot</li>
<li><code>.interactive</code> - Default is TRUE to get an interactive plot using <code>plotly::ggplotly()</code>. It can be set to FALSE to get a ggplot plot.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Now for an example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb2-2"></span>
<span id="cb2-3">data_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb2-4">  <span class="at" style="color: #657422;">date_col =</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(</span>
<span id="cb2-5">    <span class="at" style="color: #657422;">from =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2020-01-01"</span>),</span>
<span id="cb2-6">    <span class="at" style="color: #657422;">to   =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-06-01"</span>),</span>
<span id="cb2-7">    <span class="at" style="color: #657422;">length.out =</span> <span class="dv" style="color: #AD0000;">365</span><span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">+</span> <span class="dv" style="color: #AD0000;">180</span></span>
<span id="cb2-8">    ),</span>
<span id="cb2-9">  <span class="at" style="color: #657422;">value =</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">365</span><span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">180</span>, <span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb2-10">)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;">ts_calendar_heatmap_plot</span>(</span>
<span id="cb2-13">  <span class="at" style="color: #657422;">.data          =</span> data_tbl</span>
<span id="cb2-14">  , <span class="at" style="color: #657422;">.date_col    =</span> date_col</span>
<span id="cb2-15">  , <span class="at" style="color: #657422;">.value_col   =</span> value</span>
<span id="cb2-16">  , <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb2-17">)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-79ad5db235adcd0c3f9b" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-79ad5db235adcd0c3f9b">{"x":{"data":[{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.53582960001236,0.9055612661178,0.0879285681251628,0.485724824527508,null],[0.90789165861799,0.128059839496082,0.402440153003584,0.484386592934255,0],[0.0464874010872062,0.622990140618475,0.262114297225939,0.422097585947642,0.353069968866042],[0.720995875221412,0.0495450605486274,0.64431076302879,0.644472170938109,0.787980881733792],[0.617384830778752,null,0.5714452119473,0.478536887711031,0.700830296263903],[1,null,0.240784896412399,0.701278605593714,0.41520917711537],[0.580969854417558,null,0.821731172298675,0.536751061146998,0.495592911209548]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 100.14373","week_of_month: 2<br />week_day: Sat<br />value: 101.62156","week_of_month: 3<br />week_day: Sat<br />value:  98.35345","week_of_month: 4<br />week_day: Sat<br />value:  99.94346",null],["week_of_month: 1<br />week_day: Fri<br />value: 101.63087","week_of_month: 2<br />week_day: Fri<br />value:  98.51386","week_of_month: 3<br />week_day: Fri<br />value:  99.61057","week_of_month: 4<br />week_day: Fri<br />value:  99.93811","week_of_month: 5<br />week_day: Fri<br />value:  98.00200"],["week_of_month: 1<br />week_day: Thu<br />value:  98.18781","week_of_month: 2<br />week_day: Thu<br />value: 100.49211","week_of_month: 3<br />week_day: Thu<br />value:  99.04968","week_of_month: 4<br />week_day: Thu<br />value:  99.68914","week_of_month: 5<br />week_day: Thu<br />value:  99.41323"],["week_of_month: 1<br />week_day: Wed<br />value: 100.88384","week_of_month: 2<br />week_day: Wed<br />value:  98.20003","week_of_month: 3<br />week_day: Wed<br />value: 100.57733","week_of_month: 4<br />week_day: Wed<br />value: 100.57797","week_of_month: 5<br />week_day: Wed<br />value: 101.15158"],["week_of_month: 5<br />week_day: Wed<br />value: 100.46971",null,"week_of_month: 2<br />week_day: Tue<br />value: 100.28608","week_of_month: 3<br />week_day: Tue<br />value:  99.91473","week_of_month: 4<br />week_day: Tue<br />value: 100.80324"],["week_of_month: 5<br />week_day: Tue<br />value: 101.99903",null,"week_of_month: 2<br />week_day: Mon<br />value:  98.96442","week_of_month: 3<br />week_day: Mon<br />value: 100.80503","week_of_month: 4<br />week_day: Mon<br />value:  99.66160"],["week_of_month: 5<br />week_day: Mon<br />value: 100.32415",null,"week_of_month: 2<br />week_day: Sun<br />value: 101.28648","week_of_month: 3<br />week_day: Sun<br />value: 100.14741","week_of_month: 4<br />week_day: Sun<br />value:  99.98290"]],"colorscale":[[0,"#F25B00"],[0.0464874010872062,"#EF6400"],[0.0495450605486274,"#EF6500"],[0.0879285681251628,"#ED6C00"],[0.128059839496082,"#EA7300"],[0.240784896412399,"#E28400"],[0.262114297225939,"#E08700"],[0.353069968866042,"#D99400"],[0.377076024951881,"#D79700"],[0.402440153003584,"#D59B00"],[0.41520917711537,"#D39C00"],[0.422097585947642,"#D39D00"],[0.478536887711031,"#CEA500"],[0.484386592934255,"#CDA500"],[0.485724824527508,"#CDA500"],[0.495592911209548,"#CCA700"],[0.53582960001236,"#C8AC00"],[0.536751061146998,"#C8AC00"],[0.5714452119473,"#C4B000"],[0.580969854417558,"#C3B100"],[0.617384830778752,"#BFB600"],[0.622990140618475,"#BFB600"],[0.64431076302879,"#BCB900"],[0.644472170938109,"#BCB900"],[0.700830296263903,"#B6BF00"],[0.701278605593714,"#B5BF00"],[0.720995875221412,"#B3C200"],[0.787980881733792,"#AAC900"],[0.821731172298675,"#A5CD00"],[0.9055612661178,"#98D700"],[0.90789165861799,"#98D700"],[1,"#87E100"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[null,0.797403614904379,0.432746544765692,0.50425576973489,0.240404233062821],[0.530732320399612,null,0.537726581212692,0.443104028993983,0.70690402459908],[0.60569073587144,null,0.972038643334627,0.389951665922169,0.490807254119484],[0.62433237402613,null,0.650612680245087,1,0.520139847609262],[0.525855377365477,null,0.297531122853593,0.540162648496684,0.797752466718279],[0.441991357142226,null,0.403419102915003,0.813006820535115,0],[0.346926466303719,0.706830772745885,0.528702756031959,0.464862545156493,0.655695377240545]],"text":[[null,"week_of_month: 2<br />week_day: Sat<br />value: 101.12300","week_of_month: 3<br />week_day: Sat<br />value:  99.72112","week_of_month: 4<br />week_day: Sat<br />value:  99.99603","week_of_month: 5<br />week_day: Sat<br />value:  98.98167"],["week_of_month: 5<br />week_day: Sat<br />value: 100.09781",null,"week_of_month: 2<br />week_day: Fri<br />value: 100.12470","week_of_month: 3<br />week_day: Fri<br />value:  99.76093","week_of_month: 4<br />week_day: Fri<br />value: 100.77509"],["week_of_month: 5<br />week_day: Fri<br />value: 100.38598",null,"week_of_month: 2<br />week_day: Thu<br />value: 101.79437","week_of_month: 3<br />week_day: Thu<br />value:  99.55660","week_of_month: 4<br />week_day: Thu<br />value:  99.94432"],["week_of_month: 5<br />week_day: Thu<br />value: 100.45765",null,"week_of_month: 2<br />week_day: Wed<br />value: 100.55868","week_of_month: 3<br />week_day: Wed<br />value: 101.90187","week_of_month: 4<br />week_day: Wed<br />value: 100.05709"],["week_of_month: 5<br />week_day: Wed<br />value: 100.07906",null,"week_of_month: 2<br />week_day: Tue<br />value:  99.20129","week_of_month: 3<br />week_day: Tue<br />value: 100.13407","week_of_month: 4<br />week_day: Tue<br />value: 101.12435"],["week_of_month: 5<br />week_day: Tue<br />value:  99.75666",null,"week_of_month: 2<br />week_day: Mon<br />value:  99.60837","week_of_month: 3<br />week_day: Mon<br />value: 101.18299","week_of_month: 4<br />week_day: Mon<br />value:  98.05746"],["week_of_month: 5<br />week_day: Mon<br />value:  99.39119","week_of_month: 1<br />week_day: Sun<br />value: 100.77481","week_of_month: 2<br />week_day: Sun<br />value: 100.09001","week_of_month: 3<br />week_day: Sun<br />value:  99.84458","week_of_month: 4<br />week_day: Sun<br />value: 100.57822"]],"colorscale":[[0,"#F15E00"],[0.240404233062821,"#E18500"],[0.297531122853593,"#DD8D00"],[0.346926466303719,"#D99300"],[0.389951665922169,"#D69900"],[0.403419102915003,"#D59B00"],[0.432746544765692,"#D29E00"],[0.441991357142226,"#D1A000"],[0.443104028993983,"#D1A000"],[0.464862545156493,"#CFA200"],[0.490807254119484,"#CDA500"],[0.50425576973489,"#CCA700"],[0.519866495296975,"#CAA900"],[0.520139847609262,"#CAA900"],[0.525855377365477,"#CAAA00"],[0.528702756031959,"#C9AA00"],[0.530732320399612,"#C9AA00"],[0.537726581212692,"#C8AB00"],[0.540162648496684,"#C8AB00"],[0.60569073587144,"#C2B300"],[0.62433237402613,"#C0B500"],[0.650612680245087,"#BDB800"],[0.655695377240545,"#BCB900"],[0.706830772745885,"#B6BF00"],[0.70690402459908,"#B6BF00"],[0.797403614904379,"#ABC900"],[0.797752466718279,"#ABC900"],[0.813006820535115,"#A9CA00"],[0.972038643334627,"#91DB00"],[1,"#8CDE00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x2","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.0170953110390581,0.167791365615811,0.946430318241339,0.691203617824311,null],[0.615129379236803,0.27534427361634,0.388190213903275,0.642475619291558,0.597191259176953],[null,0.515516042823307,0.511906266975077,0.631764158186866,0.599862774717338],[null,0.116527503168632,0.370906039543303,0.342474350260864,0.409662943800136],[null,0.269653586022565,0.331698902631345,0.575302431962073,0.583170227569695],[0.317217885649093,0.352305296285636,0,0.223624064608335,0.519781634789003],[0.693311088192679,null,0.226918772122142,0.157833167015216,0.362373756698744]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  98.34656","week_of_month: 2<br />week_day: Sat<br />value:  99.00038","week_of_month: 3<br />week_day: Sat<br />value: 102.37867","week_of_month: 4<br />week_day: Sat<br />value: 101.27132",null],["week_of_month: 1<br />week_day: Fri<br />value: 100.94126","week_of_month: 1<br />week_day: Fri<br />value:  99.46703","week_of_month: 2<br />week_day: Fri<br />value:  99.95663","week_of_month: 3<br />week_day: Fri<br />value: 101.05990","week_of_month: 4<br />week_day: Fri<br />value: 100.86343"],[null,"week_of_month: 1<br />week_day: Thu<br />value: 100.50906","week_of_month: 2<br />week_day: Thu<br />value: 100.49340","week_of_month: 3<br />week_day: Thu<br />value: 101.01343","week_of_month: 4<br />week_day: Thu<br />value: 100.87502"],[null,"week_of_month: 1<br />week_day: Wed<br />value:  98.77797","week_of_month: 2<br />week_day: Wed<br />value:  99.88164","week_of_month: 3<br />week_day: Wed<br />value:  99.75828","week_of_month: 4<br />week_day: Wed<br />value: 100.04980"],[null,"week_of_month: 1<br />week_day: Tue<br />value:  99.44234","week_of_month: 2<br />week_day: Tue<br />value:  99.71153","week_of_month: 3<br />week_day: Tue<br />value: 100.76846","week_of_month: 4<br />week_day: Tue<br />value: 100.80259"],["week_of_month: 5<br />week_day: Tue<br />value:  99.64870","week_of_month: 1<br />week_day: Mon<br />value:  99.80094","week_of_month: 2<br />week_day: Mon<br />value:  98.27239","week_of_month: 3<br />week_day: Mon<br />value:  99.24263","week_of_month: 4<br />week_day: Mon<br />value: 100.52757"],["week_of_month: 5<br />week_day: Mon<br />value: 101.28046",null,"week_of_month: 2<br />week_day: Sun<br />value:  99.25692","week_of_month: 3<br />week_day: Sun<br />value:  98.95718","week_of_month: 4<br />week_day: Sun<br />value:  99.84462"]],"colorscale":[[0,"#EE6800"],[0.0170953110390581,"#ED6B00"],[0.116527503168632,"#E57D00"],[0.157833167015216,"#E28400"],[0.167791365615811,"#E18600"],[0.223624064608335,"#DC8E00"],[0.226918772122142,"#DC8F00"],[0.269653586022565,"#D89500"],[0.27534427361634,"#D89600"],[0.317217885649093,"#D49C00"],[0.331698902631345,"#D29E00"],[0.342474350260864,"#D1A000"],[0.352305296285636,"#D0A100"],[0.362373756698744,"#CFA200"],[0.370906039543303,"#CEA400"],[0.388190213903275,"#CDA600"],[0.409662943800136,"#CAA900"],[0.440137537355323,"#C7AD00"],[0.511906266975077,"#BFB600"],[0.515516042823307,"#BEB700"],[0.519781634789003,"#BEB700"],[0.575302431962073,"#B7BE00"],[0.583170227569695,"#B6BF00"],[0.597191259176953,"#B4C100"],[0.599862774717338,"#B3C200"],[0.615129379236803,"#B1C300"],[0.631764158186866,"#AFC500"],[0.642475619291558,"#ADC700"],[0.691203617824311,"#A6CD00"],[0.693311088192679,"#A6CD00"],[0.946430318241339,"#71EB00"],[1,"#5FF100"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x3","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.210638240485087,0.184295521752303,0.363838679190295,0.730579424853966,null],[0.405391809521089,0,0.687722517228139,1,null],[0.291515677528237,0.479669580251544,0.198776986849164,0.243343250344818,0.413239799297529],[0.517586878578212,0.493572119815013,0.448947166431423,0.472344657837527,0.608327314900336],[0.146692786375224,null,0.629231511645883,0.7593349205445,0.587629185128595],[0.613796348802084,null,0.464678375106633,0.22136300377404,0.589390220155719],[0.581749419150906,0.641100521157877,null,0.774041646471282,0.277015932605937]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  98.62782","week_of_month: 2<br />week_day: Sat<br />value:  98.50294","week_of_month: 3<br />week_day: Sat<br />value:  99.35412","week_of_month: 4<br />week_day: Sat<br />value: 101.09277",null],["week_of_month: 1<br />week_day: Fri<br />value:  99.55112","week_of_month: 2<br />week_day: Fri<br />value:  97.62922","week_of_month: 3<br />week_day: Fri<br />value: 100.88960","week_of_month: 4<br />week_day: Fri<br />value: 102.37005",null],["week_of_month: 1<br />week_day: Thu<br />value:  99.01125","week_of_month: 2<br />week_day: Thu<br />value:  99.90325","week_of_month: 3<br />week_day: Thu<br />value:  98.57159","week_of_month: 4<br />week_day: Thu<br />value:  98.78287","week_of_month: 5<br />week_day: Thu<br />value:  99.58832"],["week_of_month: 1<br />week_day: Wed<br />value: 100.08301","week_of_month: 2<br />week_day: Wed<br />value:  99.96916","week_of_month: 2<br />week_day: Wed<br />value:  99.75760","week_of_month: 3<br />week_day: Wed<br />value:  99.86853","week_of_month: 4<br />week_day: Wed<br />value: 100.51320"],["week_of_month: 5<br />week_day: Wed<br />value:  98.32467",null,"week_of_month: 2<br />week_day: Tue<br />value: 100.61230","week_of_month: 3<br />week_day: Tue<br />value: 101.22910","week_of_month: 4<br />week_day: Tue<br />value: 100.41507"],["week_of_month: 5<br />week_day: Tue<br />value: 100.53913",null,"week_of_month: 2<br />week_day: Mon<br />value:  99.83218","week_of_month: 3<br />week_day: Mon<br />value:  98.67867","week_of_month: 4<br />week_day: Mon<br />value: 100.42342"],["week_of_month: 5<br />week_day: Mon<br />value: 100.38720","week_of_month: 1<br />week_day: Sun<br />value: 100.66857",null,"week_of_month: 3<br />week_day: Sun<br />value: 101.29882","week_of_month: 4<br />week_day: Sun<br />value:  98.94251"]],"colorscale":[[0,"#F84500"],[0.146692786375224,"#ED6A00"],[0.184295521752303,"#EA7200"],[0.198776986849164,"#E97500"],[0.210638240485087,"#E87700"],[0.22136300377404,"#E77900"],[0.243343250344818,"#E57D00"],[0.277015932605937,"#E28300"],[0.291515677528237,"#E18600"],[0.363838679190295,"#DA9200"],[0.405391809521089,"#D69900"],[0.413239799297529,"#D59A00"],[0.433114195808478,"#D39D00"],[0.448947166431423,"#D1A000"],[0.464678375106633,"#D0A200"],[0.472344657837527,"#CFA300"],[0.479669580251544,"#CEA400"],[0.493572119815013,"#CCA600"],[0.517586878578212,"#C9AA00"],[0.581749419150906,"#C2B300"],[0.587629185128595,"#C1B400"],[0.589390220155719,"#C1B400"],[0.608327314900336,"#BEB700"],[0.613796348802084,"#BDB800"],[0.629231511645883,"#BBBA00"],[0.641100521157877,"#BABC00"],[0.687722517228139,"#B3C200"],[0.730579424853966,"#ACC800"],[0.7593349205445,"#A7CC00"],[0.774041646471282,"#A5CE00"],[1,"#71EB00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x4","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[1,2,3,4,5,6,7],"z":[[0.353383777621536,0.859588598154016,0.252678512137616,0.692488444846373,0.426456332009858,null],[1,0.729421837594697,0.755094687543405,0.62158143639443,0.596544308845794,null],[null,0,0.41838555901954,0.800946453469536,0.48012412633029,null],[null,0.440932369942612,0.344631545475547,0.603039670490143,0.0478572131468898,null],[null,0.588737613829678,0.558651373072043,0.794779951693114,0.0570335675041629,null],[null,0.673669459412038,0.421104690577839,0.317999272926623,0.501240251096242,null],[null,0.281393318337904,0.784985473714793,0.804491163255457,0.81212100797375,0.113782764519781]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.23865","week_of_month: 2<br />week_day: Sat<br />value: 101.45398","week_of_month: 3<br />week_day: Sat<br />value:  98.79793","week_of_month: 4<br />week_day: Sat<br />value: 100.72269","week_of_month: 5<br />week_day: Sat<br />value:  99.55844",null],["week_of_month: 1<br />week_day: Fri<br />value: 102.06846","week_of_month: 2<br />week_day: Fri<br />value: 100.88432","week_of_month: 3<br />week_day: Fri<br />value: 100.99668","week_of_month: 4<br />week_day: Fri<br />value: 100.41238","week_of_month: 5<br />week_day: Fri<br />value: 100.30281",null],[null,"week_of_month: 2<br />week_day: Thu<br />value:  97.69213","week_of_month: 3<br />week_day: Thu<br />value:  99.52312","week_of_month: 4<br />week_day: Thu<br />value: 101.19734","week_of_month: 5<br />week_day: Thu<br />value:  99.79331",null],[null,"week_of_month: 2<br />week_day: Wed<br />value:  99.62179","week_of_month: 3<br />week_day: Wed<br />value:  99.20035","week_of_month: 4<br />week_day: Wed<br />value: 100.33123","week_of_month: 5<br />week_day: Wed<br />value:  97.90157",null],[null,"week_of_month: 2<br />week_day: Tue<br />value: 100.26864","week_of_month: 3<br />week_day: Tue<br />value: 100.13697","week_of_month: 4<br />week_day: Tue<br />value: 101.17035","week_of_month: 5<br />week_day: Tue<br />value:  97.94172",null],[null,"week_of_month: 2<br />week_day: Mon<br />value: 100.64033","week_of_month: 3<br />week_day: Mon<br />value:  99.53502","week_of_month: 4<br />week_day: Mon<br />value:  99.08380","week_of_month: 5<br />week_day: Mon<br />value:  99.88572",null],[null,"week_of_month: 2<br />week_day: Sun<br />value:  98.92360","week_of_month: 2<br />week_day: Sun<br />value: 101.12749","week_of_month: 3<br />week_day: Sun<br />value: 101.21285","week_of_month: 4<br />week_day: Sun<br />value: 101.24624","week_of_month: 5<br />week_day: Sun<br />value:  98.19008"]],"colorscale":[[0,"#F74900"],[0.0478572131468898,"#F45600"],[0.0570335675041629,"#F35800"],[0.113782764519781,"#EF6400"],[0.252678512137616,"#E57E00"],[0.281393318337904,"#E38300"],[0.317999272926623,"#DF8900"],[0.344631545475547,"#DD8D00"],[0.353383777621536,"#DC8E00"],[0.388721048863339,"#D99300"],[0.41838555901954,"#D69800"],[0.421104690577839,"#D69800"],[0.426456332009858,"#D69900"],[0.440932369942612,"#D49B00"],[0.48012412633029,"#D0A100"],[0.501240251096242,"#CEA400"],[0.558651373072043,"#C8AC00"],[0.588737613829678,"#C5B000"],[0.596544308845794,"#C4B100"],[0.603039670490143,"#C3B100"],[0.62158143639443,"#C1B400"],[0.673669459412038,"#BABB00"],[0.692488444846373,"#B8BD00"],[0.729421837594697,"#B3C200"],[0.755094687543405,"#AFC500"],[0.784985473714793,"#ABC900"],[0.794779951693114,"#A9CA00"],[0.800946453469536,"#A9CB00"],[0.804491163255457,"#A8CB00"],[0.81212100797375,"#A7CC00"],[0.859588598154016,"#9FD200"],[1,"#83E300"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x5","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.0845953473696466,0.307737622838511,0.29668121331785,0.871052707484655,null],[0.503646038493663,0.027108604005871,0.445168016987701,0.0213370542079135,0.347277853161],[null,0.456999930328043,0.605827001539965,0.336991182349412,0.569163770354714],[null,0.391619570000852,0.797417733622442,0.611874285757851,0.36645091795354],[null,0.689561870642004,0.398314920059799,0.26659014175537,0.356894751954668],[0.199870202800398,0.645505032058977,0.200880776247652,0.6080126520298,0],[0.356976895443611,0.217461330413139,null,1,0.451093083690215]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.06535","week_of_month: 2<br />week_day: Sat<br />value:  99.76871","week_of_month: 3<br />week_day: Sat<br />value:  99.73386","week_of_month: 4<br />week_day: Sat<br />value: 101.54431",null],["week_of_month: 1<br />week_day: Fri<br />value: 100.38622","week_of_month: 2<br />week_day: Fri<br />value:  98.88415","week_of_month: 2<br />week_day: Fri<br />value: 100.20190","week_of_month: 3<br />week_day: Fri<br />value:  98.86596","week_of_month: 4<br />week_day: Fri<br />value:  99.89334"],[null,"week_of_month: 1<br />week_day: Thu<br />value: 100.23919","week_of_month: 2<br />week_day: Thu<br />value: 100.70830","week_of_month: 3<br />week_day: Thu<br />value:  99.86092","week_of_month: 4<br />week_day: Thu<br />value: 100.59274"],[null,"week_of_month: 1<br />week_day: Wed<br />value: 100.03311","week_of_month: 2<br />week_day: Wed<br />value: 101.31221","week_of_month: 3<br />week_day: Wed<br />value: 100.72737","week_of_month: 4<br />week_day: Wed<br />value:  99.95378"],[null,"week_of_month: 1<br />week_day: Tue<br />value: 100.97224","week_of_month: 2<br />week_day: Tue<br />value: 100.05421","week_of_month: 3<br />week_day: Tue<br />value:  99.63901","week_of_month: 4<br />week_day: Tue<br />value:  99.92366"],["week_of_month: 5<br />week_day: Tue<br />value:  99.42871","week_of_month: 1<br />week_day: Mon<br />value: 100.83337","week_of_month: 2<br />week_day: Mon<br />value:  99.43189","week_of_month: 3<br />week_day: Mon<br />value: 100.71519","week_of_month: 4<br />week_day: Mon<br />value:  98.79870"],["week_of_month: 5<br />week_day: Mon<br />value:  99.92391","week_of_month: 1<br />week_day: Sun<br />value:  99.48415",null,"week_of_month: 3<br />week_day: Sun<br />value: 101.95076","week_of_month: 4<br />week_day: Sun<br />value: 100.22057"]],"colorscale":[[0,"#E57E00"],[0.0213370542079135,"#E48100"],[0.027108604005871,"#E38100"],[0.0845953473696466,"#E08800"],[0.199870202800398,"#D89500"],[0.200880776247652,"#D89500"],[0.217461330413139,"#D79700"],[0.26659014175537,"#D49C00"],[0.286044963225308,"#D39E00"],[0.29668121331785,"#D29F00"],[0.307737622838511,"#D1A000"],[0.336991182349412,"#CFA300"],[0.347277853161,"#CEA400"],[0.356894751954668,"#CDA500"],[0.356976895443611,"#CDA500"],[0.36645091795354,"#CDA600"],[0.391619570000852,"#CBA800"],[0.398314920059799,"#CAA900"],[0.445168016987701,"#C6AE00"],[0.451093083690215,"#C6AE00"],[0.456999930328043,"#C5AF00"],[0.503646038493663,"#C2B300"],[0.569163770354714,"#BCB900"],[0.605827001539965,"#B8BD00"],[0.6080126520298,"#B8BD00"],[0.611874285757851,"#B8BD00"],[0.645505032058977,"#B5C000"],[0.689561870642004,"#B0C400"],[0.797417733622442,"#A4CE00"],[0.871052707484655,"#9BD400"],[1,"#89E000"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x6","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.693932431346714,0.660744662375768,0.0646326148770668,0.789761722193149,null],[0.534338663264127,1,0.340199361340352,0.459962878322627,0.0846943153374069],[0.740635279477089,0.445458749162636,0,0.556974849663007,0.577152299195699],[0.578414081797977,0.40925090370802,0.903359684562669,0.217201569589416,0.709582294708976],[0.318407579618232,null,0.5237259556467,0.207709657930824,0.692951491416803],[0.79711271565565,null,0.526012630743406,0.488992683474313,0.726304603267351],[0.495144460291373,null,0.717226738442512,0.519241406042915,null]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 101.19908","week_of_month: 2<br />week_day: Sat<br />value: 101.05672","week_of_month: 3<br />week_day: Sat<br />value:  98.49966","week_of_month: 4<br />week_day: Sat<br />value: 101.61014",null],["week_of_month: 1<br />week_day: Fri<br />value: 100.51449","week_of_month: 2<br />week_day: Fri<br />value: 102.51197","week_of_month: 3<br />week_day: Fri<br />value:  99.68172","week_of_month: 4<br />week_day: Fri<br />value: 100.19545","week_of_month: 5<br />week_day: Fri<br />value:  98.58571"],["week_of_month: 1<br />week_day: Thu<br />value: 101.39941","week_of_month: 2<br />week_day: Thu<br />value: 100.13323","week_of_month: 3<br />week_day: Thu<br />value:  98.22241","week_of_month: 4<br />week_day: Thu<br />value: 100.61159","week_of_month: 5<br />week_day: Thu<br />value: 100.69814"],["week_of_month: 1<br />week_day: Wed<br />value: 100.70355","week_of_month: 2<br />week_day: Wed<br />value:  99.97792","week_of_month: 3<br />week_day: Wed<br />value: 102.09743","week_of_month: 3<br />week_day: Wed<br />value:  99.15411","week_of_month: 4<br />week_day: Wed<br />value: 101.26621"],["week_of_month: 5<br />week_day: Wed<br />value:  99.58824",null,"week_of_month: 2<br />week_day: Tue<br />value: 100.46897","week_of_month: 3<br />week_day: Tue<br />value:  99.11340","week_of_month: 4<br />week_day: Tue<br />value: 101.19487"],["week_of_month: 5<br />week_day: Tue<br />value: 101.64168",null,"week_of_month: 2<br />week_day: Mon<br />value: 100.47878","week_of_month: 3<br />week_day: Mon<br />value: 100.31998","week_of_month: 4<br />week_day: Mon<br />value: 101.33794"],["week_of_month: 5<br />week_day: Mon<br />value: 100.34636",null,"week_of_month: 2<br />week_day: Sun<br />value: 101.29900","week_of_month: 2<br />week_day: Sun<br />value: 100.44973",null]],"colorscale":[[0,"#EF6600"],[0.0646326148770668,"#EA7200"],[0.0846943153374069,"#E97500"],[0.207709657930824,"#DF8A00"],[0.217201569589416,"#DE8B00"],[0.318407579618232,"#D59A00"],[0.340199361340352,"#D39D00"],[0.40925090370802,"#CCA700"],[0.445458749162636,"#C8AB00"],[0.459962878322627,"#C7AD00"],[0.461384007390179,"#C6AD00"],[0.488992683474313,"#C3B100"],[0.495144460291373,"#C3B200"],[0.519241406042915,"#C0B500"],[0.5237259556467,"#BFB600"],[0.526012630743406,"#BFB600"],[0.534338663264127,"#BEB700"],[0.556974849663007,"#BBBA00"],[0.577152299195699,"#B9BC00"],[0.578414081797977,"#B9BD00"],[0.660744662375768,"#ADC700"],[0.692951491416803,"#A9CB00"],[0.693932431346714,"#A8CB00"],[0.709582294708976,"#A6CD00"],[0.715892491266564,"#A5CD00"],[0.717226738442512,"#A5CE00"],[0.726304603267351,"#A3CF00"],[0.740635279477089,"#A1D000"],[0.789761722193149,"#99D600"],[0.79711271565565,"#97D700"],[0.903359684562669,"#81E300"],[1,"#67EF00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x7","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[1,2,3,4,5,6,7],"z":[[0.928963959677864,0.451797932449043,0.69266316970363,0.211914293404806,0.540818804954902,null],[null,0.649740076195227,0,0.631183127789903,0.491304890171801,null],[null,0.917447090509981,0.542858364750502,0.402185980468475,0.498672983035533,null],[null,0.993888248968805,0.822262764485013,0.752412824139934,0.296031991507366,null],[null,0.307105873140201,0.446330897973443,0.521657997573205,0.763621177680062,null],[null,1,0.653886016060974,0.84879729580206,0.243147884565953,0.790897062048175],[null,0.556939561142442,0.409422083029638,0.410807719975766,0.829607209182356,0.512119151129804]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 101.58493","week_of_month: 2<br />week_day: Sat<br />value:  99.77980","week_of_month: 3<br />week_day: Sat<br />value: 100.69100","week_of_month: 4<br />week_day: Sat<br />value:  98.87231","week_of_month: 5<br />week_day: Sat<br />value: 100.11657",null],[null,"week_of_month: 2<br />week_day: Fri<br />value: 100.52862","week_of_month: 3<br />week_day: Fri<br />value:  98.07063","week_of_month: 4<br />week_day: Fri<br />value: 100.45842","week_of_month: 5<br />week_day: Fri<br />value:  99.92925",null],[null,"week_of_month: 2<br />week_day: Thu<br />value: 101.54136","week_of_month: 3<br />week_day: Thu<br />value: 100.12428","week_of_month: 4<br />week_day: Thu<br />value:  99.59211","week_of_month: 5<br />week_day: Thu<br />value:  99.95713",null],[null,"week_of_month: 2<br />week_day: Wed<br />value: 101.83054","week_of_month: 3<br />week_day: Wed<br />value: 101.18128","week_of_month: 4<br />week_day: Wed<br />value: 100.91703","week_of_month: 5<br />week_day: Wed<br />value:  99.19053",null],[null,"week_of_month: 2<br />week_day: Tue<br />value:  99.23242","week_of_month: 3<br />week_day: Tue<br />value:  99.75911","week_of_month: 4<br />week_day: Tue<br />value: 100.04408","week_of_month: 5<br />week_day: Tue<br />value: 100.95943",null],[null,"week_of_month: 2<br />week_day: Mon<br />value: 101.85366","week_of_month: 3<br />week_day: Mon<br />value: 100.54430","week_of_month: 4<br />week_day: Mon<br />value: 101.28166","week_of_month: 5<br />week_day: Mon<br />value:  98.99047","week_of_month: 6<br />week_day: Mon<br />value: 101.06262"],[null,"week_of_month: 2<br />week_day: Sun<br />value: 100.17755","week_of_month: 3<br />week_day: Sun<br />value:  99.61949","week_of_month: 3<br />week_day: Sun<br />value:  99.62473","week_of_month: 4<br />week_day: Sun<br />value: 101.20906","week_of_month: 5<br />week_day: Sun<br />value: 100.00799"]],"colorscale":[[0,"#F15E00"],[0.211914293404806,"#E38100"],[0.243147884565953,"#E18500"],[0.296031991507366,"#DD8C00"],[0.307105873140201,"#DD8E00"],[0.402185980468475,"#D59A00"],[0.409422083029638,"#D49B00"],[0.410807719975766,"#D49B00"],[0.446330897973443,"#D1A000"],[0.451797932449043,"#D1A000"],[0.491304890171801,"#CDA500"],[0.498672983035533,"#CDA600"],[0.512119151129804,"#CBA800"],[0.521657997573205,"#CAA900"],[0.540818804954902,"#C9AB00"],[0.542858364750502,"#C8AB00"],[0.556939561142442,"#C7AD00"],[0.631183127789903,"#C0B500"],[0.649740076195227,"#BEB700"],[0.653886016060974,"#BDB800"],[0.69266316970363,"#B9BC00"],[0.74908725910788,"#B2C200"],[0.752412824139934,"#B2C300"],[0.763621177680062,"#B1C400"],[0.790897062048175,"#ADC700"],[0.822262764485013,"#A9CA00"],[0.829607209182356,"#A8CB00"],[0.84879729580206,"#A5CD00"],[0.917447090509981,"#9BD400"],[0.928963959677864,"#9AD600"],[0.993888248968805,"#8FDC00"],[1,"#8EDD00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x8","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.446818701066614,0.216582132290407,0.390346091437594,0.41828507388259,null],[0.151337769656451,0.654371580339861,0.352275059325054,0.984129742025475,0.719797393552888],[null,0.718161087024482,0,0.422326431718573,0.41478871867271],[null,0.416981151783988,0.364475338336563,0.23535272019073,0.162656022144934],[1,0.23226833314239,0.0799691707101202,0.361626176561955,0.849799910242635],[0.588591589428419,null,0.304438790134051,0.0659454362402791,0.605635127771802],[0.296643116102977,null,0.153748509216334,0.5474016517593,null]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.77281","week_of_month: 2<br />week_day: Sat<br />value:  99.11806","week_of_month: 3<br />week_day: Sat<br />value:  99.61221","week_of_month: 4<br />week_day: Sat<br />value:  99.69167",null],["week_of_month: 1<br />week_day: Fri<br />value:  98.93251","week_of_month: 2<br />week_day: Fri<br />value: 100.36306","week_of_month: 3<br />week_day: Fri<br />value:  99.50395","week_of_month: 3<br />week_day: Fri<br />value: 101.30084","week_of_month: 4<br />week_day: Fri<br />value: 100.54912"],[null,"week_of_month: 1<br />week_day: Thu<br />value: 100.54447","week_of_month: 2<br />week_day: Thu<br />value:  98.50213","week_of_month: 3<br />week_day: Thu<br />value:  99.70316","week_of_month: 4<br />week_day: Thu<br />value:  99.68172"],[null,"week_of_month: 1<br />week_day: Wed<br />value:  99.68796","week_of_month: 2<br />week_day: Wed<br />value:  99.53864","week_of_month: 3<br />week_day: Wed<br />value:  99.17144","week_of_month: 4<br />week_day: Wed<br />value:  98.96470"],["week_of_month: 5<br />week_day: Wed<br />value: 101.34598","week_of_month: 1<br />week_day: Tue<br />value:  99.16266","week_of_month: 2<br />week_day: Tue<br />value:  98.72955","week_of_month: 3<br />week_day: Tue<br />value:  99.53054","week_of_month: 4<br />week_day: Tue<br />value: 100.91883"],["week_of_month: 5<br />week_day: Tue<br />value: 100.17599",null,"week_of_month: 2<br />week_day: Mon<br />value:  99.36791","week_of_month: 3<br />week_day: Mon<br />value:  98.68967","week_of_month: 4<br />week_day: Mon<br />value: 100.22446"],["week_of_month: 5<br />week_day: Mon<br />value:  99.34574",null,"week_of_month: 2<br />week_day: Sun<br />value:  98.93937","week_of_month: 2<br />week_day: Sun<br />value: 100.05886",null]],"colorscale":[[0,"#EA7200"],[0.0659454362402791,"#E77A00"],[0.0799691707101202,"#E67B00"],[0.151337769656451,"#E28300"],[0.153748509216334,"#E28300"],[0.162656022144934,"#E28400"],[0.216582132290407,"#DF8A00"],[0.23226833314239,"#DE8B00"],[0.23535272019073,"#DE8C00"],[0.296643116102977,"#DA9200"],[0.304438790134051,"#DA9300"],[0.31458957665114,"#D99400"],[0.352275059325054,"#D79700"],[0.361626176561955,"#D69800"],[0.364475338336563,"#D69800"],[0.381223118445187,"#D59A00"],[0.390346091437594,"#D59B00"],[0.41478871867271,"#D39D00"],[0.416981151783988,"#D39D00"],[0.41828507388259,"#D39D00"],[0.422326431718573,"#D29E00"],[0.446818701066614,"#D1A000"],[0.5474016517593,"#CAA900"],[0.588591589428419,"#C7AD00"],[0.605635127771802,"#C6AE00"],[0.654371580339861,"#C2B200"],[0.718161087024482,"#BDB800"],[0.719797393552888,"#BDB800"],[0.849799910242635,"#B2C300"],[0.984129742025475,"#A5CE00"],[1,"#A3CF00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x9","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.599551793003563,0.201045457543598,0,1,0.273131137103069],[0.678005273273247,0.78716079720243,0.253601249281811,0.577964694650805,0.500809510678467],[0.294947182271624,0.212674660924565,0.396683272961265,0.327882516395812,0.384511810612472],[null,0.760495220162791,0.319917596469206,0.222016492132141,0.0710133707348716],[0.314397834059411,null,0.369822555140031,0.532357241192572,0.693365449659409],[0.0640953790351004,null,0.604938367119242,0.550753954551395,0.736663433305919],[0.900446817015904,null,0.669057006751618,0.973234538920339,0.77537612069527]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 100.72256","week_of_month: 2<br />week_day: Sat<br />value:  99.30603","week_of_month: 3<br />week_day: Sat<br />value:  98.59140","week_of_month: 4<br />week_day: Sat<br />value: 102.14599","week_of_month: 5<br />week_day: Sat<br />value:  99.56227"],["week_of_month: 1<br />week_day: Fri<br />value: 101.00143","week_of_month: 2<br />week_day: Fri<br />value: 101.38944","week_of_month: 3<br />week_day: Fri<br />value:  99.49285","week_of_month: 4<br />week_day: Fri<br />value: 100.64583","week_of_month: 5<br />week_day: Fri<br />value: 100.37157"],["week_of_month: 1<br />week_day: Thu<br />value:  99.63981","week_of_month: 2<br />week_day: Thu<br />value:  99.34737","week_of_month: 3<br />week_day: Thu<br />value: 100.00145","week_of_month: 4<br />week_day: Thu<br />value:  99.75689","week_of_month: 5<br />week_day: Thu<br />value:  99.95818"],[null,"week_of_month: 2<br />week_day: Wed<br />value: 101.29465","week_of_month: 3<br />week_day: Wed<br />value:  99.72857","week_of_month: 4<br />week_day: Wed<br />value:  99.38058","week_of_month: 4<br />week_day: Wed<br />value:  98.84382"],["week_of_month: 5<br />week_day: Wed<br />value:  99.70895",null,"week_of_month: 2<br />week_day: Tue<br />value:  99.90597","week_of_month: 3<br />week_day: Tue<br />value: 100.48371","week_of_month: 4<br />week_day: Tue<br />value: 101.05603"],["week_of_month: 5<br />week_day: Tue<br />value:  98.81923",null,"week_of_month: 2<br />week_day: Mon<br />value: 100.74171","week_of_month: 3<br />week_day: Mon<br />value: 100.54910","week_of_month: 4<br />week_day: Mon<br />value: 101.20994"],["week_of_month: 5<br />week_day: Mon<br />value: 101.79212",null,"week_of_month: 2<br />week_day: Sun<br />value: 100.96962","week_of_month: 3<br />week_day: Sun<br />value: 102.05085","week_of_month: 3<br />week_day: Sun<br />value: 101.34755"]],"colorscale":[[0,"#E97600"],[0.0640953790351004,"#E47F00"],[0.0710133707348716,"#E48000"],[0.201045457543598,"#DB9000"],[0.212674660924565,"#DA9200"],[0.222016492132141,"#D99300"],[0.253601249281811,"#D79700"],[0.273131137103069,"#D69900"],[0.294947182271624,"#D49C00"],[0.314397834059411,"#D29E00"],[0.319917596469206,"#D29F00"],[0.327882516395812,"#D1A000"],[0.369822555140031,"#CEA400"],[0.384511810612472,"#CDA600"],[0.396683272961265,"#CBA700"],[0.500809510678467,"#C2B300"],[0.531565809145202,"#BFB600"],[0.532357241192572,"#BFB600"],[0.550753954551395,"#BDB800"],[0.577964694650805,"#BABB00"],[0.599551793003563,"#B8BD00"],[0.604938367119242,"#B7BE00"],[0.669057006751618,"#B0C400"],[0.678005273273247,"#AFC500"],[0.693365449659409,"#ADC700"],[0.736663433305919,"#A8CB00"],[0.760495220162791,"#A5CD00"],[0.77537612069527,"#A3CF00"],[0.78716079720243,"#A1D000"],[0.900446817015904,"#91DB00"],[0.973234538920339,"#84E200"],[1,"#7FE500"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x10","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.927115288252687,0.561768218219116,0.728961362632558,0.695812281874906,null],[0.774400445110786,0.643661999733204,0.497303290976717,0.5798592170934,null],[0,1,0.438491321927911,0.497921514621798,null],[0.404314395234535,0.262723940536142,0.274461149501289,0.50316653726332,null],[0.284209396583103,0.368100831146739,0.576453661106758,0.72743939626721,null],[0.76909311074412,0.820586915767076,0.709614664184143,0.553062157716709,0.0633542400836141],[0.313235764015127,0.439150212095868,0.200998573838459,0.72432802600911,0.393454279520089]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 102.07828","week_of_month: 2<br />week_day: Sat<br />value: 100.11637","week_of_month: 3<br />week_day: Sat<br />value: 101.01419","week_of_month: 4<br />week_day: Sat<br />value: 100.83618",null],["week_of_month: 1<br />week_day: Fri<br />value: 101.25820","week_of_month: 2<br />week_day: Fri<br />value: 100.55613","week_of_month: 3<br />week_day: Fri<br />value:  99.77019","week_of_month: 4<br />week_day: Fri<br />value: 100.21351",null],["week_of_month: 1<br />week_day: Thu<br />value:  97.09967","week_of_month: 2<br />week_day: Thu<br />value: 102.46967","week_of_month: 3<br />week_day: Thu<br />value:  99.45437","week_of_month: 4<br />week_day: Thu<br />value:  99.77351",null],["week_of_month: 1<br />week_day: Wed<br />value:  99.27084","week_of_month: 2<br />week_day: Wed<br />value:  98.51050","week_of_month: 3<br />week_day: Wed<br />value:  98.57353","week_of_month: 4<br />week_day: Wed<br />value:  99.80167",null],["week_of_month: 1<br />week_day: Tue<br />value:  98.62588","week_of_month: 2<br />week_day: Tue<br />value:  99.07637","week_of_month: 3<br />week_day: Tue<br />value: 100.19523","week_of_month: 4<br />week_day: Tue<br />value: 101.00602",null],["week_of_month: 1<br />week_day: Mon<br />value: 101.22970","week_of_month: 2<br />week_day: Mon<br />value: 101.50622","week_of_month: 3<br />week_day: Mon<br />value: 100.91030","week_of_month: 4<br />week_day: Mon<br />value: 100.06961","week_of_month: 5<br />week_day: Mon<br />value:  97.43989"],["week_of_month: 1<br />week_day: Sun<br />value:  98.78175","week_of_month: 2<br />week_day: Sun<br />value:  99.45791","week_of_month: 3<br />week_day: Sun<br />value:  98.17903","week_of_month: 3<br />week_day: Sun<br />value: 100.98931","week_of_month: 4<br />week_day: Sun<br />value:  99.21252"]],"colorscale":[[0,"#FF0000"],[0.029597579482101,"#FD2400"],[0.0633542400836141,"#FA3700"],[0.200998573838459,"#EF6400"],[0.262723940536142,"#EA7200"],[0.274461149501289,"#E97500"],[0.284209396583103,"#E87700"],[0.313235764015127,"#E57D00"],[0.368100831146739,"#E08800"],[0.393454279520089,"#DD8D00"],[0.404314395234535,"#DC8F00"],[0.438491321927911,"#D89600"],[0.439150212095868,"#D89600"],[0.497303290976717,"#D1A000"],[0.497921514621798,"#D1A000"],[0.50316653726332,"#D0A100"],[0.553062157716709,"#CAA900"],[0.561768218219116,"#C9AB00"],[0.576453661106758,"#C7AD00"],[0.5798592170934,"#C6AE00"],[0.643661999733204,"#BDB800"],[0.695812281874906,"#B5C000"],[0.709614664184143,"#B2C300"],[0.72432802600911,"#B0C500"],[0.72743939626721,"#AFC500"],[0.728961362632558,"#AFC600"],[0.76909311074412,"#A7CC00"],[0.774400445110786,"#A6CC00"],[0.820586915767076,"#9DD300"],[0.927115288252687,"#83E300"],[1,"#6AED00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x11","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.549120446830151,0,0.66930720554629,0.323353501825607,null],[0.201499573077395,0.232644778164091,0.170122994454299,0.977445269990246,0.63377275152226],[null,0.853727331309707,0.277410060359383,0.437753744669112,0.9094798487102],[0.523221644570025,0.0672314226422263,0.397094203720453,0.485908976401122,0.673866370493994],[0.440623561396354,0.330195805000887,0.475429192848628,0.232362544920917,1],[0.959942205850585,null,0.627050732822659,0.416025394368637,0.387171978207823],[0.503558813450126,null,0.895347706008786,0.873736579747351,0.476879665519362]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 100.17786","week_of_month: 2<br />week_day: Sat<br />value:  97.71568","week_of_month: 3<br />week_day: Sat<br />value: 100.71676","week_of_month: 4<br />week_day: Sat<br />value:  99.16555",null],["week_of_month: 1<br />week_day: Fri<br />value:  98.61918","week_of_month: 2<br />week_day: Fri<br />value:  98.75883","week_of_month: 3<br />week_day: Fri<br />value:  98.47849","week_of_month: 4<br />week_day: Fri<br />value: 102.09841","week_of_month: 4<br />week_day: Fri<br />value: 100.55743"],[null,"week_of_month: 1<br />week_day: Thu<br />value: 101.54368","week_of_month: 2<br />week_day: Thu<br />value:  98.95955","week_of_month: 3<br />week_day: Thu<br />value:  99.67851","week_of_month: 4<br />week_day: Thu<br />value: 101.79366"],["week_of_month: 5<br />week_day: Thu<br />value: 100.06173","week_of_month: 1<br />week_day: Wed<br />value:  98.01714","week_of_month: 2<br />week_day: Wed<br />value:  99.49620","week_of_month: 3<br />week_day: Wed<br />value:  99.89443","week_of_month: 4<br />week_day: Wed<br />value: 100.73720"],["week_of_month: 5<br />week_day: Wed<br />value:  99.69138","week_of_month: 1<br />week_day: Tue<br />value:  99.19623","week_of_month: 2<br />week_day: Tue<br />value:  99.84744","week_of_month: 3<br />week_day: Tue<br />value:  98.75756","week_of_month: 4<br />week_day: Tue<br />value: 102.19954"],["week_of_month: 5<br />week_day: Tue<br />value: 102.01993",null,"week_of_month: 2<br />week_day: Mon<br />value: 100.52729","week_of_month: 3<br />week_day: Mon<br />value:  99.58108","week_of_month: 4<br />week_day: Mon<br />value:  99.45171"],["week_of_month: 5<br />week_day: Mon<br />value:  99.97357",null,"week_of_month: 2<br />week_day: Sun<br />value: 101.73030","week_of_month: 3<br />week_day: Sun<br />value: 101.63339","week_of_month: 3<br />week_day: Sun<br />value:  99.85394"]],"colorscale":[[0,"#F74B00"],[0.0672314226422263,"#F25C00"],[0.170122994454299,"#EA7100"],[0.201499573077395,"#E87700"],[0.232362544920917,"#E67C00"],[0.232644778164091,"#E67C00"],[0.277410060359383,"#E28400"],[0.323353501825607,"#DE8C00"],[0.330195805000887,"#DD8D00"],[0.387171978207823,"#D89500"],[0.397094203720453,"#D79700"],[0.416025394368637,"#D59A00"],[0.437753744669112,"#D39D00"],[0.440623561396354,"#D39D00"],[0.475429192848628,"#CFA200"],[0.476879665519362,"#CFA300"],[0.485908976401122,"#CEA400"],[0.503558813450126,"#CCA600"],[0.523221644570025,"#CAA900"],[0.549120446830151,"#C7AD00"],[0.627050732822659,"#BEB700"],[0.63377275152226,"#BDB800"],[0.66930720554629,"#B8BD00"],[0.673866370493994,"#B8BE00"],[0.763297218521075,"#ABC900"],[0.853727331309707,"#9BD400"],[0.873736579747351,"#98D700"],[0.895347706008786,"#93DA00"],[0.9094798487102,"#91DB00"],[0.959942205850585,"#86E100"],[0.977445269990246,"#81E400"],[1,"#7CE600"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x12","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[1,2,3,4,5,6,7],"z":[[0.328877263720781,0.133907195432231,0.292581549589887,1,0.597349140791922,null],[0.683908142022999,0.800781573369094,0.158296862731327,0.594079296428124,0.749348563709186,null],[null,0.443319332692536,0.460410867182949,0.266089192051845,0.732385512804394,null],[null,0.105630775486397,0.618931198156224,0,0.366939667246548,0.176329666430605],[null,null,0.702219095376154,0.463658831577818,0.615629687930106,0.236609357194997],[null,null,0.488445874629306,0.741371481518167,0.742560299344057,0.635047181713015],[null,null,0.0299181321357133,0.145563353315684,0.225519773924066,0.500889703373201]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.38844","week_of_month: 2<br />week_day: Sat<br />value:  98.69560","week_of_month: 3<br />week_day: Sat<br />value:  99.25946","week_of_month: 4<br />week_day: Sat<br />value: 101.77333","week_of_month: 5<br />week_day: Sat<br />value: 100.34248",null],["week_of_month: 1<br />week_day: Fri<br />value: 100.65007","week_of_month: 2<br />week_day: Fri<br />value: 101.06539","week_of_month: 3<br />week_day: Fri<br />value:  98.78227","week_of_month: 4<br />week_day: Fri<br />value: 100.33086","week_of_month: 5<br />week_day: Fri<br />value: 100.88262",null],[null,"week_of_month: 2<br />week_day: Thu<br />value:  99.79512","week_of_month: 3<br />week_day: Thu<br />value:  99.85586","week_of_month: 4<br />week_day: Thu<br />value:  99.16532","week_of_month: 5<br />week_day: Thu<br />value: 100.82234",null],[null,"week_of_month: 2<br />week_day: Wed<br />value:  98.59512","week_of_month: 3<br />week_day: Wed<br />value: 100.41917","week_of_month: 4<br />week_day: Wed<br />value:  98.21975","week_of_month: 5<br />week_day: Wed<br />value:  99.52370","week_of_month: 5<br />week_day: Wed<br />value:  98.84635"],[null,null,"week_of_month: 2<br />week_day: Tue<br />value: 100.71514","week_of_month: 3<br />week_day: Tue<br />value:  99.86740","week_of_month: 4<br />week_day: Tue<br />value: 100.40744","week_of_month: 5<br />week_day: Tue<br />value:  99.06056"],[null,null,"week_of_month: 2<br />week_day: Mon<br />value:  99.95548","week_of_month: 3<br />week_day: Mon<br />value: 100.85427","week_of_month: 4<br />week_day: Mon<br />value: 100.85850","week_of_month: 5<br />week_day: Mon<br />value: 100.47644"],[null,null,"week_of_month: 2<br />week_day: Sun<br />value:  98.32607","week_of_month: 3<br />week_day: Sun<br />value:  98.73702","week_of_month: 4<br />week_day: Sun<br />value:  99.02115","week_of_month: 4<br />week_day: Sun<br />value:  99.99970"]],"colorscale":[[0,"#EF6600"],[0.0299181321357133,"#ED6A00"],[0.105630775486397,"#E87600"],[0.133907195432231,"#E77A00"],[0.145563353315684,"#E67C00"],[0.158296862731327,"#E57D00"],[0.176329666430605,"#E48000"],[0.225519773924066,"#E18600"],[0.236609357194997,"#E08800"],[0.266089192051845,"#DE8B00"],[0.292581549589887,"#DC8F00"],[0.328877263720781,"#D99300"],[0.366939667246548,"#D69800"],[0.443319332692536,"#D0A100"],[0.460410867182949,"#CFA300"],[0.463658831577818,"#CFA300"],[0.488445874629306,"#CDA600"],[0.500889703373201,"#CCA700"],[0.594079296428124,"#C3B100"],[0.597349140791922,"#C3B200"],[0.615629687930106,"#C1B400"],[0.618931198156224,"#C1B400"],[0.635047181713015,"#BFB600"],[0.676451680386419,"#BBBA00"],[0.683908142022999,"#BABB00"],[0.702219095376154,"#B8BD00"],[0.732385512804394,"#B5C000"],[0.741371481518167,"#B4C100"],[0.742560299344057,"#B4C100"],[0.749348563709186,"#B3C200"],[0.800781573369094,"#ADC700"],[1,"#92DB00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.892743134853946,0.0235367390355237,0.644526514649564,0.145386968257434,null],[0.355792229184729,1,0.904513353975614,0.628821579816007,null],[0.686910928273545,0.35810739449113,0.452211940451789,0.0283342206465053,null],[0.64904148654856,0.54052267300461,0.701813501532146,0.30699098095338,null],[0.24695890559177,0.456065273689692,0.294499412380526,0.621192629630062,null],[0,0.324291101850955,0.772972512466445,0.817810320010099,null],[null,0.560228682713312,0.79516643685071,0.23057588256668,0.545707288024703]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 101.37789","week_of_month: 2<br />week_day: Sat<br />value:  97.82463","week_of_month: 3<br />week_day: Sat<br />value: 100.36320","week_of_month: 4<br />week_day: Sat<br />value:  98.32275",null],["week_of_month: 1<br />week_day: Fri<br />value:  99.18287","week_of_month: 2<br />week_day: Fri<br />value: 101.81635","week_of_month: 3<br />week_day: Fri<br />value: 101.42601","week_of_month: 4<br />week_day: Fri<br />value: 100.29900",null],["week_of_month: 1<br />week_day: Thu<br />value: 100.53647","week_of_month: 2<br />week_day: Thu<br />value:  99.19234","week_of_month: 3<br />week_day: Thu<br />value:  99.57703","week_of_month: 4<br />week_day: Thu<br />value:  97.84425",null],["week_of_month: 1<br />week_day: Wed<br />value: 100.38166","week_of_month: 2<br />week_day: Wed<br />value:  99.93804","week_of_month: 3<br />week_day: Wed<br />value: 100.59739","week_of_month: 4<br />week_day: Wed<br />value:  98.98338",null],["week_of_month: 1<br />week_day: Tue<br />value:  98.73797","week_of_month: 2<br />week_day: Tue<br />value:  99.59278","week_of_month: 3<br />week_day: Tue<br />value:  98.93231","week_of_month: 4<br />week_day: Tue<br />value: 100.26781",null],["week_of_month: 1<br />week_day: Mon<br />value:  97.72842","week_of_month: 2<br />week_day: Mon<br />value:  99.05410","week_of_month: 3<br />week_day: Mon<br />value: 100.88828","week_of_month: 4<br />week_day: Mon<br />value: 101.07157",null],[null,"week_of_month: 2<br />week_day: Sun<br />value: 100.01860","week_of_month: 3<br />week_day: Sun<br />value: 100.97901","week_of_month: 4<br />week_day: Sun<br />value:  98.67100","week_of_month: 4<br />week_day: Sun<br />value:  99.95923"]],"colorscale":[[0,"#F64C00"],[0.0235367390355237,"#F55100"],[0.0283342206465053,"#F55200"],[0.145386968257434,"#ED6A00"],[0.23057588256668,"#E77900"],[0.24695890559177,"#E67C00"],[0.294499412380526,"#E28300"],[0.30699098095338,"#E18500"],[0.324291101850955,"#E08800"],[0.355792229184729,"#DE8C00"],[0.35810739449113,"#DD8C00"],[0.452211940451789,"#D59A00"],[0.456065273689692,"#D59A00"],[0.54052267300461,"#CDA500"],[0.545707288024703,"#CDA600"],[0.560228682713312,"#CBA800"],[0.621192629630062,"#C5B000"],[0.628821579816007,"#C4B000"],[0.644526514649564,"#C2B200"],[0.64904148654856,"#C2B300"],[0.686910928273545,"#BDB800"],[0.701813501532146,"#BCB900"],[0.772972512466445,"#B3C200"],[0.79516643685071,"#B0C500"],[0.817810320010099,"#ADC700"],[0.881932335164119,"#A4CF00"],[0.892743134853946,"#A2D000"],[0.904513353975614,"#A0D100"],[1,"#90DC00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x2","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.154744397978367,0.363158403784607,0.135708491077877,0,null],[0.448754723458761,0.331746123088482,0.211764111516063,0.27768716725127,null],[0.390490380197224,1,0.704897356413302,0.56543348624456,null],[0.407331569125362,0.456708696971128,0.588549707845068,0.396940229919648,0.254891540018715],[0.266544035279905,0.424319643312536,0.725210280528453,0.366101691442799,0.300714554175185],[0.664543231602377,0.773246357560341,0.281400791586805,0.394523777856619,0.455021140159245],[null,0.537897983729149,0.236797823541804,0.859467492988733,0.546043666178614]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  98.76219","week_of_month: 2<br />week_day: Sat<br />value:  99.84202","week_of_month: 3<br />week_day: Sat<br />value:  98.66357","week_of_month: 4<br />week_day: Sat<br />value:  97.96044",null],["week_of_month: 1<br />week_day: Fri<br />value: 100.28551","week_of_month: 2<br />week_day: Fri<br />value:  99.67927","week_of_month: 3<br />week_day: Fri<br />value:  99.05762","week_of_month: 4<br />week_day: Fri<br />value:  99.39918",null],["week_of_month: 1<br />week_day: Thu<br />value:  99.98363","week_of_month: 2<br />week_day: Thu<br />value: 103.14160","week_of_month: 3<br />week_day: Thu<br />value: 101.61263","week_of_month: 4<br />week_day: Thu<br />value: 100.89004",null],["week_of_month: 1<br />week_day: Wed<br />value: 100.07089","week_of_month: 2<br />week_day: Wed<br />value: 100.32672","week_of_month: 3<br />week_day: Wed<br />value: 101.00981","week_of_month: 4<br />week_day: Wed<br />value: 100.01705","week_of_month: 5<br />week_day: Wed<br />value:  99.28107"],["week_of_month: 1<br />week_day: Tue<br />value:  99.34145","week_of_month: 2<br />week_day: Tue<br />value: 100.15891","week_of_month: 3<br />week_day: Tue<br />value: 101.71787","week_of_month: 4<br />week_day: Tue<br />value:  99.85727","week_of_month: 5<br />week_day: Tue<br />value:  99.51849"],["week_of_month: 1<br />week_day: Mon<br />value: 101.40355","week_of_month: 2<br />week_day: Mon<br />value: 101.96676","week_of_month: 3<br />week_day: Mon<br />value:  99.41842","week_of_month: 4<br />week_day: Mon<br />value: 100.00453","week_of_month: 5<br />week_day: Mon<br />value: 100.31798"],[null,"week_of_month: 2<br />week_day: Sun<br />value: 100.74738","week_of_month: 3<br />week_day: Sun<br />value:  99.18733","week_of_month: 4<br />week_day: Sun<br />value: 102.41348","week_of_month: 4<br />week_day: Sun<br />value: 100.78958"]],"colorscale":[[0,"#F35900"],[0.135708491077877,"#E77900"],[0.154744397978367,"#E57D00"],[0.211764111516063,"#E08800"],[0.236797823541804,"#DD8C00"],[0.254891540018715,"#DC9000"],[0.266544035279905,"#DA9200"],[0.27768716725127,"#D99400"],[0.281400791586805,"#D99400"],[0.300714554175185,"#D79800"],[0.331746123088482,"#D39D00"],[0.363158403784607,"#CFA200"],[0.366101691442799,"#CFA300"],[0.390490380197224,"#CCA700"],[0.394523777856619,"#CBA700"],[0.396940229919648,"#CBA800"],[0.407331569125362,"#CAA900"],[0.424319643312536,"#C8AC00"],[0.448754723458761,"#C4B000"],[0.455021140159245,"#C3B100"],[0.456708696971128,"#C3B100"],[0.537897983729149,"#B7BE00"],[0.546043666178614,"#B6BF00"],[0.56543348624456,"#B3C200"],[0.588549707845068,"#AFC500"],[0.664543231602377,"#A1D000"],[0.704897356413302,"#99D600"],[0.725210280528453,"#94D900"],[0.773246357560341,"#88E000"],[0.859467492988733,"#6EEC00"],[1,"#00FF00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x3","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.474553381987667,0.385508370592734,0.797400755737386,0.54559544705288,null],[0.259159048926327,0.546557308006937,0.607393749024929,0.690067541223438,0.652686725257118],[0.25460664125607,null,0.375626917284999,0.612156052076762,0.609551748509002],[0.550774655104509,0.642178934869772,null,0.385011770583981,0.735381552995642],[0.937881653596747,0.353583043823706,null,1,0.512345952302691],[0.738331844596664,0.367969018272218,null,0.51716919425407,0.436147703505168],[0.707696107858479,0.453031176444712,null,0.527346697918356,0.520387842886916]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.56096","week_of_month: 2<br />week_day: Sat<br />value:  99.19733","week_of_month: 3<br />week_day: Sat<br />value: 100.87936","week_of_month: 4<br />week_day: Sat<br />value:  99.85107",null],["week_of_month: 1<br />week_day: Fri<br />value:  98.68137","week_of_month: 1<br />week_day: Fri<br />value:  99.85500","week_of_month: 2<br />week_day: Fri<br />value: 100.10344","week_of_month: 3<br />week_day: Fri<br />value: 100.44105","week_of_month: 4<br />week_day: Fri<br />value: 100.28840"],["week_of_month: 5<br />week_day: Fri<br />value:  98.66278",null,"week_of_month: 2<br />week_day: Thu<br />value:  99.15698","week_of_month: 3<br />week_day: Thu<br />value: 100.12288","week_of_month: 4<br />week_day: Thu<br />value: 100.11225"],["week_of_month: 5<br />week_day: Thu<br />value:  99.87222","week_of_month: 5<br />week_day: Thu<br />value: 100.24549",null,"week_of_month: 2<br />week_day: Wed<br />value:  99.19531","week_of_month: 3<br />week_day: Wed<br />value: 100.62610"],["week_of_month: 4<br />week_day: Wed<br />value: 101.45304","week_of_month: 5<br />week_day: Wed<br />value:  99.06696",null,"week_of_month: 2<br />week_day: Tue<br />value: 101.70671","week_of_month: 3<br />week_day: Tue<br />value:  99.71529"],["week_of_month: 4<br />week_day: Tue<br />value: 100.63814","week_of_month: 5<br />week_day: Tue<br />value:  99.12571",null,"week_of_month: 2<br />week_day: Mon<br />value:  99.73499","week_of_month: 3<br />week_day: Mon<br />value:  99.40413"],["week_of_month: 4<br />week_day: Mon<br />value: 100.51304","week_of_month: 5<br />week_day: Mon<br />value:  99.47307",null,"week_of_month: 2<br />week_day: Sun<br />value:  99.77655","week_of_month: 3<br />week_day: Sun<br />value:  99.74814"]],"colorscale":[[0,"#F84500"],[0.25460664125607,"#E77900"],[0.259159048926327,"#E77900"],[0.353583043823706,"#E08800"],[0.367969018272218,"#DF8A00"],[0.375626917284999,"#DE8B00"],[0.385011770583981,"#DD8D00"],[0.385508370592734,"#DD8D00"],[0.436147703505168,"#D99400"],[0.453031176444712,"#D89600"],[0.474553381987667,"#D69900"],[0.512345952302691,"#D29E00"],[0.51716919425407,"#D29F00"],[0.520387842886916,"#D19F00"],[0.527346697918356,"#D1A000"],[0.54559544705288,"#CFA300"],[0.546557308006937,"#CFA300"],[0.550774655104509,"#CFA300"],[0.607393749024929,"#C9AA00"],[0.609551748509002,"#C9AB00"],[0.612156052076762,"#C8AB00"],[0.642178934869772,"#C5AF00"],[0.652686725257118,"#C4B000"],[0.690067541223438,"#C0B500"],[0.707696107858479,"#BEB700"],[0.735381552995642,"#BBBA00"],[0.738331844596664,"#BABB00"],[0.760724036922406,"#B8BD00"],[0.797400755737386,"#B3C200"],[0.937881653596747,"#9FD200"],[1,"#95D900"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x4","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[1,2,3,4,5,6,7],"z":[[null,0.685281943862931,0,0.360486557154104,0.60724946452318,0.127498789446069],[null,null,0.406121221307526,0.101529558667048,0.82436133932219,0.337392248927886],[null,null,0.35229275657341,0.483937570140042,0.454587007553287,0.000137213497452131],[null,null,0.644635049266142,0.566542751980536,0.365267137417702,0.739943645404982],[0.617586658692092,null,null,0.762816856448255,0.680851847491968,0.885953166499186],[0.525961062767174,null,null,0.692509728481173,0.402153075845989,0.395008821903309],[0.722358913534308,1,0.262147943642186,null,0.387280560662911,0.803375605095622]],"text":[[null,"week_of_month: 2<br />week_day: Sat<br />value: 100.99730","week_of_month: 3<br />week_day: Sat<br />value:  98.16726","week_of_month: 4<br />week_day: Sat<br />value:  99.65598","week_of_month: 5<br />week_day: Sat<br />value: 100.67505","week_of_month: 5<br />week_day: Sat<br />value:  98.69380"],[null,null,"week_of_month: 2<br />week_day: Fri<br />value:  99.84444","week_of_month: 3<br />week_day: Fri<br />value:  98.58656","week_of_month: 4<br />week_day: Fri<br />value: 101.57166","week_of_month: 5<br />week_day: Fri<br />value:  99.56061"],[null,null,"week_of_month: 2<br />week_day: Thu<br />value:  99.62214","week_of_month: 3<br />week_day: Thu<br />value: 100.16580","week_of_month: 4<br />week_day: Thu<br />value: 100.04459","week_of_month: 5<br />week_day: Thu<br />value:  98.16783"],[null,null,"week_of_month: 2<br />week_day: Wed<br />value: 100.82944","week_of_month: 2<br />week_day: Wed<br />value: 100.50694","week_of_month: 3<br />week_day: Wed<br />value:  99.67572","week_of_month: 4<br />week_day: Wed<br />value: 101.22304"],["week_of_month: 5<br />week_day: Wed<br />value: 100.71774",null,null,"week_of_month: 2<br />week_day: Tue<br />value: 101.31750","week_of_month: 3<br />week_day: Tue<br />value: 100.97901","week_of_month: 4<br />week_day: Tue<br />value: 101.82602"],["week_of_month: 5<br />week_day: Tue<br />value: 100.33935",null,null,"week_of_month: 2<br />week_day: Mon<br />value: 101.02715","week_of_month: 3<br />week_day: Mon<br />value:  99.82805","week_of_month: 4<br />week_day: Mon<br />value:  99.79855"],["week_of_month: 5<br />week_day: Mon<br />value: 101.15042","week_of_month: 6<br />week_day: Mon<br />value: 102.29700","week_of_month: 1<br />week_day: Sun<br />value:  99.24987",null,"week_of_month: 3<br />week_day: Sun<br />value:  99.76663","week_of_month: 4<br />week_day: Sun<br />value: 101.48500"]],"colorscale":[[0,"#F06300"],[0.000137213497452131,"#F06300"],[0.101529558667048,"#E97600"],[0.127498789446069,"#E77A00"],[0.224397195764887,"#DF8900"],[0.262147943642186,"#DC8E00"],[0.337392248927886,"#D69900"],[0.35229275657341,"#D49B00"],[0.360486557154104,"#D49C00"],[0.365267137417702,"#D39D00"],[0.366487298935577,"#D39D00"],[0.387280560662911,"#D1A000"],[0.395008821903309,"#D0A100"],[0.402153075845989,"#D0A200"],[0.406121221307526,"#CFA200"],[0.454587007553287,"#CAA900"],[0.483937570140042,"#C7AC00"],[0.525961062767174,"#C3B200"],[0.566542751980536,"#BEB700"],[0.60724946452318,"#B9BC00"],[0.617586658692092,"#B8BD00"],[0.644635049266142,"#B5C000"],[0.680851847491968,"#B0C500"],[0.685281943862931,"#AFC500"],[0.692509728481173,"#AEC600"],[0.722358913534308,"#AAC900"],[0.739943645404982,"#A8CB00"],[0.762816856448255,"#A4CE00"],[0.803375605095622,"#9ED300"],[0.82436133932219,"#9AD500"],[0.885953166499186,"#8FDC00"],[1,"#76E900"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x5","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.216239402384363,0.947091927703965,0.576463983017881,0,null],[0.531794936681008,0.972814544921274,0.681260563355183,0.547695483912779,null],[0.900369380140886,0.736389623245116,0.274039705904557,0.776471647876865,null],[0.599763084283791,0.235944285955554,0.505240853103017,0.794967946837258,0.611126806763891],[0.847244411516369,0.75428704553434,0.847264388260577,0.794471921852911,0.951320581401662],[null,0.692990915612678,0.523958649653741,0.560595294955925,0.755222532481579],[0.840925370098456,0.881107258472839,0.994531640974211,1,0.831253246981014]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  98.39658","week_of_month: 2<br />week_day: Sat<br />value: 101.05484","week_of_month: 3<br />week_day: Sat<br />value:  99.70679","week_of_month: 4<br />week_day: Sat<br />value:  97.61008",null],["week_of_month: 1<br />week_day: Fri<br />value:  99.54432","week_of_month: 2<br />week_day: Fri<br />value: 101.14840","week_of_month: 3<br />week_day: Fri<br />value: 100.08796","week_of_month: 4<br />week_day: Fri<br />value:  99.60216",null],["week_of_month: 1<br />week_day: Thu<br />value: 100.88490","week_of_month: 2<br />week_day: Thu<br />value: 100.28848","week_of_month: 3<br />week_day: Thu<br />value:  98.60681","week_of_month: 4<br />week_day: Thu<br />value: 100.43426",null],["week_of_month: 1<br />week_day: Wed<br />value:  99.79154","week_of_month: 2<br />week_day: Wed<br />value:  98.46825","week_of_month: 3<br />week_day: Wed<br />value:  99.44774","week_of_month: 4<br />week_day: Wed<br />value: 100.50154","week_of_month: 5<br />week_day: Wed<br />value:  99.83287"],["week_of_month: 1<br />week_day: Tue<br />value: 100.69168","week_of_month: 2<br />week_day: Tue<br />value: 100.35357","week_of_month: 3<br />week_day: Tue<br />value: 100.69175","week_of_month: 4<br />week_day: Tue<br />value: 100.49973","week_of_month: 5<br />week_day: Tue<br />value: 101.07022"],[null,"week_of_month: 2<br />week_day: Mon<br />value: 100.13063","week_of_month: 3<br />week_day: Mon<br />value:  99.51582","week_of_month: 4<br />week_day: Mon<br />value:  99.64908","week_of_month: 5<br />week_day: Mon<br />value: 100.35698"],["week_of_month: 1<br />week_day: Sun<br />value: 100.66869","week_of_month: 2<br />week_day: Sun<br />value: 100.81484","week_of_month: 3<br />week_day: Sun<br />value: 101.22739","week_of_month: 4<br />week_day: Sun<br />value: 101.24728","week_of_month: 5<br />week_day: Sun<br />value: 100.63351"]],"colorscale":[[0,"#F84400"],[0.216239402384363,"#EC6E00"],[0.235944285955554,"#EB7100"],[0.274039705904557,"#E87600"],[0.505240853103017,"#D89500"],[0.523958649653741,"#D79800"],[0.531794936681008,"#D69900"],[0.547695483912779,"#D59A00"],[0.560595294955925,"#D49C00"],[0.576463983017881,"#D29E00"],[0.599763084283791,"#D0A100"],[0.611126806763891,"#D0A200"],[0.681260563355183,"#C9AA00"],[0.692990915612678,"#C8AB00"],[0.736389623245116,"#C4B000"],[0.75428704553434,"#C2B200"],[0.755222532481579,"#C2B200"],[0.776471647876865,"#C0B500"],[0.794471921852911,"#BEB700"],[0.794967946837258,"#BEB700"],[0.831253246981014,"#BBBA00"],[0.840925370098456,"#BABC00"],[0.847244411516369,"#B9BC00"],[0.847264388260577,"#B9BC00"],[0.881107258472839,"#B5C000"],[0.900369380140886,"#B3C200"],[0.947091927703965,"#ADC700"],[0.951320581401662,"#ADC700"],[0.972814544921274,"#AAC900"],[0.994531640974211,"#A7CC00"],[1,"#A7CC00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x6","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.531975205570567,0.548607867057314,0.509995342388223,0.654529383290467,0.473818756632071],[0.217410128872635,0.81582493511896,0.79296198985755,0.487332392345988,1],[0.192207742839762,0.130110897556888,0.813064813591579,0.892609919181602,0.875975202748464],[0.675971925923668,null,0.165116923263178,0.523464713878481,0.663742919663195],[0.798761211833014,null,0.453532508236638,0.733223943378311,0.434809701769704],[0.481022023348857,null,0.763043084807193,0.418545984170231,0.543993082023742],[0.539326404689665,0.77665595624208,null,0.528967367246139,0.343520909354772]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.68790","week_of_month: 2<br />week_day: Sat<br />value:  99.74874","week_of_month: 3<br />week_day: Sat<br />value:  99.60750","week_of_month: 4<br />week_day: Sat<br />value: 100.13618","week_of_month: 5<br />week_day: Sat<br />value:  99.47518"],["week_of_month: 1<br />week_day: Fri<br />value:  98.53729","week_of_month: 2<br />week_day: Fri<br />value: 100.72617","week_of_month: 2<br />week_day: Fri<br />value: 100.64254","week_of_month: 3<br />week_day: Fri<br />value:  99.52461","week_of_month: 4<br />week_day: Fri<br />value: 101.39984"],["week_of_month: 5<br />week_day: Fri<br />value:  98.44510","week_of_month: 1<br />week_day: Thu<br />value:  98.21796","week_of_month: 2<br />week_day: Thu<br />value: 100.71607","week_of_month: 3<br />week_day: Thu<br />value: 101.00703","week_of_month: 4<br />week_day: Thu<br />value: 100.94619"],["week_of_month: 5<br />week_day: Thu<br />value: 100.21461",null,"week_of_month: 2<br />week_day: Wed<br />value:  98.34601","week_of_month: 3<br />week_day: Wed<br />value:  99.65677","week_of_month: 4<br />week_day: Wed<br />value: 100.16988"],["week_of_month: 5<br />week_day: Wed<br />value: 100.66375",null,"week_of_month: 2<br />week_day: Tue<br />value:  99.40097","week_of_month: 3<br />week_day: Tue<br />value: 100.42403","week_of_month: 4<br />week_day: Tue<br />value:  99.33249"],["week_of_month: 5<br />week_day: Tue<br />value:  99.50153",null,"week_of_month: 2<br />week_day: Mon<br />value: 100.53310","week_of_month: 3<br />week_day: Mon<br />value:  99.27300","week_of_month: 4<br />week_day: Mon<br />value:  99.73186"],["week_of_month: 5<br />week_day: Mon<br />value:  99.71479","week_of_month: 1<br />week_day: Sun<br />value: 100.58290",null,"week_of_month: 3<br />week_day: Sun<br />value:  99.67690","week_of_month: 4<br />week_day: Sun<br />value:  98.99857"]],"colorscale":[[0,"#F64C00"],[0.130110897556888,"#EF6600"],[0.165116923263178,"#ED6B00"],[0.192207742839762,"#EB7000"],[0.217410128872635,"#E97400"],[0.343520909354772,"#E18500"],[0.418545984170231,"#DC8F00"],[0.434809701769704,"#DA9100"],[0.453532508236638,"#D99400"],[0.473818756632071,"#D79600"],[0.481022023348857,"#D79700"],[0.487332392345988,"#D69800"],[0.509995342388223,"#D59B00"],[0.523464713878481,"#D49C00"],[0.528967367246139,"#D39D00"],[0.531975205570567,"#D39D00"],[0.539326404689665,"#D29E00"],[0.543993082023742,"#D29F00"],[0.548607867057314,"#D19F00"],[0.654529383290467,"#C8AB00"],[0.663742919663195,"#C7AD00"],[0.675971925923668,"#C6AE00"],[0.733223943378311,"#C1B400"],[0.763043084807193,"#BEB800"],[0.77665595624208,"#BCB900"],[0.79296198985755,"#BABB00"],[0.798761211833014,"#BABB00"],[0.813064813591579,"#B8BD00"],[0.81582493511896,"#B8BD00"],[0.875975202748464,"#B1C400"],[0.892609919181602,"#AFC500"],[1,"#A1D000"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x7","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.525432374274225,0.339814449787142,0.581882726209083,0.728982016982745,null],[0.695381528187237,0.89388742089329,0.530880599928582,0.608338118336534,null],[0.710268298629157,0.627720774269442,0.941744634305685,0.335029416873571,null],[0.65222063847954,1,0.500847063096646,0,0.47633114610777],[null,0.0543123662802234,0.198550281405858,0.515606940853265,0.0934792333314385],[0.478241904339811,0.302363593421952,0.504266995103969,0.325574133565446,0.735771226738856],[0.68201099182875,0.841859442273135,0.630591599581224,null,0.297778113240925]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 100.13843","week_of_month: 2<br />week_day: Sat<br />value:  99.42665","week_of_month: 3<br />week_day: Sat<br />value: 100.35489","week_of_month: 4<br />week_day: Sat<br />value: 100.91896",null],["week_of_month: 1<br />week_day: Fri<br />value: 100.79012","week_of_month: 2<br />week_day: Fri<br />value: 101.55131","week_of_month: 3<br />week_day: Fri<br />value: 100.15932","week_of_month: 4<br />week_day: Fri<br />value: 100.45634",null],["week_of_month: 1<br />week_day: Thu<br />value: 100.84720","week_of_month: 2<br />week_day: Thu<br />value: 100.53066","week_of_month: 3<br />week_day: Thu<br />value: 101.73483","week_of_month: 4<br />week_day: Thu<br />value:  99.40830",null],["week_of_month: 1<br />week_day: Wed<br />value: 100.62461","week_of_month: 2<br />week_day: Wed<br />value: 101.95821","week_of_month: 2<br />week_day: Wed<br />value: 100.04415","week_of_month: 3<br />week_day: Wed<br />value:  98.12360","week_of_month: 4<br />week_day: Wed<br />value:  99.95014"],[null,"week_of_month: 1<br />week_day: Tue<br />value:  98.33186","week_of_month: 2<br />week_day: Tue<br />value:  98.88496","week_of_month: 3<br />week_day: Tue<br />value: 100.10075","week_of_month: 4<br />week_day: Tue<br />value:  98.48205"],["week_of_month: 5<br />week_day: Tue<br />value:  99.95747","week_of_month: 1<br />week_day: Mon<br />value:  99.28304","week_of_month: 2<br />week_day: Mon<br />value: 100.05727","week_of_month: 3<br />week_day: Mon<br />value:  99.37205","week_of_month: 4<br />week_day: Mon<br />value: 100.94500"],["week_of_month: 5<br />week_day: Mon<br />value: 100.73885","week_of_month: 1<br />week_day: Sun<br />value: 101.35180","week_of_month: 1<br />week_day: Sun<br />value: 100.54167",null,"week_of_month: 3<br />week_day: Sun<br />value:  99.26546"]],"colorscale":[[0,"#F06100"],[0.0543123662802234,"#ED6B00"],[0.0934792333314385,"#EA7100"],[0.198550281405858,"#E38100"],[0.297778113240925,"#DC8F00"],[0.302363593421952,"#DB9000"],[0.325574133565446,"#DA9300"],[0.335029416873571,"#D99400"],[0.339814449787142,"#D99500"],[0.448351979757674,"#CFA200"],[0.47633114610777,"#CDA600"],[0.478241904339811,"#CDA600"],[0.500847063096646,"#CAA900"],[0.504266995103969,"#CAA900"],[0.505492227933786,"#CAA900"],[0.515606940853265,"#C9AA00"],[0.525432374274225,"#C8AC00"],[0.530880599928582,"#C8AC00"],[0.581882726209083,"#C2B200"],[0.608338118336534,"#C0B500"],[0.627720774269442,"#BEB700"],[0.630591599581224,"#BDB800"],[0.65222063847954,"#BBBA00"],[0.68201099182875,"#B8BE00"],[0.695381528187237,"#B6BF00"],[0.710268298629157,"#B4C100"],[0.728982016982745,"#B2C300"],[0.735771226738856,"#B1C400"],[0.841859442273135,"#A3CF00"],[0.89388742089329,"#9BD500"],[0.941744634305685,"#93DA00"],[1,"#89E000"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x8","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.609144439433189,0,0.647786063626029,0.601975666821996,null],[0.915048486950087,0.741166847570869,0.442022111333119,0.541836313625422,null],[0.317665718561704,0.369944549362937,0.530495154902183,0.527599650203492,0.502373706392317],[0.0544875819773751,0.878531004858857,0.363088286698376,0.393482444976265,0.391555374581678],[null,0.514811993603003,0.0751061360744872,0.81456068966315,0.432823794967097],[null,0.409362165872286,0.347570422863857,0.706316527528172,1],[null,0.426957008070481,0.525681015521507,0.494731451635302,0.364771867318672]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 100.58571","week_of_month: 2<br />week_day: Sat<br />value:  98.73659","week_of_month: 3<br />week_day: Sat<br />value: 100.70301","week_of_month: 4<br />week_day: Sat<br />value: 100.56395",null],["week_of_month: 1<br />week_day: Fri<br />value: 101.51431","week_of_month: 2<br />week_day: Fri<br />value: 100.98647","week_of_month: 3<br />week_day: Fri<br />value: 100.07839","week_of_month: 4<br />week_day: Fri<br />value: 100.38139",null],["week_of_month: 1<br />week_day: Thu<br />value:  99.70090","week_of_month: 2<br />week_day: Thu<br />value:  99.85959","week_of_month: 3<br />week_day: Thu<br />value: 100.34696","week_of_month: 4<br />week_day: Thu<br />value: 100.33817","week_of_month: 5<br />week_day: Thu<br />value: 100.26160"],["week_of_month: 1<br />week_day: Wed<br />value:  98.90200","week_of_month: 2<br />week_day: Wed<br />value: 101.40346","week_of_month: 3<br />week_day: Wed<br />value:  99.83878","week_of_month: 4<br />week_day: Wed<br />value:  99.93105","week_of_month: 5<br />week_day: Wed<br />value:  99.92520"],[null,"week_of_month: 2<br />week_day: Tue<br />value: 100.29935","week_of_month: 3<br />week_day: Tue<br />value:  98.96459","week_of_month: 4<br />week_day: Tue<br />value: 101.20927","week_of_month: 5<br />week_day: Tue<br />value: 100.05047"],[null,"week_of_month: 2<br />week_day: Mon<br />value:  99.97925","week_of_month: 3<br />week_day: Mon<br />value:  99.79168","week_of_month: 4<br />week_day: Mon<br />value: 100.88068","week_of_month: 5<br />week_day: Mon<br />value: 101.77219"],[null,"week_of_month: 2<br />week_day: Sun<br />value: 100.03266","week_of_month: 2<br />week_day: Sun<br />value: 100.33235","week_of_month: 3<br />week_day: Sun<br />value: 100.23840","week_of_month: 4<br />week_day: Sun<br />value:  99.84389"]],"colorscale":[[0,"#E67C00"],[0.0544875819773751,"#E38200"],[0.0751061360744872,"#E28400"],[0.317665718561704,"#D39E00"],[0.347570422863857,"#D0A100"],[0.363088286698376,"#CFA200"],[0.364771867318672,"#CFA200"],[0.369944549362937,"#CFA300"],[0.391555374581678,"#CDA500"],[0.393482444976265,"#CDA500"],[0.409362165872286,"#CCA700"],[0.426957008070481,"#CBA800"],[0.432823794967097,"#CAA900"],[0.442022111333119,"#CAAA00"],[0.477126410422568,"#C7AD00"],[0.494731451635302,"#C6AF00"],[0.502373706392317,"#C5AF00"],[0.514811993603003,"#C4B000"],[0.525681015521507,"#C3B100"],[0.527599650203492,"#C3B200"],[0.530495154902183,"#C3B200"],[0.541836313625422,"#C2B300"],[0.601975666821996,"#BDB800"],[0.609144439433189,"#BCB900"],[0.647786063626029,"#B9BD00"],[0.706316527528172,"#B3C200"],[0.741166847570869,"#B0C500"],[0.81456068966315,"#A8CB00"],[0.878531004858857,"#A1D000"],[0.915048486950087,"#9DD400"],[1,"#92DB00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x9","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[1,2,3,4,5,6,7],"z":[[0.347149494334017,0.604376390321694,0.649980087823394,0,0.551606321930877,null],[0.476671238630919,0.177414554057545,0.76554627350342,0.110257609905731,0.764794337361419,0.438934537569052],[null,null,0.41387628628902,0.199334262035753,0.036015570819385,0.224208378161223],[null,null,0.559785766739819,0.297792162092293,0.441809231940873,0.103841222760766],[null,null,0.160401478132209,0.710557941715149,0.893600077102677,1],[null,null,0.0528505268233304,0.0164940289680238,0.13762772904093,0.816039607941879],[null,null,0.730620705347552,0.233560885577885,null,0.319083665952516]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.61304","week_of_month: 2<br />week_day: Sat<br />value: 100.58116","week_of_month: 3<br />week_day: Sat<br />value: 100.75280","week_of_month: 4<br />week_day: Sat<br />value:  98.30647","week_of_month: 5<br />week_day: Sat<br />value: 100.38255",null],["week_of_month: 1<br />week_day: Fri<br />value: 100.10052","week_of_month: 2<br />week_day: Fri<br />value:  98.97421","week_of_month: 3<br />week_day: Fri<br />value: 101.18775","week_of_month: 3<br />week_day: Fri<br />value:  98.72145","week_of_month: 4<br />week_day: Fri<br />value: 101.18492","week_of_month: 5<br />week_day: Fri<br />value:  99.95849"],[null,null,"week_of_month: 2<br />week_day: Thu<br />value:  99.86418","week_of_month: 3<br />week_day: Thu<br />value:  99.05671","week_of_month: 4<br />week_day: Thu<br />value:  98.44203","week_of_month: 5<br />week_day: Thu<br />value:  99.15032"],[null,null,"week_of_month: 2<br />week_day: Wed<br />value: 100.41333","week_of_month: 3<br />week_day: Wed<br />value:  99.42727","week_of_month: 4<br />week_day: Wed<br />value:  99.96931","week_of_month: 5<br />week_day: Wed<br />value:  98.69730"],[null,null,"week_of_month: 2<br />week_day: Tue<br />value:  98.91018","week_of_month: 3<br />week_day: Tue<br />value: 100.98079","week_of_month: 4<br />week_day: Tue<br />value: 101.66971","week_of_month: 5<br />week_day: Tue<br />value: 102.07016"],[null,null,"week_of_month: 2<br />week_day: Mon<br />value:  98.50539","week_of_month: 3<br />week_day: Mon<br />value:  98.36855","week_of_month: 4<br />week_day: Mon<br />value:  98.82446","week_of_month: 5<br />week_day: Mon<br />value: 101.37779"],[null,null,"week_of_month: 2<br />week_day: Sun<br />value: 101.05630","week_of_month: 2<br />week_day: Sun<br />value:  99.18552",null,"week_of_month: 4<br />week_day: Sun<br />value:  99.50741"]],"colorscale":[[0,"#ED6A00"],[0.0164940289680238,"#EC6C00"],[0.036015570819385,"#EB6F00"],[0.0528505268233304,"#EA7200"],[0.103841222760766,"#E77A00"],[0.110257609905731,"#E67B00"],[0.13762772904093,"#E47F00"],[0.160401478132209,"#E38200"],[0.177414554057545,"#E28500"],[0.199334262035753,"#E08800"],[0.224208378161223,"#DE8B00"],[0.233560885577885,"#DD8C00"],[0.297792162092293,"#D89500"],[0.319083665952516,"#D79700"],[0.347149494334017,"#D49B00"],[0.375574808711053,"#D29E00"],[0.41387628628902,"#CFA300"],[0.438934537569052,"#CDA600"],[0.441809231940873,"#CCA600"],[0.476671238630919,"#C9AA00"],[0.551606321930877,"#C2B300"],[0.559785766739819,"#C1B400"],[0.604376390321694,"#BCB900"],[0.649980087823394,"#B7BE00"],[0.696434787255251,"#B2C300"],[0.710557941715149,"#B0C500"],[0.730620705347552,"#ADC700"],[0.764794337361419,"#A9CA00"],[0.76554627350342,"#A9CA00"],[0.816039607941879,"#A2D000"],[0.893600077102677,"#96D800"],[1,"#83E300"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x10","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.647907941718311,0.221126353116418,0.807316816349266,0.192622444581464,null],[0.442763874742016,0.872748352695415,0.120420949634978,0.235426570239361,null],[0.587143920525543,0.639045604662979,0.793967226071716,0.733163421171663,null],[0.118077959369308,0.666459667654492,0.154723637948172,1,0.323718859195059],[null,0.798107803098051,0.521818614096268,0.298383988124093,0.895576131429349],[0.256444429319618,0.0260984924593689,0.537118147866186,0.497413390314123,0.673686182594749],[0,null,0.540356505186053,0.841472756869723,null]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.99297","week_of_month: 2<br />week_day: Sat<br />value:  98.81902","week_of_month: 3<br />week_day: Sat<br />value: 100.43146","week_of_month: 4<br />week_day: Sat<br />value:  98.74062",null],["week_of_month: 1<br />week_day: Fri<br />value:  99.42868","week_of_month: 2<br />week_day: Fri<br />value: 100.61144","week_of_month: 3<br />week_day: Fri<br />value:  98.54201","week_of_month: 4<br />week_day: Fri<br />value:  98.85836",null],["week_of_month: 1<br />week_day: Thu<br />value:  99.82583","week_of_month: 2<br />week_day: Thu<br />value:  99.96859","week_of_month: 3<br />week_day: Thu<br />value: 100.39474","week_of_month: 4<br />week_day: Thu<br />value: 100.22748",null],["week_of_month: 1<br />week_day: Wed<br />value:  98.53557","week_of_month: 2<br />week_day: Wed<br />value: 100.04400","week_of_month: 3<br />week_day: Wed<br />value:  98.63637","week_of_month: 3<br />week_day: Wed<br />value: 100.96147","week_of_month: 4<br />week_day: Wed<br />value:  99.10122"],[null,"week_of_month: 1<br />week_day: Tue<br />value: 100.40612","week_of_month: 2<br />week_day: Tue<br />value:  99.64614","week_of_month: 3<br />week_day: Tue<br />value:  99.03153","week_of_month: 4<br />week_day: Tue<br />value: 100.67423"],["week_of_month: 5<br />week_day: Tue<br />value:  98.91617","week_of_month: 1<br />week_day: Mon<br />value:  98.28256","week_of_month: 2<br />week_day: Mon<br />value:  99.68822","week_of_month: 3<br />week_day: Mon<br />value:  99.57900","week_of_month: 4<br />week_day: Mon<br />value: 100.06388"],["week_of_month: 5<br />week_day: Mon<br />value:  98.21077",null,"week_of_month: 2<br />week_day: Sun<br />value:  99.69713","week_of_month: 2<br />week_day: Sun<br />value: 100.52541",null]],"colorscale":[[0,"#EF6500"],[0.0260984924593689,"#EE6800"],[0.0984947691810106,"#EA7100"],[0.118077959369308,"#EA7300"],[0.120420949634978,"#E97400"],[0.154723637948172,"#E87800"],[0.192622444581464,"#E67C00"],[0.221126353116418,"#E47F00"],[0.235426570239361,"#E48000"],[0.256444429319618,"#E38200"],[0.298383988124093,"#E08700"],[0.323718859195059,"#DF8900"],[0.442763874742016,"#D89500"],[0.497413390314123,"#D59A00"],[0.521818614096268,"#D49C00"],[0.522461811036602,"#D49C00"],[0.537118147866186,"#D39D00"],[0.540356505186053,"#D39E00"],[0.587143920525543,"#D0A200"],[0.639045604662979,"#CCA600"],[0.647907941718311,"#CCA700"],[0.666459667654492,"#CAA900"],[0.673686182594749,"#CAA900"],[0.733163421171663,"#C6AE00"],[0.793967226071716,"#C1B300"],[0.798107803098051,"#C1B400"],[0.807316816349266,"#C0B400"],[0.841472756869723,"#BEB700"],[0.872748352695415,"#BBBA00"],[0.895576131429349,"#B9BC00"],[1,"#B1C400"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x11","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.317900082190684,0.39395807881751,0.568848104035884,0.604372257692471,null],[0.231326100674446,0.0640414830882016,0.267293266361962,0.483934461732982,0.215458111797551],[0.622280822740056,0.519946877518288,0.264338448763246,0.729196389551456,0.351948866181174],[0.523647710688666,0.755693299712635,0.863355964269033,0.436167046465999,0.26153571753467],[null,0.193217434501128,0,0.381105770047222,0.453114380369053],[null,0.488925013330944,0.379448047133106,1,0.394082913984413],[null,0.735262399340963,0.5701985779584,0.146943996452925,0.727531835987947]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  99.51576","week_of_month: 2<br />week_day: Sat<br />value:  99.84148","week_of_month: 3<br />week_day: Sat<br />value: 100.59044","week_of_month: 4<br />week_day: Sat<br />value: 100.74257",null],["week_of_month: 1<br />week_day: Fri<br />value:  99.14501","week_of_month: 2<br />week_day: Fri<br />value:  98.42862","week_of_month: 3<br />week_day: Fri<br />value:  99.29904","week_of_month: 4<br />week_day: Fri<br />value: 100.22680","week_of_month: 5<br />week_day: Fri<br />value:  99.07706"],["week_of_month: 1<br />week_day: Thu<br />value: 100.81926","week_of_month: 2<br />week_day: Thu<br />value: 100.38102","week_of_month: 3<br />week_day: Thu<br />value:  99.28638","week_of_month: 4<br />week_day: Thu<br />value: 101.27713","week_of_month: 5<br />week_day: Thu<br />value:  99.66157"],["week_of_month: 1<br />week_day: Wed<br />value: 100.39687","week_of_month: 2<br />week_day: Wed<br />value: 101.39060","week_of_month: 3<br />week_day: Wed<br />value: 101.85166","week_of_month: 4<br />week_day: Wed<br />value: 100.02224","week_of_month: 5<br />week_day: Wed<br />value:  99.27438"],[null,"week_of_month: 2<br />week_day: Tue<br />value:  98.98181","week_of_month: 3<br />week_day: Tue<br />value:  98.15436","week_of_month: 4<br />week_day: Tue<br />value:  99.78644","week_of_month: 5<br />week_day: Tue<br />value: 100.09481"],[null,"week_of_month: 2<br />week_day: Mon<br />value: 100.24817","week_of_month: 3<br />week_day: Mon<br />value:  99.77934","week_of_month: 4<br />week_day: Mon<br />value: 102.43684","week_of_month: 5<br />week_day: Mon<br />value:  99.84201"],[null,"week_of_month: 2<br />week_day: Sun<br />value: 101.30310","week_of_month: 3<br />week_day: Sun<br />value: 100.59622","week_of_month: 3<br />week_day: Sun<br />value:  98.78365","week_of_month: 4<br />week_day: Sun<br />value: 101.27000"]],"colorscale":[[0,"#F06300"],[0.0640414830882016,"#EB6F00"],[0.146943996452925,"#E57D00"],[0.193217434501128,"#E18500"],[0.215458111797551,"#E08800"],[0.224174735820536,"#DF8A00"],[0.231326100674446,"#DE8B00"],[0.26153571753467,"#DC8F00"],[0.264338448763246,"#DB9000"],[0.267293266361962,"#DB9000"],[0.317900082190684,"#D79800"],[0.351948866181174,"#D39C00"],[0.379448047133106,"#D1A000"],[0.381105770047222,"#D1A000"],[0.39395807881751,"#CFA200"],[0.394082913984413,"#CFA200"],[0.436167046465999,"#CBA800"],[0.453114380369053,"#C9AA00"],[0.483934461732982,"#C6AE00"],[0.488925013330944,"#C5AF00"],[0.519946877518288,"#C2B300"],[0.523647710688666,"#C1B300"],[0.568848104035884,"#BCB900"],[0.5701985779584,"#BCB900"],[0.604372257692471,"#B7BE00"],[0.622280822740056,"#B5C000"],[0.727531835987947,"#A6CD00"],[0.729196389551456,"#A6CD00"],[0.735262399340963,"#A5CE00"],[0.755693299712635,"#A1D000"],[0.863355964269033,"#8EDD00"],[1,"#6DED00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x12","yaxis":"y2","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6],"y":[1,2,3,4,5,6,7],"z":[[0.864340233395859,0.686965130194856,0.80512367243024,0.642200382028238,0.554552040904898,null],[null,0.395712549440844,0.754280347730328,0.456450159037771,0.844277671137548,0.597477480942612],[null,null,1,0.432608861472995,0.534853757739211,0.401261990040848],[null,null,0.563852782244253,0.695247596484514,0.618707847526374,0.944079196929258],[null,null,0.696279876354922,0.576314325300019,0.828968856576015,0.584508475634902],[null,null,0.936131585708615,0.806724912629309,0,0.488790777178798],[0.503060786759378,null,0.824485525972704,0.579457961396937,0.988248863138153,null]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 101.30871","week_of_month: 2<br />week_day: Sat<br />value: 100.56869","week_of_month: 3<br />week_day: Sat<br />value: 101.06165","week_of_month: 4<br />week_day: Sat<br />value: 100.38193","week_of_month: 5<br />week_day: Sat<br />value: 100.01626",null],[null,"week_of_month: 2<br />week_day: Fri<br />value:  99.35357","week_of_month: 3<br />week_day: Fri<br />value: 100.84953","week_of_month: 4<br />week_day: Fri<br />value:  99.60697","week_of_month: 4<br />week_day: Fri<br />value: 101.22501","week_of_month: 5<br />week_day: Fri<br />value: 100.19534"],[null,null,"week_of_month: 2<br />week_day: Thu<br />value: 101.87469","week_of_month: 3<br />week_day: Thu<br />value:  99.50750","week_of_month: 4<br />week_day: Thu<br />value:  99.93408","week_of_month: 5<br />week_day: Thu<br />value:  99.37672"],[null,null,"week_of_month: 2<br />week_day: Wed<br />value: 100.05506","week_of_month: 3<br />week_day: Wed<br />value: 100.60325","week_of_month: 4<br />week_day: Wed<br />value: 100.28392","week_of_month: 5<br />week_day: Wed<br />value: 101.64138"],[null,null,"week_of_month: 2<br />week_day: Tue<br />value: 100.60755","week_of_month: 3<br />week_day: Tue<br />value: 100.10705","week_of_month: 4<br />week_day: Tue<br />value: 101.16114","week_of_month: 5<br />week_day: Tue<br />value: 100.14124"],[null,null,"week_of_month: 2<br />week_day: Mon<br />value: 101.60823","week_of_month: 3<br />week_day: Mon<br />value: 101.06833","week_of_month: 4<br />week_day: Mon<br />value:  97.70264","week_of_month: 5<br />week_day: Mon<br />value:  99.74190"],["week_of_month: 6<br />week_day: Mon<br />value:  99.80143",null,"week_of_month: 2<br />week_day: Sun<br />value: 101.14243","week_of_month: 3<br />week_day: Sun<br />value: 100.12017","week_of_month: 3<br />week_day: Sun<br />value: 101.82566",null]],"colorscale":[[0,"#F74A00"],[0.395712549440844,"#DA9200"],[0.401261990040848,"#DA9300"],[0.432608861472995,"#D79700"],[0.443862863441798,"#D69900"],[0.456450159037771,"#D59B00"],[0.488790777178798,"#D29F00"],[0.503060786759378,"#D0A100"],[0.504786514537263,"#D0A100"],[0.534853757739211,"#CDA500"],[0.554552040904898,"#CBA800"],[0.563852782244253,"#CAA900"],[0.576314325300019,"#C9AB00"],[0.579457961396937,"#C9AB00"],[0.584508475634902,"#C8AC00"],[0.597477480942612,"#C7AD00"],[0.618707847526374,"#C4B000"],[0.642200382028238,"#C2B300"],[0.686965130194856,"#BDB900"],[0.695247596484514,"#BCBA00"],[0.696279876354922,"#BBBA00"],[0.754280347730328,"#B4C100"],[0.80512367243024,"#ADC700"],[0.806724912629309,"#ADC700"],[0.824485525972704,"#AAC900"],[0.828968856576015,"#AACA00"],[0.844277671137548,"#A8CB00"],[0.864340233395859,"#A5CE00"],[0.936131585708615,"#99D600"],[0.944079196929258,"#97D700"],[0.988248863138153,"#8FDC00"],[1,"#8DDD00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.542008587538905,0,0.524480729292634,0.582637718612374,null],[0.277498154030775,0.782724086486666,0.482867771997492,0.457265777834529,null],[0.766068504590096,0.652626298780602,0.449469804600623,0.784080683678568,null],[0.529944901127236,0.421853362460499,0.322613526711939,0.0796115665263683,0.495612135831554],[null,0.144085503819802,0.749577714114636,0.00546136736011485,0.688264398003954],[null,null,0.609062857328329,1,0.330669484142777],[0.358386719456999,null,0.621438302187224,0.497530605871139,0.134517392007052]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 100.30488","week_of_month: 2<br />week_day: Sat<br />value:  97.80255","week_of_month: 3<br />week_day: Sat<br />value: 100.22395","week_of_month: 4<br />week_day: Sat<br />value: 100.49245",null],["week_of_month: 1<br />week_day: Fri<br />value:  99.08370","week_of_month: 2<br />week_day: Fri<br />value: 101.41620","week_of_month: 3<br />week_day: Fri<br />value: 100.03184","week_of_month: 4<br />week_day: Fri<br />value:  99.91364",null],["week_of_month: 1<br />week_day: Thu<br />value: 101.33931","week_of_month: 2<br />week_day: Thu<br />value: 100.81557","week_of_month: 3<br />week_day: Thu<br />value:  99.87765","week_of_month: 4<br />week_day: Thu<br />value: 101.42247",null],["week_of_month: 1<br />week_day: Wed<br />value: 100.24918","week_of_month: 2<br />week_day: Wed<br />value:  99.75015","week_of_month: 3<br />week_day: Wed<br />value:  99.29198","week_of_month: 4<br />week_day: Wed<br />value:  98.17010","week_of_month: 4<br />week_day: Wed<br />value: 100.09068"],[null,"week_of_month: 1<br />week_day: Tue<br />value:  98.46776","week_of_month: 2<br />week_day: Tue<br />value: 101.26317","week_of_month: 3<br />week_day: Tue<br />value:  97.82777","week_of_month: 4<br />week_day: Tue<br />value: 100.98010"],[null,null,"week_of_month: 2<br />week_day: Mon<br />value: 100.61445","week_of_month: 3<br />week_day: Mon<br />value: 102.41931","week_of_month: 4<br />week_day: Mon<br />value:  99.32917"],["week_of_month: 5<br />week_day: Mon<br />value:  99.45714",null,"week_of_month: 2<br />week_day: Sun<br />value: 100.67158","week_of_month: 3<br />week_day: Sun<br />value: 100.09953","week_of_month: 3<br />week_day: Sun<br />value:  98.42359"]],"colorscale":[[0,"#F55000"],[0.00546136736011485,"#F55100"],[0.0796115665263683,"#F06300"],[0.134517392007052,"#EB6F00"],[0.144085503819802,"#EB7100"],[0.277498154030775,"#DF8900"],[0.285451177224272,"#DF8A00"],[0.322613526711939,"#DB9000"],[0.330669484142777,"#DB9100"],[0.358386719456999,"#D89600"],[0.421853362460499,"#D19F00"],[0.449469804600623,"#CEA300"],[0.457265777834529,"#CEA500"],[0.482867771997492,"#CBA800"],[0.495612135831554,"#C9AA00"],[0.497530605871139,"#C9AA00"],[0.524480729292634,"#C6AE00"],[0.529944901127236,"#C5AF00"],[0.542008587538905,"#C4B100"],[0.582637718612374,"#BFB600"],[0.609062857328329,"#BBBA00"],[0.621438302187224,"#BABC00"],[0.652626298780602,"#B5C000"],[0.688264398003954,"#B0C500"],[0.749577714114636,"#A6CD00"],[0.766068504590096,"#A3CF00"],[0.782724086486666,"#A0D100"],[0.784080683678568,"#A0D100"],[1,"#6EEC00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x2","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0.503914865090336,0.489906548731505,1,0.436917282753948,null],[0.771060282141629,0.717772719121236,0.495881549844752,0.386359927068284,null],[0.597433854304197,0.760918142912256,0.454865342780675,0.604176460566647,0.281307788800778],[0.0973366283663388,0.00412147845904577,0,0.538941102638037,0.0382332526324906],[0.627690290602667,0.324489102025524,0.340791035549525,0.552664870700552,0.454682328053404],[null,0.29464048039583,0.215721814666367,0.366050947717263,0.44211509965671],[null,0.423444521664967,0.584639161214648,0.328986958800807,0.461613347575632]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 100.38431","week_of_month: 2<br />week_day: Sat<br />value: 100.33455","week_of_month: 3<br />week_day: Sat<br />value: 102.14649","week_of_month: 4<br />week_day: Sat<br />value: 100.14632",null],["week_of_month: 1<br />week_day: Fri<br />value: 101.33326","week_of_month: 2<br />week_day: Fri<br />value: 101.14397","week_of_month: 3<br />week_day: Fri<br />value: 100.35577","week_of_month: 4<br />week_day: Fri<br />value:  99.96673",null],["week_of_month: 1<br />week_day: Thu<br />value: 100.71651","week_of_month: 2<br />week_day: Thu<br />value: 101.29723","week_of_month: 3<br />week_day: Thu<br />value: 100.21008","week_of_month: 4<br />week_day: Thu<br />value: 100.74046","week_of_month: 5<br />week_day: Thu<br />value:  99.59357"],["week_of_month: 1<br />week_day: Wed<br />value:  98.94007","week_of_month: 2<br />week_day: Wed<br />value:  98.60895","week_of_month: 3<br />week_day: Wed<br />value:  98.59431","week_of_month: 4<br />week_day: Wed<br />value: 100.50873","week_of_month: 5<br />week_day: Wed<br />value:  98.73012"],["week_of_month: 1<br />week_day: Tue<br />value: 100.82398","week_of_month: 2<br />week_day: Tue<br />value:  99.74695","week_of_month: 3<br />week_day: Tue<br />value:  99.80486","week_of_month: 4<br />week_day: Tue<br />value: 100.55748","week_of_month: 5<br />week_day: Tue<br />value: 100.20943"],[null,"week_of_month: 2<br />week_day: Mon<br />value:  99.64093","week_of_month: 3<br />week_day: Mon<br />value:  99.36059","week_of_month: 4<br />week_day: Mon<br />value:  99.89459","week_of_month: 5<br />week_day: Mon<br />value: 100.16478"],[null,"week_of_month: 2<br />week_day: Sun<br />value: 100.09846","week_of_month: 3<br />week_day: Sun<br />value: 100.67106","week_of_month: 4<br />week_day: Sun<br />value:  99.76293","week_of_month: 4<br />week_day: Sun<br />value: 100.23405"]],"colorscale":[[0,"#E87600"],[0.00412147845904577,"#E87600"],[0.0382332526324906,"#E67B00"],[0.0973366283663388,"#E28300"],[0.215721814666367,"#DA9200"],[0.281307788800778,"#D59A00"],[0.29464048039583,"#D49C00"],[0.324489102025524,"#D19F00"],[0.328986958800807,"#D1A000"],[0.340791035549525,"#D0A100"],[0.366050947717263,"#CEA400"],[0.386359927068284,"#CCA600"],[0.423444521664967,"#C9AA00"],[0.436917282753948,"#C8AC00"],[0.44211509965671,"#C7AC00"],[0.454682328053404,"#C6AE00"],[0.454865342780675,"#C6AE00"],[0.461613347575632,"#C6AE00"],[0.469192209773942,"#C5AF00"],[0.489906548731505,"#C3B200"],[0.495881549844752,"#C2B200"],[0.503914865090336,"#C2B300"],[0.538941102638037,"#BEB700"],[0.552664870700552,"#BDB800"],[0.584639161214648,"#BABC00"],[0.597433854304197,"#B8BD00"],[0.604176460566647,"#B7BE00"],[0.627690290602667,"#B5C000"],[0.717772719121236,"#AAC900"],[0.760918142912256,"#A5CE00"],[0.771060282141629,"#A4CF00"],[1,"#7FE500"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x3","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[0,0.141579554557514,0.121434550055024,0.345779798539351,0.786592147883744],[0.749990095999906,0.600653597963765,0.28610392409936,0.739404584085126,0.0221223691923822],[0.67721240902156,null,0.515730913783278,0.027335713416229,0.2530306569055],[0.681612306557717,null,0.459897717466778,0.399440421881916,0.449857131652235],[0.381066609529024,null,0.761904115306672,0.664794860819366,0.795340428614473],[0.275466675431259,null,0.466882738701779,0.768253186243068,1],[0.029325325797339,null,0.515292067599367,0.478650339875592,0.0250588656946376]],"text":[["week_of_month: 1<br />week_day: Sat<br />value:  98.65598","week_of_month: 2<br />week_day: Sat<br />value:  99.09162","week_of_month: 3<br />week_day: Sat<br />value:  99.02963","week_of_month: 4<br />week_day: Sat<br />value:  99.71994","week_of_month: 5<br />week_day: Sat<br />value: 101.07632"],["week_of_month: 1<br />week_day: Fri<br />value: 100.96370","week_of_month: 2<br />week_day: Fri<br />value: 100.50419","week_of_month: 3<br />week_day: Fri<br />value:  99.53632","week_of_month: 4<br />week_day: Fri<br />value: 100.93112","week_of_month: 5<br />week_day: Fri<br />value:  98.72405"],["week_of_month: 5<br />week_day: Fri<br />value: 100.73976",null,"week_of_month: 2<br />week_day: Thu<br />value: 100.24288","week_of_month: 3<br />week_day: Thu<br />value:  98.74009","week_of_month: 4<br />week_day: Thu<br />value:  99.43455"],["week_of_month: 5<br />week_day: Thu<br />value: 100.75330",null,"week_of_month: 2<br />week_day: Wed<br />value: 100.07108","week_of_month: 3<br />week_day: Wed<br />value:  99.88505","week_of_month: 4<br />week_day: Wed<br />value: 100.04019"],["week_of_month: 5<br />week_day: Wed<br />value:  99.82852",null,"week_of_month: 2<br />week_day: Tue<br />value: 101.00036","week_of_month: 3<br />week_day: Tue<br />value: 100.70155","week_of_month: 4<br />week_day: Tue<br />value: 101.10324"],["week_of_month: 5<br />week_day: Tue<br />value:  99.50359",null,"week_of_month: 2<br />week_day: Mon<br />value: 100.09257","week_of_month: 3<br />week_day: Mon<br />value: 101.01989","week_of_month: 4<br />week_day: Mon<br />value: 101.73298"],["week_of_month: 5<br />week_day: Mon<br />value:  98.74621",null,"week_of_month: 2<br />week_day: Sun<br />value: 100.24153","week_of_month: 3<br />week_day: Sun<br />value: 100.12878","week_of_month: 4<br />week_day: Sun<br />value:  98.73308"]],"colorscale":[[0,"#E77800"],[0.0221223691923822,"#E67B00"],[0.0250588656946376,"#E67B00"],[0.027335713416229,"#E67C00"],[0.029325325797339,"#E67C00"],[0.121434550055024,"#E18700"],[0.141579554557514,"#DF8900"],[0.2530306569055,"#D89500"],[0.275466675431259,"#D79700"],[0.28610392409936,"#D69800"],[0.345779798539351,"#D29E00"],[0.350190964877872,"#D29F00"],[0.381066609529024,"#D0A200"],[0.399440421881916,"#CEA400"],[0.449857131652235,"#CBA900"],[0.459897717466778,"#CAA900"],[0.466882738701779,"#C9AA00"],[0.478650339875592,"#C8AB00"],[0.515292067599367,"#C5AF00"],[0.515730913783278,"#C5AF00"],[0.600653597963765,"#BEB700"],[0.664794860819366,"#B9BC00"],[0.67721240902156,"#B7BE00"],[0.681612306557717,"#B7BE00"],[0.739404584085126,"#B2C300"],[0.749990095999906,"#B0C400"],[0.761904115306672,"#AFC500"],[0.768253186243068,"#AFC600"],[0.786592147883744,"#ADC700"],[0.795340428614473,"#ACC800"],[1,"#93DA00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x4","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5],"y":[1,2,3,4,5,6,7],"z":[[1,0.751515667021313,0.690015786101573,0.59929235255501,null],[0.17251451843798,0.33350335397046,0.435038756866348,0.152441209597734,null],[0.832575577307493,0.346954337728782,0.207252578033536,0.151739834227342,null],[0.369407971730469,0.169571479862495,0.29157806389198,0.615745429650401,null],[0.368162137133149,0.799402122087457,0.611580391828038,0.252893889998804,0.505394400045091],[0.394270203351599,0,0.212803063264751,0.494294098244029,0.593316650893154],[0.348336114534888,0.339588114622172,0.597246232897441,0.395147892011011,0.118065519239117]],"text":[["week_of_month: 1<br />week_day: Sat<br />value: 102.96846","week_of_month: 2<br />week_day: Sat<br />value: 101.72480","week_of_month: 3<br />week_day: Sat<br />value: 101.41699","week_of_month: 4<br />week_day: Sat<br />value: 100.96292",null],["week_of_month: 1<br />week_day: Fri<br />value:  98.82690","week_of_month: 2<br />week_day: Fri<br />value:  99.63265","week_of_month: 3<br />week_day: Fri<br />value: 100.14084","week_of_month: 4<br />week_day: Fri<br />value:  98.72644",null],["week_of_month: 1<br />week_day: Thu<br />value: 102.13050","week_of_month: 2<br />week_day: Thu<br />value:  99.69997","week_of_month: 3<br />week_day: Thu<br />value:  99.00077","week_of_month: 4<br />week_day: Thu<br />value:  98.72293",null],["week_of_month: 1<br />week_day: Wed<br />value:  99.81235","week_of_month: 2<br />week_day: Wed<br />value:  98.81217","week_of_month: 3<br />week_day: Wed<br />value:  99.42282","week_of_month: 4<br />week_day: Wed<br />value: 101.04527",null],["week_of_month: 1<br />week_day: Tue<br />value:  99.80612","week_of_month: 2<br />week_day: Tue<br />value: 101.96447","week_of_month: 3<br />week_day: Tue<br />value: 101.02442","week_of_month: 4<br />week_day: Tue<br />value:  99.22920","week_of_month: 5<br />week_day: Tue<br />value: 100.49296"],["week_of_month: 1<br />week_day: Mon<br />value:  99.93679","week_of_month: 2<br />week_day: Mon<br />value:  97.96347","week_of_month: 3<br />week_day: Mon<br />value:  99.02855","week_of_month: 4<br />week_day: Mon<br />value: 100.43741","week_of_month: 5<br />week_day: Mon<br />value: 100.93301"],["week_of_month: 1<br />week_day: Sun<br />value:  99.70689","week_of_month: 2<br />week_day: Sun<br />value:  99.66311","week_of_month: 3<br />week_day: Sun<br />value: 100.95268","week_of_month: 4<br />week_day: Sun<br />value:  99.94118","week_of_month: 4<br />week_day: Sun<br />value:  98.55439"]],"colorscale":[[0,"#F35900"],[0.118065519239117,"#E97400"],[0.151739834227342,"#E67B00"],[0.152441209597734,"#E67B00"],[0.169571479862495,"#E57E00"],[0.17251451843798,"#E47F00"],[0.207252578033536,"#E18600"],[0.212803063264751,"#E18700"],[0.252893889998804,"#DD8E00"],[0.29157806389198,"#D99400"],[0.33350335397046,"#D49B00"],[0.339588114622172,"#D39C00"],[0.346954337728782,"#D39E00"],[0.348336114534888,"#D29E00"],[0.368162137133149,"#D0A100"],[0.369407971730469,"#D0A100"],[0.394270203351599,"#CDA500"],[0.395147892011011,"#CDA500"],[0.435038756866348,"#C8AC00"],[0.494294098244029,"#C0B500"],[0.505394400045091,"#BFB600"],[0.593316650893154,"#B1C300"],[0.597246232897441,"#B1C400"],[0.59929235255501,"#B0C400"],[0.611580391828038,"#AEC600"],[0.615745429650401,"#AEC600"],[0.690015786101573,"#A0D100"],[0.751515667021313,"#94D900"],[0.799402122087457,"#88E000"],[0.832575577307493,"#80E400"],[1,"#37FB00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x5","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[5],"y":[4],"z":[[0.5]],"text":[["week_of_month: 5<br />week_day: Wed<br />value: 101.18015"]],"colorscale":[[0.5,"#A9CA00"]],"type":"heatmap","showscale":false,"autocolorscale":false,"showlegend":false,"xaxis":"x6","yaxis":"y3","hoverinfo":"text","frame":null},{"x":[2],"y":[1],"name":"99_678b4b7e30538c034664412d10e94a3e","type":"scatter","mode":"markers","opacity":0,"hoverinfo":"skip","showlegend":false,"marker":{"color":[0,1],"colorscale":[[0,"#FF0000"],[0.00334448160535045,"#FF0700"],[0.00668896321070325,"#FE0E00"],[0.0100334448160537,"#FE1300"],[0.0133779264214041,"#FE1700"],[0.0167224080267569,"#FE1B00"],[0.0200668896321074,"#FD1E00"],[0.0234113712374578,"#FD2100"],[0.0267558528428083,"#FD2400"],[0.0301003344481611,"#FD2700"],[0.0334448160535115,"#FC2900"],[0.036789297658862,"#FC2B00"],[0.0401337792642148,"#FC2D00"],[0.0434782608695652,"#FC3000"],[0.0468227424749157,"#FB3100"],[0.0501672240802685,"#FB3300"],[0.0535117056856189,"#FB3500"],[0.0568561872909694,"#FA3700"],[0.0602006688963222,"#FA3900"],[0.0635451505016726,"#FA3A00"],[0.066889632107023,"#FA3C00"],[0.0702341137123735,"#F93D00"],[0.0735785953177263,"#F93F00"],[0.0769230769230767,"#F94100"],[0.0802675585284272,"#F84200"],[0.08361204013378,"#F84300"],[0.0869565217391304,"#F84500"],[0.0903010033444809,"#F84600"],[0.0936454849498337,"#F74700"],[0.0969899665551841,"#F74900"],[0.100334448160535,"#F74A00"],[0.103678929765887,"#F64B00"],[0.107023411371238,"#F64D00"],[0.110367892976588,"#F64E00"],[0.113712374581939,"#F54F00"],[0.117056856187292,"#F55000"],[0.120401337792642,"#F55100"],[0.123745819397992,"#F55300"],[0.127090301003345,"#F45400"],[0.130434782608696,"#F45500"],[0.133779264214046,"#F45600"],[0.137123745819399,"#F35700"],[0.140468227424749,"#F35800"],[0.1438127090301,"#F35900"],[0.147157190635453,"#F25A00"],[0.150501672240803,"#F25B00"],[0.153846153846153,"#F25C00"],[0.157190635451504,"#F15D00"],[0.160535117056857,"#F15E00"],[0.163879598662207,"#F15F00"],[0.167224080267558,"#F16000"],[0.17056856187291,"#F06100"],[0.173913043478261,"#F06200"],[0.177257525083611,"#F06300"],[0.180602006688964,"#EF6400"],[0.183946488294315,"#EF6500"],[0.187290969899665,"#EF6600"],[0.190635451505018,"#EE6700"],[0.193979933110368,"#EE6800"],[0.197324414715719,"#EE6900"],[0.200668896321069,"#ED6A00"],[0.204013377926422,"#ED6B00"],[0.207357859531772,"#ED6C00"],[0.210702341137123,"#EC6C00"],[0.214046822742476,"#EC6D00"],[0.217391304347826,"#EC6E00"],[0.220735785953177,"#EB6F00"],[0.224080267558529,"#EB7000"],[0.22742474916388,"#EB7100"],[0.23076923076923,"#EA7200"],[0.234113712374583,"#EA7300"],[0.237458193979933,"#EA7300"],[0.240802675585284,"#E97400"],[0.244147157190634,"#E97500"],[0.247491638795987,"#E87600"],[0.250836120401338,"#E87700"],[0.254180602006688,"#E87800"],[0.257525083612041,"#E77800"],[0.260869565217391,"#E77900"],[0.264214046822742,"#E77A00"],[0.267558528428095,"#E67B00"],[0.270903010033445,"#E67C00"],[0.274247491638795,"#E67C00"],[0.277591973244148,"#E57D00"],[0.280936454849499,"#E57E00"],[0.284280936454849,"#E47F00"],[0.2876254180602,"#E47F00"],[0.290969899665552,"#E48000"],[0.294314381270903,"#E38100"],[0.297658862876253,"#E38200"],[0.301003344481606,"#E38200"],[0.304347826086957,"#E28300"],[0.307692307692307,"#E28400"],[0.31103678929766,"#E18500"],[0.31438127090301,"#E18500"],[0.317725752508361,"#E18600"],[0.321070234113713,"#E08700"],[0.324414715719064,"#E08800"],[0.327759197324414,"#E08800"],[0.331103678929765,"#DF8900"],[0.334448160535118,"#DF8A00"],[0.337792642140468,"#DE8B00"],[0.341137123745819,"#DE8B00"],[0.344481605351171,"#DE8C00"],[0.347826086956522,"#DD8D00"],[0.351170568561872,"#DD8D00"],[0.354515050167225,"#DC8E00"],[0.357859531772575,"#DC8F00"],[0.361204013377926,"#DC9000"],[0.364548494983279,"#DB9000"],[0.367892976588629,"#DB9100"],[0.37123745819398,"#DA9200"],[0.37458193979933,"#DA9200"],[0.377926421404683,"#D99300"],[0.381270903010033,"#D99400"],[0.384615384615384,"#D99400"],[0.387959866220737,"#D89500"],[0.391304347826087,"#D89600"],[0.394648829431437,"#D79700"],[0.39799331103679,"#D79700"],[0.401337792642141,"#D69800"],[0.404682274247491,"#D69900"],[0.408026755852844,"#D69900"],[0.411371237458194,"#D59A00"],[0.414715719063545,"#D59B00"],[0.418060200668895,"#D49B00"],[0.421404682274248,"#D49C00"],[0.424749163879598,"#D39D00"],[0.428093645484949,"#D39D00"],[0.431438127090302,"#D29E00"],[0.434782608695652,"#D29F00"],[0.438127090301003,"#D19F00"],[0.441471571906355,"#D1A000"],[0.444816053511706,"#D1A000"],[0.448160535117056,"#D0A100"],[0.451505016722409,"#D0A200"],[0.45484949832776,"#CFA200"],[0.45819397993311,"#CFA300"],[0.46153846153846,"#CEA400"],[0.464882943143813,"#CEA400"],[0.468227424749164,"#CDA500"],[0.471571906354514,"#CDA600"],[0.474916387959867,"#CCA600"],[0.478260869565217,"#CCA700"],[0.481605351170568,"#CBA800"],[0.484949832775921,"#CBA800"],[0.488294314381271,"#CAA900"],[0.491638795986622,"#CAA900"],[0.494983277591974,"#C9AA00"],[0.498327759197325,"#C9AB00"],[0.501672240802675,"#C8AB00"],[0.505016722408026,"#C8AC00"],[0.508361204013378,"#C7AD00"],[0.511705685618729,"#C7AD00"],[0.515050167224079,"#C6AE00"],[0.518394648829432,"#C6AE00"],[0.521739130434783,"#C5AF00"],[0.525083612040133,"#C5B000"],[0.528428093645486,"#C4B000"],[0.531772575250836,"#C4B100"],[0.535117056856187,"#C3B100"],[0.53846153846154,"#C2B200"],[0.54180602006689,"#C2B300"],[0.54515050167224,"#C1B300"],[0.548494983277591,"#C1B400"],[0.551839464882944,"#C0B500"],[0.555183946488294,"#C0B500"],[0.558528428093645,"#BFB600"],[0.561872909698997,"#BFB600"],[0.565217391304348,"#BEB700"],[0.568561872909698,"#BDB800"],[0.571906354515051,"#BDB800"],[0.575250836120402,"#BCB900"],[0.578595317725752,"#BCB900"],[0.581939799331105,"#BBBA00"],[0.585284280936455,"#BBBB00"],[0.588628762541806,"#BABB00"],[0.591973244147156,"#B9BC00"],[0.595317725752509,"#B9BC00"],[0.598662207357859,"#B8BD00"],[0.60200668896321,"#B8BE00"],[0.605351170568563,"#B7BE00"],[0.608695652173913,"#B6BF00"],[0.612040133779263,"#B6BF00"],[0.615384615384616,"#B5C000"],[0.618729096989967,"#B4C000"],[0.622073578595317,"#B4C100"],[0.62541806020067,"#B3C200"],[0.62876254180602,"#B3C200"],[0.632107023411371,"#B2C300"],[0.635451505016721,"#B1C300"],[0.638795986622074,"#B1C400"],[0.642140468227425,"#B0C500"],[0.645484949832775,"#AFC500"],[0.648829431438128,"#AFC600"],[0.652173913043478,"#AEC600"],[0.655518394648829,"#ADC700"],[0.658862876254181,"#ADC700"],[0.662207357859532,"#ACC800"],[0.665551839464882,"#ABC900"],[0.668896321070235,"#AAC900"],[0.672240802675586,"#AACA00"],[0.675585284280936,"#A9CA00"],[0.678929765886287,"#A8CB00"],[0.682274247491639,"#A8CB00"],[0.68561872909699,"#A7CC00"],[0.68896321070234,"#A6CD00"],[0.692307692307693,"#A5CD00"],[0.695652173913043,"#A5CE00"],[0.698996655518394,"#A4CE00"],[0.702341137123747,"#A3CF00"],[0.705685618729097,"#A2CF00"],[0.709030100334448,"#A2D000"],[0.7123745819398,"#A1D100"],[0.715719063545151,"#A0D100"],[0.719063545150501,"#9FD200"],[0.722408026755852,"#9FD200"],[0.725752508361205,"#9ED300"],[0.729096989966555,"#9DD300"],[0.732441471571905,"#9CD400"],[0.735785953177258,"#9BD400"],[0.739130434782609,"#9BD500"],[0.742474916387959,"#9AD600"],[0.745819397993312,"#99D600"],[0.749163879598662,"#98D700"],[0.752508361204013,"#97D700"],[0.755852842809366,"#96D800"],[0.759197324414716,"#95D800"],[0.762541806020066,"#94D900"],[0.765886287625417,"#94D900"],[0.76923076923077,"#93DA00"],[0.77257525083612,"#92DB00"],[0.775919732441471,"#91DB00"],[0.779264214046823,"#90DC00"],[0.782608695652174,"#8FDC00"],[0.785953177257524,"#8EDD00"],[0.789297658862877,"#8DDD00"],[0.792642140468228,"#8CDE00"],[0.795986622073578,"#8BDE00"],[0.799331103678931,"#8ADF00"],[0.802675585284281,"#89DF00"],[0.806020066889632,"#88E000"],[0.809364548494982,"#87E100"],[0.812709030100335,"#86E100"],[0.816053511705685,"#85E200"],[0.819397993311036,"#84E200"],[0.822742474916389,"#83E300"],[0.826086956521739,"#82E300"],[0.82943143812709,"#81E400"],[0.832775919732442,"#80E400"],[0.836120401337793,"#7EE500"],[0.839464882943143,"#7DE500"],[0.842809364548496,"#7CE600"],[0.846153846153846,"#7BE700"],[0.849498327759197,"#7AE700"],[0.852842809364547,"#79E800"],[0.8561872909699,"#77E800"],[0.859531772575251,"#76E900"],[0.862876254180601,"#75E900"],[0.866220735785954,"#74EA00"],[0.869565217391304,"#72EA00"],[0.872909698996655,"#71EB00"],[0.876254180602008,"#70EB00"],[0.879598662207358,"#6EEC00"],[0.882943143812708,"#6DEC00"],[0.886287625418061,"#6BED00"],[0.889632107023412,"#6AEE00"],[0.892976588628762,"#68EE00"],[0.896321070234113,"#67EF00"],[0.899665551839465,"#65EF00"],[0.903010033444816,"#64F000"],[0.906354515050166,"#62F000"],[0.909698996655519,"#61F100"],[0.91304347826087,"#5FF100"],[0.91638795986622,"#5DF200"],[0.919732441471573,"#5BF200"],[0.923076923076923,"#5AF300"],[0.926421404682274,"#58F300"],[0.929765886287626,"#56F400"],[0.933110367892977,"#54F400"],[0.936454849498327,"#52F500"],[0.939799331103678,"#50F600"],[0.943143812709031,"#4EF600"],[0.946488294314381,"#4BF700"],[0.949832775919732,"#49F700"],[0.953177257525084,"#47F800"],[0.956521739130435,"#44F800"],[0.959866220735785,"#41F900"],[0.963210702341138,"#3FF900"],[0.966555183946488,"#3CFA00"],[0.969899665551839,"#38FA00"],[0.973244147157192,"#35FB00"],[0.976588628762542,"#32FB00"],[0.979933110367893,"#2EFC00"],[0.983277591973243,"#29FC00"],[0.986622073578596,"#24FD00"],[0.989966555183946,"#1FFD00"],[0.993311036789297,"#18FE00"],[0.996655518394649,"#0EFE00"],[1,"#00FF00"]],"colorbar":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"thickness":23.04,"title":"value","titlefont":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"tickmode":"array","ticktext":["98","99","100","101","102","103"],"tickvals":[0.149013007051189,0.314523045177192,0.480033083303195,0.645543121429198,0.811053159555201,0.976563197681204],"tickfont":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"ticklen":2,"len":0.5}},"xaxis":"x","yaxis":"y","frame":null}],"layout":{"margin":{"t":37.9178082191781,"r":18.9954337899543,"b":25.5707762557078,"l":28.4931506849315},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"xaxis":{"domain":[0,0.0792563600782779],"automargin":true,"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"yaxis":{"domain":[0.672374429223744,1],"automargin":true,"type":"linear","autorange":false,"range":[0.4,7.6],"tickmode":"array","ticktext":["Sat","Fri","Thu","Wed","Tue","Mon","Sun"],"tickvals":[1,2,3,4,5,6,7],"categoryorder":"array","categoryarray":["Sat","Fri","Thu","Wed","Tue","Mon","Sun"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.0792563600782779,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.0792563600782779,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.0874103065883888,"x1":0.162589693411611,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.0874103065883888,"x1":0.162589693411611,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.170743639921722,"x1":0.245923026744945,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.170743639921722,"x1":0.245923026744945,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.254076973255055,"x1":0.329256360078278,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.254076973255055,"x1":0.329256360078278,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.337410306588389,"x1":0.412589693411611,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.337410306588389,"x1":0.412589693411611,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.420743639921722,"x1":0.495923026744945,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.420743639921722,"x1":0.495923026744945,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":0.579256360078278,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":0.579256360078278,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.587410306588389,"x1":0.662589693411611,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.587410306588389,"x1":0.662589693411611,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.670743639921722,"x1":0.745923026744945,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.670743639921722,"x1":0.745923026744945,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.754076973255055,"x1":0.829256360078278,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.754076973255055,"x1":0.829256360078278,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.837410306588389,"x1":0.912589693411611,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.837410306588389,"x1":0.912589693411611,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.920743639921722,"x1":1,"y0":0.672374429223744,"y1":1},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.920743639921722,"x1":1,"y0":0,"y1":23.37899543379,"yanchor":1,"ysizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.672374429223744,"y1":1,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.0792563600782779,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.0874103065883888,"x1":0.162589693411611,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.170743639921722,"x1":0.245923026744945,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.254076973255055,"x1":0.329256360078278,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.337410306588389,"x1":0.412589693411611,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.420743639921722,"x1":0.495923026744945,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":0.579256360078278,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.587410306588389,"x1":0.662589693411611,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.670743639921722,"x1":0.745923026744945,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.754076973255055,"x1":0.829256360078278,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.837410306588389,"x1":0.912589693411611,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.920743639921722,"x1":1,"y0":0.339041095890411,"y1":0.660958904109589},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0.339041095890411,"y1":0.660958904109589,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":0.0792563600782779,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.0874103065883888,"x1":0.162589693411611,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.170743639921722,"x1":0.245923026744945,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.254076973255055,"x1":0.329256360078278,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.337410306588389,"x1":0.412589693411611,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.420743639921722,"x1":0.495923026744945,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.504076973255055,"x1":0.579256360078278,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.587410306588389,"x1":0.662589693411611,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.670743639921722,"x1":0.745923026744945,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.754076973255055,"x1":0.829256360078278,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.837410306588389,"x1":0.912589693411611,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0.920743639921722,"x1":1,"y0":0,"y1":0.327625570776256},{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","y0":0,"y1":0.327625570776256,"x0":0,"x1":23.37899543379,"xanchor":1,"xsizemode":"pixel"}],"annotations":[{"text":"Jan","x":0.0396281800391389,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Feb","x":0.125,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Mar","x":0.208333333333333,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Apr","x":0.291666666666667,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"May","x":0.375,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Jun","x":0.458333333333333,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Jul","x":0.541666666666667,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Aug","x":0.625,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Sep","x":0.708333333333333,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Oct","x":0.791666666666667,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Nov","x":0.875,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"Dec","x":0.960371819960861,"y":1,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":-0,"xanchor":"center","yanchor":"bottom"},{"text":"2020","x":1,"y":0.836187214611872,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"2021","x":1,"y":0.5,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"},{"text":"2022","x":1,"y":0.163812785388128,"showarrow":false,"ax":0,"ay":0,"font":{"color":"rgba(26,26,26,1)","family":"","size":11.689497716895},"xref":"paper","yref":"paper","textangle":90,"xanchor":"left","yanchor":"middle"}],"xaxis2":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.0874103065883888,0.162589693411611],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis3":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.170743639921722,0.245923026744945],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis4":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.254076973255055,0.329256360078278],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis5":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.337410306588389,0.412589693411611],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis6":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.420743639921722,0.495923026744945],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis7":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.504076973255055,0.579256360078278],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis8":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.587410306588389,0.662589693411611],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis9":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.670743639921722,0.745923026744945],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis10":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.754076973255055,0.829256360078278],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis11":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.837410306588389,0.912589693411611],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"xaxis12":{"type":"linear","autorange":false,"range":[0.2,6.8],"tickmode":"array","ticktext":["2","4","6"],"tickvals":[2,4,6],"categoryorder":"array","categoryarray":["2","4","6"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.920743639921722,1],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y3","title":"","hoverformat":".2f"},"yaxis2":{"type":"linear","autorange":false,"range":[0.4,7.6],"tickmode":"array","ticktext":["Sat","Fri","Thu","Wed","Tue","Mon","Sun"],"tickvals":[1,2,3,4,5,6,7],"categoryorder":"array","categoryarray":["Sat","Fri","Thu","Wed","Tue","Mon","Sun"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0.339041095890411,0.660958904109589],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"yaxis3":{"type":"linear","autorange":false,"range":[0.4,7.6],"tickmode":"array","ticktext":["Sat","Fri","Thu","Wed","Tue","Mon","Sun"],"tickvals":[1,2,3,4,5,6,7],"categoryorder":"array","categoryarray":["Sat","Fri","Thu","Wed","Tue","Mon","Sun"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"domain":[0,0.327625570776256],"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":"","hoverformat":".2f"},"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"42902b90246b":{"x":{},"y":{},"fill":{},"type":"heatmap"}},"cur_data":"42902b90246b","visdat":{"42902b90246b":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrts</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-03/index.html</guid>
  <pubDate>Tue, 03 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Event Analysis with {healthyR.ts}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-12-30/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Time-to-event analysis, also known as survival analysis, is a statistical technique used to analyze the length of time until an event occurs. This type of analysis is often used in fields such as healthcare, engineering, and finance to understand the factors that influence the likelihood of an event occurring and to make predictions about future events.</p>
<p>In economics, an event study is a statistical technique used to analyze the effect of a specific event on a particular market or financial instrument. Event studies are commonly used in finance to understand how events, such as the announcement of a new product, the release of financial earnings, or a change in government policy, may impact the price or performance of a company’s stock or other financial instruments.</p>
<p>To conduct an event study, analysts typically collect data on the performance of a market or financial instrument before and after the event in question. This data is then used to estimate the effect of the event on the market or instrument.</p>
<p>There are several different methods that can be used to conduct an event study, including the market model, the abnormal return method, and the buy-and-hold abnormal return method. These methods allow analysts to quantify the effect of the event on the market or instrument and to identify any changes in market behavior that may have occurred as a result of the event.</p>
<p>Overall, event studies are a valuable tool for understanding how specific events may impact financial markets and instruments, and are widely used in finance and economics to inform investment decisions and to better understand market behavior.</p>
<p>In this post we are going to examine a function from the R package <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> has a function called <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_time_event_analysis_tbl.html"><code>ts_time_event_analysis_tbl()</code></a> that will help us understand what happens after a specified event, in this instance it will always be some percentage decrease or increase in a value.</p>
<p>There is a great article from Investopedia on this economic topic <a href="https://www.investopedia.com/terms/e/eventstudy.asp">here</a></p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>The function is <code>ts_time_event_analysis_tbl()</code> and it’s complimentary plotting function <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_event_analysis_plot.html"><code>ts_event_analysis_plot()</code></a>.</p>
<p>Here is the <code>tibble</code> data return function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_time_event_analysis_tbl</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .date_col,</span>
<span id="cb1-4">  .value_col,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.percent_change =</span> <span class="fl" style="color: #AD0000;">0.05</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.horizon =</span> <span class="dv" style="color: #AD0000;">12</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.precision =</span> <span class="dv" style="color: #AD0000;">2</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.direction =</span> <span class="st" style="color: #20794D;">"forward"</span>,</span>
<span id="cb1-9">  <span class="at" style="color: #657422;">.filter_non_event_groups =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb1-10">)</span></code></pre></div>
</div>
<p>Let’s take a look at the arguments to the parameters for this one.</p>
<ul>
<li><code>.data</code> - The date.frame/tibble that holds the data.</li>
<li><code>.date_col</code> - The column with the date value.</li>
<li><code>.value_col</code> - The column with the value you are measuring.</li>
<li><code>.percent_change</code> - This defaults to 0.05 which is a 5% increase in the <code>value_col.</code></li>
<li><code>.horizon</code> - How far do you want to look back or ahead.</li>
<li><code>.precision</code> - The default is 2 which means it rounds the lagged 1 value percent change to 2 decimal points. You may want more for more finely tuned results, this will result in fewer groupings.</li>
<li><code>.direction</code> - The default is forward. You can supply either forward, backwards or both.</li>
<li><code>filter_non_event_groups</code> - The default is TRUE, this drops groupings with no events on the rare occasion it does occur.</li>
</ul>
<p>Now the plotting function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">ts_event_analysis_plot</span>(</span>
<span id="cb2-2">  .data,</span>
<span id="cb2-3">  <span class="at" style="color: #657422;">.plot_type =</span> <span class="st" style="color: #20794D;">"mean"</span>,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;">.plot_ci =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb2-5">  <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb2-6">)</span></code></pre></div>
</div>
<ul>
<li><code>.data</code> - The data that comes from the ts_time_event_analysis_tbl()</li>
<li><code>.plot_type</code> - The default is “mean” which will show the mean event change of the output from the analysis tibble. The possible values for this are: mean, median, and individual.</li>
<li><code>.plot_ci</code> - The default is TRUE. This will only work if you choose one of the aggregate plots of either “mean” or “median”</li>
<li><code>.interactive</code> - The default is FALSE. TRUE will return a <code>plotly</code> plot.</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s go through a couple examples using the AirPassengers data. We will first transform it into a <code>tibble</code> and then we will use a look period of 6. Let’s see the data output and then we will visualize.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb3-3"></span>
<span id="cb3-4">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts_to_tbl</span>(AirPassengers) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>index)</span>
<span id="cb3-5"></span>
<span id="cb3-6">event_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts_time_event_analysis_tbl</span>(</span>
<span id="cb3-7">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb3-8">  <span class="at" style="color: #657422;">.horizon =</span> <span class="dv" style="color: #AD0000;">6</span>,</span>
<span id="cb3-9">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb3-10">  <span class="at" style="color: #657422;">.value_col =</span> value,</span>
<span id="cb3-11">  <span class="at" style="color: #657422;">.direction =</span> <span class="st" style="color: #20794D;">"both"</span></span>
<span id="cb3-12">)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;">glimpse</span>(event_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 33
Columns: 18
$ rowid                &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15…
$ date_col             &lt;date&gt; 1949-02-01, 1949-03-01, 1949-04-01, 1949-05-01, …
$ value                &lt;dbl&gt; 118, 132, 129, 121, 135, 148, 148, 199, 184, 162,…
$ lag_val              &lt;dbl&gt; 112, 118, 132, 129, 121, 135, 148, 199, 199, 184,…
$ adj_diff             &lt;dbl&gt; 6, 14, -3, -8, 14, 13, 0, 0, -15, -22, -16, 20, 5…
$ relative_change_raw  &lt;dbl&gt; 0.05357143, 0.11864407, -0.02272727, -0.06201550,…
$ relative_change      &lt;dbl&gt; 0.05, 0.12, -0.02, -0.06, 0.12, 0.10, 0.00, 0.00,…
$ pct_chg_mark         &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F…
$ event_base_change    &lt;dbl&gt; 0.00000000, 0.11864407, -0.02272727, -0.06201550,…
$ group_number         &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2…
$ numeric_group_number &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2…
$ group_event_number   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2…
$ x                    &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1…
$ mean_event_change    &lt;dbl&gt; 0.00000000, 0.03849647, -0.06815622, -0.04991040,…
$ median_event_change  &lt;dbl&gt; 0.00000000, 0.07222222, -0.06217617, -0.06201550,…
$ event_change_ci_low  &lt;dbl&gt; 0.00000000, -0.06799693, -0.11669576, -0.09692794…
$ event_change_ci_high &lt;dbl&gt; 0.000000000, 0.116322976, -0.024699717, 0.0073964…
$ event_type           &lt;fct&gt; Before, Before, Before, Before, Before, Before, A…</code></pre>
</div>
</div>
<p>Let’s visualize!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">ts_event_analysis_plot</span>(</span>
<span id="cb5-2">  <span class="at" style="color: #657422;">.data =</span> event_tbl</span>
<span id="cb5-3">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-12-30/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Let’s see the median now.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">ts_event_analysis_plot</span>(</span>
<span id="cb6-2">  <span class="at" style="color: #657422;">.data =</span> event_tbl,</span>
<span id="cb6-3">  <span class="at" style="color: #657422;">.plot_type =</span> <span class="st" style="color: #20794D;">"median"</span></span>
<span id="cb6-4">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-12-30/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now let’s see it as an interactive plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">ts_event_analysis_plot</span>(</span>
<span id="cb7-2">  <span class="at" style="color: #657422;">.data =</span> event_tbl,</span>
<span id="cb7-3">  <span class="at" style="color: #657422;">.plot_type =</span> <span class="st" style="color: #20794D;">"median"</span>,</span>
<span id="cb7-4">  <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb7-5">)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-945e4a59691fdc2cd10e" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-945e4a59691fdc2cd10e">{"x":{"data":[{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13],"y":[0,0.0722222222222222,-0.0621761658031088,-0.062015503875969,0.136986301369863,0.055045871559633,0,-0.0320707070707071,-0.0741502838584922,-0.0442133580168349,0.159581903672639,0.0326775749550742,0],"text":["x:  1<br />median_event_change:  0.00000000","x:  2<br />median_event_change:  0.07222222","x:  3<br />median_event_change: -0.06217617","x:  4<br />median_event_change: -0.06201550","x:  5<br />median_event_change:  0.13698630","x:  6<br />median_event_change:  0.05504587","x:  7<br />median_event_change:  0.00000000","x:  8<br />median_event_change: -0.03207071","x:  9<br />median_event_change: -0.07415028","x: 10<br />median_event_change: -0.04421336","x: 11<br />median_event_change:  0.15958190","x: 12<br />median_event_change:  0.03267757","x: 13<br />median_event_change:  0.00000000"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,0,0,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,1,1,1,null,13,13,13,13,null,7,7],"y":[-0.147190093606673,-0.147190093606673,0.205714187962353,0.205714187962353,null,-0.147190093606673,-0.147190093606673,0.205714187962353,0.205714187962353,null,-0.147190093606673,0.205714187962353],"text":["xintercept:  1","xintercept:  1","xintercept:  1","xintercept:  1",null,"xintercept: 13","xintercept: 13","xintercept: 13","xintercept: 13",null,"xintercept:  7","xintercept:  7"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(70,130,180,1)","dash":"dash"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13],"y":[0,0.116322975517891,-0.0246997173810645,0.00739646237526234,0.188543304139531,0.0942337750594631,0,0.0670075757575758,-0.062774871705878,0.00828656966821904,0.18967308425467,0.0539274567294051,0],"text":["x:  1<br />event_change_ci_high:  0.000000000","x:  2<br />event_change_ci_high:  0.116322976","x:  3<br />event_change_ci_high: -0.024699717","x:  4<br />event_change_ci_high:  0.007396462","x:  5<br />event_change_ci_high:  0.188543304","x:  6<br />event_change_ci_high:  0.094233775","x:  7<br />event_change_ci_high:  0.000000000","x:  8<br />event_change_ci_high:  0.067007576","x:  9<br />event_change_ci_high: -0.062774872","x: 10<br />event_change_ci_high:  0.008286570","x: 11<br />event_change_ci_high:  0.189673084","x: 12<br />event_change_ci_high:  0.053927457","x: 13<br />event_change_ci_high:  0.000000000"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(255,0,0,1)","dash":"dash"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13],"y":[0,-0.0679969290898939,-0.116695764811895,-0.0969279356876256,0.116766670440394,0.031366751409307,0,-0.13114898989899,-0.0855256960111064,-0.0967132857018889,0.129490723090609,0.0114276931807434,0],"text":["x:  1<br />event_change_ci_low:  0.00000000","x:  2<br />event_change_ci_low: -0.06799693","x:  3<br />event_change_ci_low: -0.11669576","x:  4<br />event_change_ci_low: -0.09692794","x:  5<br />event_change_ci_low:  0.11676667","x:  6<br />event_change_ci_low:  0.03136675","x:  7<br />event_change_ci_low:  0.00000000","x:  8<br />event_change_ci_low: -0.13114899","x:  9<br />event_change_ci_low: -0.08552570","x: 10<br />event_change_ci_low: -0.09671329","x: 11<br />event_change_ci_low:  0.12949072","x: 12<br />event_change_ci_low:  0.01142769","x: 13<br />event_change_ci_low:  0.00000000"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(255,0,0,1)","dash":"dash"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.7625570776256,"r":7.30593607305936,"b":40.1826484018265,"l":48.9497716894977},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"title":{"text":"Median Event Change Analysis Plot","font":{"color":"rgba(0,0,0,1)","family":"","size":17.5342465753425},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[0.4,13.6],"tickmode":"array","ticktext":["5","10"],"tickvals":[5,10],"categoryorder":"array","categoryarray":["5","10"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"Horizon Event","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-0.147190093606673,0.205714187962353],"tickmode":"array","ticktext":["-10%","0%","10%","20%"],"tickvals":[-0.1,0,0.1,0.2],"categoryorder":"array","categoryarray":["-10%","0%","10%","20%"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"Median Change","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"54905d611a4d":{"x":{},"y":{},"type":"scatter"},"54902ea26d60":{"xintercept":{}},"54904f796049":{"x":{},"y":{}},"5490534282b":{"x":{},"y":{}}},"cur_data":"54905d611a4d","visdat":{"54905d611a4d":["function (y) ","x"],"54902ea26d60":["function (y) ","x"],"54904f796049":["function (y) ","x"],"5490534282b":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Now let’s see all the individual groups.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">ts_event_analysis_plot</span>(</span>
<span id="cb8-2">  <span class="at" style="color: #657422;">.data =</span> event_tbl,</span>
<span id="cb8-3">  <span class="at" style="color: #657422;">.plot_type =</span> <span class="st" style="color: #20794D;">"individual"</span>,</span>
<span id="cb8-4">  <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb8-5">)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-e974de2e0720243b8d25" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-e974de2e0720243b8d25">{"x":{"data":[{"x":[1,2,3,4,5,6,7],"y":[0,0.11864406779661,-0.0227272727272727,-0.062015503875969,0.115702479338843,0.0962962962962963,0],"text":["x:  1<br />event_base_change:  0.00000000<br />group_event_number: 1<br />factor(group_event_number): 1","x:  2<br />event_base_change:  0.11864407<br />group_event_number: 1<br />factor(group_event_number): 1","x:  3<br />event_base_change: -0.02272727<br />group_event_number: 1<br />factor(group_event_number): 1","x:  4<br />event_base_change: -0.06201550<br />group_event_number: 1<br />factor(group_event_number): 1","x:  5<br />event_base_change:  0.11570248<br />group_event_number: 1<br />factor(group_event_number): 1","x:  6<br />event_base_change:  0.09629630<br />group_event_number: 1<br />factor(group_event_number): 1","x:  7<br />event_base_change:  0.00000000<br />group_event_number: 1<br />factor(group_event_number): 1"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"1","legendgroup":"1","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13],"y":[0,-0.0753768844221105,-0.119565217391304,-0.0987654320987654,0.136986301369863,0.0301204819277108,0,0.0722222222222222,-0.0621761658031088,0.0110497237569061,0.191256830601093,0.055045871559633,0],"text":["x:  1<br />event_base_change:  0.00000000<br />group_event_number: 2<br />factor(group_event_number): 2","x:  2<br />event_base_change: -0.07537688<br />group_event_number: 2<br />factor(group_event_number): 2","x:  3<br />event_base_change: -0.11956522<br />group_event_number: 2<br />factor(group_event_number): 2","x:  4<br />event_base_change: -0.09876543<br />group_event_number: 2<br />factor(group_event_number): 2","x:  5<br />event_base_change:  0.13698630<br />group_event_number: 2<br />factor(group_event_number): 2","x:  6<br />event_base_change:  0.03012048<br />group_event_number: 2<br />factor(group_event_number): 2","x:  7<br />event_base_change:  0.00000000<br />group_event_number: 2<br />factor(group_event_number): 2","x:  8<br />event_base_change:  0.07222222<br />group_event_number: 2<br />factor(group_event_number): 2","x:  9<br />event_base_change: -0.06217617<br />group_event_number: 2<br />factor(group_event_number): 2","x: 10<br />event_base_change:  0.01104972<br />group_event_number: 2<br />factor(group_event_number): 2","x: 11<br />event_base_change:  0.19125683<br />group_event_number: 2<br />factor(group_event_number): 2","x: 12<br />event_base_change:  0.05504587<br />group_event_number: 2<br />factor(group_event_number): 2","x: 13<br />event_base_change:  0.00000000<br />group_event_number: 2<br />factor(group_event_number): 2"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,186,56,1)","dash":"solid"},"hoveron":"points","name":"2","legendgroup":"2","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13],"y":[0,0.0722222222222222,-0.0621761658031088,0.0110497237569061,0.191256830601093,0.055045871559633,0,-0.136363636363636,-0.0861244019138756,-0.0994764397905759,0.127906976744186,0.0103092783505155,0],"text":["x:  1<br />event_base_change:  0.00000000<br />group_event_number: 3<br />factor(group_event_number): 3","x:  2<br />event_base_change:  0.07222222<br />group_event_number: 3<br />factor(group_event_number): 3","x:  3<br />event_base_change: -0.06217617<br />group_event_number: 3<br />factor(group_event_number): 3","x:  4<br />event_base_change:  0.01104972<br />group_event_number: 3<br />factor(group_event_number): 3","x:  5<br />event_base_change:  0.19125683<br />group_event_number: 3<br />factor(group_event_number): 3","x:  6<br />event_base_change:  0.05504587<br />group_event_number: 3<br />factor(group_event_number): 3","x:  7<br />event_base_change:  0.00000000<br />group_event_number: 3<br />factor(group_event_number): 3","x:  8<br />event_base_change: -0.13636364<br />group_event_number: 3<br />factor(group_event_number): 3","x:  9<br />event_base_change: -0.08612440<br />group_event_number: 3<br />factor(group_event_number): 3","x: 10<br />event_base_change: -0.09947644<br />group_event_number: 3<br />factor(group_event_number): 3","x: 11<br />event_base_change:  0.12790698<br />group_event_number: 3<br />factor(group_event_number): 3","x: 12<br />event_base_change:  0.01030928<br />group_event_number: 3<br />factor(group_event_number): 3","x: 13<br />event_base_change:  0.00000000<br />group_event_number: 3<br />factor(group_event_number): 3"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(97,156,255,1)","dash":"solid"},"hoveron":"points","name":"3","legendgroup":"3","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,1,null,13,13,null,7,7],"y":[-0.152744659711873,0.207637853949329,null,-0.152744659711873,0.207637853949329,null,-0.152744659711873,0.207637853949329],"text":["xintercept:  1","xintercept:  1",null,"xintercept: 13","xintercept: 13",null,"xintercept:  7","xintercept:  7"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(70,130,180,1)","dash":"dash"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.7625570776256,"r":7.30593607305936,"b":40.1826484018265,"l":48.9497716894977},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"title":{"text":"Event Base Change Analysis Plot","font":{"color":"rgba(0,0,0,1)","family":"","size":17.5342465753425},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[0.4,13.6],"tickmode":"array","ticktext":["5","10"],"tickvals":[5,10],"categoryorder":"array","categoryarray":["5","10"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"Horizon Event","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-0.152744659711873,0.207637853949329],"tickmode":"array","ticktext":["-10%","0%","10%","20%"],"tickvals":[-0.1,0,0.1,0.2],"categoryorder":"array","categoryarray":["-10%","0%","10%","20%"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"Event Base Change","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"Event Number","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"5490438b50ae":{"x":{},"y":{},"colour":{},"type":"scatter"},"549038b46bf2":{"xintercept":{}}},"cur_data":"5490438b50ae","visdat":{"5490438b50ae":["function (y) ","x"],"549038b46bf2":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Single direction plotting.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">ts_time_event_analysis_tbl</span>(</span>
<span id="cb9-2">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb9-3">  <span class="at" style="color: #657422;">.horizon =</span> <span class="dv" style="color: #AD0000;">6</span>,</span>
<span id="cb9-4">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb9-5">  <span class="at" style="color: #657422;">.value_col =</span> value,</span>
<span id="cb9-6">  <span class="at" style="color: #657422;">.direction =</span> <span class="st" style="color: #20794D;">"backward"</span></span>
<span id="cb9-7">) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;">ts_event_analysis_plot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-12-30/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>And…</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">ts_time_event_analysis_tbl</span>(</span>
<span id="cb10-2">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb10-3">  <span class="at" style="color: #657422;">.horizon =</span> <span class="dv" style="color: #AD0000;">6</span>,</span>
<span id="cb10-4">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb10-5">  <span class="at" style="color: #657422;">.value_col =</span> value,</span>
<span id="cb10-6">  <span class="at" style="color: #657422;">.direction =</span> <span class="st" style="color: #20794D;">"forward"</span></span>
<span id="cb10-7">) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-8">  <span class="fu" style="color: #4758AB;">ts_event_analysis_plot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-12-30/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrts</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrts-2022-12-30/index.html</guid>
  <pubDate>Fri, 30 Dec 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Gartner Magic Chart and its usefulness in healthcare analytics with {healthyR}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2022-12-29/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The Gartner Magic Chart is a powerful tool for analyzing healthcare data and identifying trends and patterns that can inform decision making. It was developed by Dr.&nbsp;James Gartner in the early 2000s as a way to visualize the relationship between two key metrics, for example: Excess Length of Stay (ELOS) and Excess Readmit Rate.</p>
<p>In healthcare, length of stay (LOS) refers to the amount of time a patient spends in the hospital. Excess LOS is the difference between the actual LOS of a patient and the expected LOS for that patient, based on their diagnosis and other factors. Excess readmit rate is the percentage of patients who are readmitted to the hospital within a certain time period after being discharged, above and beyond what is expected based on their diagnosis and other factors.</p>
<p>The Gartner Magic Chart can plot excess LOS on the x-axis and excess readmit rate on the y-axis. The resulting chart is divided into four quadrants, with the top right quadrant representing high excess LOS and high excess readmit rate, the bottom left quadrant representing low excess LOS and low excess readmit rate, and the other two quadrants representing intermediate values of these metrics.</p>
<p>One of the key benefits of the Gartner Magic Chart is that it allows healthcare professionals to quickly and easily identify areas of concern and opportunities for improvement. For example, if a hospital has a high excess LOS and a high excess readmit rate, it may be an indication that the hospital is not effectively managing patient care and is instead relying on costly and unnecessary readmissions to address problems that could have been avoided in the first place.</p>
<p>The Gartner Magic Chart can also be used to identify trends over time, allowing healthcare professionals to track progress and see the impact of changes they have made to patient care processes.</p>
<p>If you are interested in creating a Gartner Magic Chart for your own healthcare data, the R package <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> has a convenient function called <a href="https://www.spsanderson.com/healthyR/reference/gartner_magic_chart_plt.html"><code>gartner_magic_chart_plt()</code></a> that allows you to easily create this chart from data supplied by the end user. Simply input your excess LOS and excess readmit rate data, and the function will generate the chart for you.</p>
<p>In summary, the Gartner Magic Chart is a valuable tool for analyzing healthcare data and identifying trends and patterns that can inform decision making. By using the <a href="https://www.spsanderson.com/healthyR/reference/gartner_magic_chart_plt.html"><code>gartner_magic_chart_plt()</code></a> function from the <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> package, you can easily create this chart for your own data and start using it to improve patient care and outcomes.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the full function call for <code>gartner_magic_chart_plt()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">gartner_magic_chart_plt</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .x_col,</span>
<span id="cb1-4">  .y_col,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.point_size_col =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-6">  .y_lab,</span>
<span id="cb1-7">  .x_lab,</span>
<span id="cb1-8">  .plt_title,</span>
<span id="cb1-9">  .tl_lbl,</span>
<span id="cb1-10">  .tr_lbl,</span>
<span id="cb1-11">  .br_lbl,</span>
<span id="cb1-12">  .bl_lbl</span>
<span id="cb1-13">)</span></code></pre></div>
</div>
<p>Now let’s take a look at the arguments to the parameters.</p>
<ul>
<li><code>.data</code> - The data set you want to plot</li>
<li><code>.x_col</code> - The x-axis for the plot</li>
<li><code>.y_col</code> - The y-axis for the plot</li>
<li><code>.point_size_col</code> - The default is NULL, if you want to size the dots by a column in the data.frame/tibble then enter the column name here.</li>
<li><code>.y_lab</code> - The y-axis label</li>
<li><code>.x_lab</code> - The x-axis label</li>
<li><code>.plt_title</code> - The title of the plot</li>
<li><code>.tl_lbl</code> - The top left label</li>
<li><code>.tr_lbl</code> - The top right label</li>
<li><code>.br_lbl</code> - The bottom right label</li>
<li><code>.bl_lbl</code> - The bottom left label</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s see the function in action.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(healthyR)</span>
<span id="cb2-3"></span>
<span id="cb2-4">data_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb2-5">    <span class="at" style="color: #657422;">x =</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb2-6">    <span class="at" style="color: #657422;">y =</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb2-7">    <span class="at" style="color: #657422;">z =</span> <span class="fu" style="color: #4758AB;">abs</span>(x) <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">abs</span>(y)</span>
<span id="cb2-8"> )</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;">gartner_magic_chart_plt</span>(</span>
<span id="cb2-11">  <span class="at" style="color: #657422;">.data =</span> data_tbl,</span>
<span id="cb2-12">  <span class="at" style="color: #657422;">.x_col =</span> x,</span>
<span id="cb2-13">  <span class="at" style="color: #657422;">.y_col =</span> y,</span>
<span id="cb2-14">  <span class="at" style="color: #657422;">.point_size =</span> z,</span>
<span id="cb2-15">  <span class="at" style="color: #657422;">.x_lab =</span> <span class="st" style="color: #20794D;">"los"</span>,</span>
<span id="cb2-16">  <span class="at" style="color: #657422;">.y_lab =</span> <span class="st" style="color: #20794D;">"ra"</span>,</span>
<span id="cb2-17">  <span class="at" style="color: #657422;">.plt_title =</span> <span class="st" style="color: #20794D;">"Test Title"</span>,</span>
<span id="cb2-18">  <span class="at" style="color: #657422;">.tr_lbl =</span> <span class="st" style="color: #20794D;">"High RA-LOS"</span>,</span>
<span id="cb2-19">  <span class="at" style="color: #657422;">.tl_lbl =</span> <span class="st" style="color: #20794D;">"High RA"</span>,</span>
<span id="cb2-20">  <span class="at" style="color: #657422;">.bl_lbl =</span> <span class="st" style="color: #20794D;">"Leader"</span>,</span>
<span id="cb2-21">  <span class="at" style="color: #657422;">.br_lbl =</span> <span class="st" style="color: #20794D;">"High LOS"</span></span>
<span id="cb2-22">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2022-12-29/index_files/figure-html/ex1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Example two.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">gartner_magic_chart_plt</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;">.data =</span> data_tbl,</span>
<span id="cb3-3">  <span class="at" style="color: #657422;">.x_col =</span> x,</span>
<span id="cb3-4">  <span class="at" style="color: #657422;">.y_col =</span> y,</span>
<span id="cb3-5">  <span class="at" style="color: #657422;">.point_size =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb3-6">  <span class="at" style="color: #657422;">.x_lab =</span> <span class="st" style="color: #20794D;">"los"</span>,</span>
<span id="cb3-7">  <span class="at" style="color: #657422;">.y_lab =</span> <span class="st" style="color: #20794D;">"ra"</span>,</span>
<span id="cb3-8">  <span class="at" style="color: #657422;">.plt_title =</span> <span class="st" style="color: #20794D;">"Test Title"</span>,</span>
<span id="cb3-9">  <span class="at" style="color: #657422;">.tr_lbl =</span> <span class="st" style="color: #20794D;">"High RA-LOS"</span>,</span>
<span id="cb3-10">  <span class="at" style="color: #657422;">.tl_lbl =</span> <span class="st" style="color: #20794D;">"High RA"</span>,</span>
<span id="cb3-11">  <span class="at" style="color: #657422;">.bl_lbl =</span> <span class="st" style="color: #20794D;">"Leader"</span>,</span>
<span id="cb3-12">  <span class="at" style="color: #657422;">.br_lbl =</span> <span class="st" style="color: #20794D;">"High LOS"</span></span>
<span id="cb3-13">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2022-12-29/index_files/figure-html/ex2-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2022-12-29/index.html</guid>
  <pubDate>Thu, 29 Dec 2022 05:00:00 GMT</pubDate>
</item>
</channel>
</rss>
