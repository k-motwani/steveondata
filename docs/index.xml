<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Steve&#39;s Data Tips and Tricks</title>
<link>https://www.spsanderson.com/steveondata/index.html</link>
<atom:link href="https://www.spsanderson.com/steveondata/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Wed, 04 Oct 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>Creating Stacked Dot Plots in R: A Guide with Base R and ggplot2</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-04/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Stacked dot plots are a type of plot that displays frequencies using dots, piled one over the other. In R, there are several ways to create stacked dot plots, including using base R and ggplot2. In this blog post, we will explore how to create stacked dot plots in both Base R and ggplot2, and provide several examples of each.</p>
</section>
<section id="examples-stacked-dot-plots-in-base-r" class="level1">
<h1>Examples Stacked Dot Plots in Base R</h1>
<section id="method-1-the-stripchart-function" class="level2">
<h2 class="anchored" data-anchor-id="method-1-the-stripchart-function">Method 1: The stripchart() function</h2>
<p>The stripchart() function in base R can be used to create a basic stacked dot plot. Here is an example of how to use it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create some fake data</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create stacked dot plot</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stripchart</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stack"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-04/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This will create a basic stacked dot plot. However, we can customize it to make it more aesthetically pleasing. Here is an example of how to do that:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create some fake data</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create stacked dot plot</span></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stripchart</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stack"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offset =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">at =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb2-7">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, </span>
<span id="cb2-8">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stacked Dot Plot"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Values"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-04/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This will create a stacked dot plot with a blue color scheme and a more aesthetically pleasing layout.</p>
</section>
<section id="method-2-the-dotchart-function" class="level2">
<h2 class="anchored" data-anchor-id="method-2-the-dotchart-function">Method 2: The dotchart() function</h2>
<p>Another way to create a stacked dot plot in base R is to use the dotchart() function. Here is an example of how to use it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create some fake data</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb3-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create stacked dot plot</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dotchart</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, </span>
<span id="cb3-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stacked Dot Plot"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Values"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-04/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This will create a stacked dot plot with a blue color scheme and a more aesthetically pleasing layout.</p>
</section>
</section>
<section id="examples-stacked-dot-plots-in-ggplot2" class="level1">
<h1>Examples Stacked Dot Plots in ggplot2</h1>
<section id="method-1-the-geom_dotplot-function" class="level2">
<h2 class="anchored" data-anchor-id="method-1-the-geom_dotplot-function">Method 1: The geom_dotplot() function</h2>
<p>The geom_dotplot() function in ggplot2 can be used to create a basic stacked dot plot. Here is an example of how to use it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load ggplot2</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create some fake data</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb4-6">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create stacked dot plot</span></span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_dotplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Bin width defaults to 1/30 of the range of the data. Pick better value with
`binwidth`.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-04/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This will create a basic stacked dot plot. However, we can customize it to make it more aesthetically pleasing. Here is an example of how to do that:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create some fake data</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create customized stacked dot plot</span></span>
<span id="cb6-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_dotplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dotsize =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stackratio =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>, </span>
<span id="cb6-8">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stacked Dot Plot"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Values"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-04/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This will create a stacked dot plot with a blue color scheme and a more aesthetically pleasing layout.</p>
</section>
<section id="method-2-the-geom_jitter-function" class="level2">
<h2 class="anchored" data-anchor-id="method-2-the-geom_jitter-function">Method 2: The geom_jitter() function</h2>
<p>Another way to create a stacked dot plot in ggplot2 is to use the geom_jitter() function. Here is an example of how to use it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create some fake data</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create stacked dot plot</span></span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, </span>
<span id="cb7-8">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Stacked Dot Plot"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Values"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-04/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This will create a stacked dot plot with a blue color scheme and a more aesthetically pleasing layout.</p>
<p>In conclusion, creating stacked dot plots in R is a simple and effective way to visualize frequency data. By using either base R or ggplot2, you can create aesthetically pleasing plots that are easy to interpret. We encourage readers to try creating their own stacked dot plots using the examples provided in this blog post.</p>
</section>
</section>
<section id="referencescitations" class="level1">
<h1>ReferencesCitations:</h1>
<ul>
<li>[1] https://www.statology.org/stacked-dot-plot-in-r/</li>
<li>[2] https://www.geeksforgeeks.org/how-to-create-a-stacked-dot-plot-in-r/</li>
<li>[3] http://www.sthda.com/english/wiki/ggplot2-dot-plot-quick-start-guide-r-software-and-data-visualization</li>
<li>[4] https://stackoverflow.com/questions/61471353/in-r-ggplot-how-do-i-stack-two-dotplots</li>
<li>[5] https://ggplot2.tidyverse.org/reference/geom_dotplot.html</li>
<li>[6] https://eurekastatistics.com/r-flavours-of-stacked-dotplots/</li>
</ul>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-04/index.html</guid>
  <pubDate>Wed, 04 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating Interactive Radar Charts in R with the ‘fmsb’ Library</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-03/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Radar charts, also known as spider, web, polar, or star plots, are a useful way to visualize multivariate data. In R, we can create radar charts using the fmsb library. Here are several examples of how to create radar charts in R using the fmsb library:</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-basic-radar-chart" class="level2">
<h2 class="anchored" data-anchor-id="example-1-basic-radar-chart">Example 1: Basic radar chart</h2>
<p>The following code creates a basic radar chart using the radarchart() function from the fmsb package. The input data format is specific, where each row represents an entity and each column is a variable. The first row should be the maximum values of the data, and the second row should be the minimum values. The default radar chart can be customized using various options, such as line color, fill color, line width, and axis label color.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the fmsb package</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(fmsb)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create sample data</span></span>
<span id="cb1-5">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T), </span>
<span id="cb1-6">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(data) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var5"</span>, </span>
<span id="cb1-8">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var10"</span>)</span>
<span id="cb1-9">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), data)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a basic radar chart</span></span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radarchart</span>(data)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-03/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="example-2-customized-radar-chart" class="level2">
<h2 class="anchored" data-anchor-id="example-2-customized-radar-chart">Example 2: Customized radar chart</h2>
<p>The following code creates a customized radar chart using the radarchart() function. The axistype argument is set to 1 to customize the polygon, and the pcol, pfcol, and plwd arguments are used to customize the grid and line properties.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create sample data</span></span>
<span id="cb2-2">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> T), </span>
<span id="cb2-3">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(data) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var5"</span>, </span>
<span id="cb2-5">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var10"</span>)</span>
<span id="cb2-6">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), data)</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Customize the radar chart</span></span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radarchart</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axistype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcol =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>), </span>
<span id="cb2-10">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pfcol =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cglcol =</span></span>
<span id="cb2-11">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cglty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-03/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="example-3-radar-chart-with-multiple-groups" class="level2">
<h2 class="anchored" data-anchor-id="example-3-radar-chart-with-multiple-groups">Example 3: Radar chart with multiple groups</h2>
<p>The following code creates a radar chart with multiple groups using the radarchart() function. The input data frame should have more than three variables as axes, and the rows indicate cases as series. The first row should show the maximum values, the second row should show the minimum values, and the actual data should be given as row 3 and lower rows.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create sample data</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), </span>
<span id="cb3-4">                         <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>),</span>
<span id="cb3-5">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)))</span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(data) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Var"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a radar chart with multiple groups</span></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radarchart</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axistype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb3-10">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pdensity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pangle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cglty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb3-11">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cglcol =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-03/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>These are just a few examples of how to create radar charts in R using the fmsb library. With some creativity, you can customize the charts to suit your needs. I encourage you to try creating your own radar charts using the fmsb library and experiment with different options to see what works best for your data.</p>
</section>
<section id="references" class="level1">
<h1>References:</h1>
<ul>
<li>[1] https://www.datanovia.com/en/blog/beautiful-radar-chart-in-r-using-fmsb-and-ggplot-packages/</li>
<li>[2] https://r-graph-gallery.com/142-basic-radar-chart.html</li>
<li>[3] https://www.geeksforgeeks.org/how-to-create-radar-charts-in-r/</li>
<li>[4] https://r-charts.com/ranking/radar-chart/</li>
<li>[5] https://www.statology.org/radar-chart-in-r/</li>
<li>[6] https://rdrr.io/cran/fmsb/man/radarchart.html</li>
</ul>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-03/index.html</guid>
  <pubDate>Tue, 03 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Horizontal Boxplots in R using the Palmer Penguins Data Set</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-10-02/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Boxplots are a great way to visualize the distribution of a numerical variable. They show the median, quartiles, and outliers of the data, and can be used to compare the distributions of multiple groups.</p>
<p>Horizontal boxplots are a variant of the traditional boxplot, where the x-axis is horizontal and the y-axis is vertical. This can be useful for visualizing data where the x-axis variable is categorical, such as species or treatment group.</p>
</section>
<section id="creating-horizontal-boxplots-in-base-r" class="level1">
<h1>Creating horizontal boxplots in base R</h1>
<p>To create a horizontal boxplot in base R, we can use the <code>boxplot()</code> function with the <code>horizontal</code> argument set to <code>TRUE</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(palmerpenguins)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a horizontal boxplot of bill length by species</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">boxplot</span>(</span>
<span id="cb2-3">  bill_length_mm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> species,</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> penguins,</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">horizontal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length by species in Palmer penguins"</span>,</span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>,</span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species"</span></span>
<span id="cb2-9">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-02/index_files/figure-html/base_r_flipped_boxplot-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This code will produce a horizontal boxplot with one box for each species of penguin. The boxes show the median, quartiles, and outliers of the bill length data for each species.</p>
</section>
<section id="creating-horizontal-boxplots-in-ggplot2" class="level1">
<h1>Creating horizontal boxplots in ggplot2</h1>
<p>To create a horizontal boxplot in ggplot2, we can use the <code>geom_boxplot()</code> function with the <code>coord_flip()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a horizontal boxplot of bill length by species using ggplot2</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(penguins, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> bill_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length by species in Palmer penguins"</span>,</span>
<span id="cb3-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>,</span>
<span id="cb3-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species"</span></span>
<span id="cb3-10">  )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-10-02/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This code will produce a horizontal boxplot that is similar to the one produced by the base R code above. However, the ggplot2 code is more flexible and allows us to customize the appearance of the plot more easily.</p>
</section>
<section id="encouragement" class="level1">
<h1>Encouragement</h1>
<p>I encourage you to try creating horizontal boxplots for your own data. You can use the Palmer penguins data set as a starting point, or you can use your own data. Experiment with different options to customize the appearance of your plots.</p>
<p>Here are some ideas for things to try:</p>
<ul>
<li>Compare the distribution of different numerical variables across different groups. For example, you could compare the distribution of bill length across the three species of penguins, or you could compare the distribution of body mass across male and female penguins.</li>
<li>Use different colors and fill patterns to distinguish between groups.</li>
<li>Add jitter to the data points to avoid overplotting.</li>
<li>Add a legend to identify the different groups.</li>
<li>Save your plots to files or export them to other applications.</li>
</ul>
<p>I hope this blog post has been helpful. If you have any questions, please leave a comment below.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Horizontal boxplots can be a useful way to visualize the distribution of data when the x-axis variable is categorical. They are easy to create in both base R and ggplot2.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-10-02/index.html</guid>
  <pubDate>Mon, 02 Oct 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Plotting Decision Trees in R with rpart and rpart.plot</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-29/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Decision trees are a powerful machine learning algorithm that can be used for both classification and regression tasks. They are easy to understand and interpret, and they can be used to build complex models without the need for feature engineering.</p>
<p>Once you have trained a decision tree model, you can use it to make predictions on new data. However, it can also be helpful to plot the decision tree to better understand how it works and to identify any potential problems.</p>
<p>In this blog post, we will show you how to plot decision trees in R using the <code>rpart</code> and <code>rpart.plot</code> packages. We will also provide an extensive example using the iris data set and explain the code blocks in simple to use terms.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<section id="load-the-libraries" class="level2">
<h2 class="anchored" data-anchor-id="load-the-libraries">Load the libraries</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rpart)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rpart.plot)</span></code></pre></div>
</div>
</section>
<section id="split-the-data-into-training-and-test-sets" class="level2">
<h2 class="anchored" data-anchor-id="split-the-data-into-training-and-test-sets">Split the data into training and test sets</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb2-2">train_index <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(iris), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(iris))</span>
<span id="cb2-3">train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris[train_index, ]</span>
<span id="cb2-4">test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>train_index, ]</span></code></pre></div>
</div>
</section>
<section id="train-a-decision-tree-model" class="level2">
<h2 class="anchored" data-anchor-id="train-a-decision-tree-model">Train a decision tree model</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">tree <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpart</span>(Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> train, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span>)</span></code></pre></div>
</div>
</section>
<section id="plot-the-decision-tree" class="level2">
<h2 class="anchored" data-anchor-id="plot-the-decision-tree">Plot the decision tree</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpart.plot</span>(tree, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Decision Tree for the Iris Dataset"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-29/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="output" class="level1">
<h1>Output</h1>
<p>The output of the <code>rpart.plot()</code> function is a tree diagram that shows the decision rules of the model. The root node of the tree is at the top, and the leaf nodes are at the bottom. Each node is labeled with the feature that is used to split the data at that node, and the value of the split. The leaf nodes are labeled with the predicted class for the data that reaches that node.</p>
</section>
<section id="interpreting-the-decision-tree" class="level1">
<h1>Interpreting the decision tree</h1>
<p>To interpret the decision tree, start at the root node and follow the branches down to a leaf node. The leaf node that you reach is the predicted class for the data that you started with.</p>
<p>For example, if you have a new iris flower with a sepal length of 5.5 cm and a petal length of 2.5 cm, you would start at the root node of the decision tree. At the root node, the feature that is used to split the data is petal length. Since the petal length of the new flower is greater than 2.45 cm, you would follow the right branch down to the next node. At the next node, the feature that is used to split the data is sepal length. Since the sepal length of the new flower is greater than 5.0 cm, you would follow the right branch down to the leaf node. The leaf node that you reach is labeled “versicolor”, so the predicted class for the new flower is versicolor.</p>
</section>
<section id="trying-it-on-your-own" class="level1">
<h1>Trying it on your own</h1>
<p>Now that you have learned how to plot decision trees in R, try it out on your own. You can use the iris data set or your own data set.</p>
<p>To get started, load the <code>rpart</code> and <code>rpart.plot</code> libraries and load your data set. Then, split the data into training and test sets. Train a decision tree model using the <code>rpart()</code> function. Finally, plot the decision tree using the <code>rpart.plot()</code> function.</p>
<p>Once you have plotted the decision tree, take some time to interpret it. Try to understand how the model makes predictions and to identify any potential problems. You can also try to improve the model by adding or removing features or by changing the hyperparameters of the <code>rpart()</code> function.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Plotting decision trees is a great way to better understand how they work and to identify any potential problems. It is also a helpful way to communicate the results of a decision tree model to others.</p>
<p>In this blog post, we showed you how to plot decision trees in R using the <code>rpart</code> and <code>rpart.plot</code> packages. We also provided an extensive example using the iris data set and explained the code blocks in simple to use terms.</p>
<p>We encourage you to try plotting decision trees on your own data sets. It is a great way to learn more about decision trees and to improve your machine learning skills.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-29/index.html</guid>
  <pubDate>Fri, 29 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Reorder Boxplots in R: A Comprehensive Guide</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-28/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Boxplots are a great way to visualize the distribution of a dataset. However, sometimes the default ordering of boxplots may not be ideal for the data being presented. In this blog post, we will explore how to reorder boxplots in R using base R. We will provide at least three examples and explain them in simple terms. We encourage readers to try things on their own.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-reorder-based-on-specific-order" class="level2">
<h2 class="anchored" data-anchor-id="example-1-reorder-based-on-specific-order">Example 1: Reorder Based on Specific Order</h2>
<p>The first example shows how to order the boxplots based on a specific order for the variable being plotted. We will use the built-in airquality dataset in R. The following code shows how to order the boxplots based on the following order for the Month variable: 5, 8, 6, 9, 7.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the airquality dataset</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(airquality)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reorder Month values</span></span>
<span id="cb1-5">airquality<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Month <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(airquality<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Month, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>))</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create boxplot of temperatures by month using the order we specified</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">boxplot</span>(Temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Month, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>airquality, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-28/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Notice that the boxplots now appear in the order that we specified using the levels argument.</p>
</section>
<section id="example-2-reorder-based-on-median-value" class="level2">
<h2 class="anchored" data-anchor-id="example-2-reorder-based-on-median-value">Example 2: Reorder Based on Median Value</h2>
<p>The second example shows how to order the boxplots in ascending order based on the median value for each group. We will use the built-in PlantGrowth dataset in R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the PlantGrowth dataset</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(PlantGrowth)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create boxplot of weight by group</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">boxplot</span>(weight <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>PlantGrowth, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-28/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reorder the groups based on median weight</span></span>
<span id="cb3-2">group_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tapply</span>(PlantGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>weight, PlantGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group, median)))</span>
<span id="cb3-3">PlantGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(PlantGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span>group_order)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create boxplot of weight by group using the new order</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">boxplot</span>(weight <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>PlantGrowth, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-28/index_files/figure-html/unnamed-chunk-2-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Notice that the boxplots now appear in ascending order based on the median weight for each group.</p>
</section>
<section id="example-3-reorder-based-on-custom-function" class="level2">
<h2 class="anchored" data-anchor-id="example-3-reorder-based-on-custom-function">Example 3: Reorder Based on Custom Function</h2>
<p>The third example shows how to order the boxplots based on a custom function. We will use the built-in ToothGrowth dataset in R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the ToothGrowth dataset</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(ToothGrowth)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create boxplot of length by dose</span></span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">boxplot</span>(len <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> dose, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>ToothGrowth, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reorder the groups based on the mean length multiplied by the dose</span></span>
<span id="cb4-8">group_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tapply</span>(ToothGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>len <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ToothGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dose, ToothGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dose, mean)))</span>
<span id="cb4-9">ToothGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dose <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(ToothGrowth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dose, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span>group_order)</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create boxplot of length by dose using the new order</span></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">boxplot</span>(len <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> dose, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>ToothGrowth, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-28/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Notice that the boxplots now appear in order based on the mean length multiplied by the dose for each group.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In conclusion, reordering boxplots in R is a simple and effective way to improve the visualization of your data. We have shown three examples of how to reorder boxplots in base R. We encourage readers to try these examples on their own and experiment with different datasets and custom functions.</p>
</section>
<section id="resources" class="level1">
<h1>Resources:</h1>
<ul>
<li><a href="https://r-graph-gallery.com/9-ordered-boxplot.html">https://r-graph-gallery.com/9-ordered-boxplot.html</a></li>
<li><a href="https://www.statology.org/reorder-boxplot-in-r/">https://www.statology.org/reorder-boxplot-in-r/</a></li>
<li><a href="https://youtube.com/watch?v=kLw_hSZhWCI">https://youtube.com/watch?v=kLw_hSZhWCI</a></li>
<li><a href="https://stackoverflow.com/questions/60424177/how-to-change-the-order-of-boxplot-in-r">https://stackoverflow.com/questions/60424177/how-to-change-the-order-of-boxplot-in-r)</a></li>
<li><a href="https://statisticsglobe.com/reorder-boxplot-in-r">https://statisticsglobe.com/reorder-boxplot-in-r</a></li>
<li><a href="https://www.geeksforgeeks.org/how-to-reorder-boxplots-in-r-with-ggplot2/">https://www.geeksforgeeks.org/how-to-reorder-boxplots-in-r-with-ggplot2/</a></li>
</ul>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-28/index.html</guid>
  <pubDate>Thu, 28 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Enhancing Your Data Visualizations with Base R: Overlaying Points and Lines</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-27/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a crucial aspect of data analysis and exploration. It allows us to gain insights, spot trends, and communicate our findings effectively. In R, there are numerous packages and libraries available for creating sophisticated plots, but understanding the basics of base R plotting is essential for any data analyst or scientist.</p>
<p>In this blog post, we’ll explore how to overlay points or lines on a plot using Base R. We’ll use the <code>plot()</code> function to create the initial plot and then show how to overlay points with <code>points()</code> and lines with <code>lines()</code>. We’ll provide several examples, explaining each code block in simple terms, and encourage you to try them out on your own datasets.</p>
</section>
<section id="setting-up-the-environment" class="level1">
<h1>Setting Up the Environment</h1>
<p>Before we start, make sure you have R installed on your system. You can download and install R from the official website (https://www.r-project.org/). Additionally, we’ll assume you have a basic understanding of R syntax and data structures.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-overlaying-points-on-a-scatter-plot" class="level2">
<h2 class="anchored" data-anchor-id="example-1-overlaying-points-on-a-scatter-plot">Example 1: Overlaying Points on a Scatter Plot</h2>
<p>Let’s begin with a simple scatter plot. Suppose we have two vectors, <code>x</code> and <code>y</code>, representing data points.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data</span></span>
<span id="cb1-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the initial scatter plot</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatter Plot with Overlay Points"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-axis"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y-axis"</span>)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overlay additional points (red circles) on the plot</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-27/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we use the <code>plot()</code> function to create a scatter plot of <code>x</code> and <code>y</code>. Then, we overlay red circles on the existing plot using <code>points()</code>. The <code>col</code> argument specifies the color, and <code>pch</code> determines the point shape (16 represents circles).</p>
</section>
<section id="example-2-overlaying-lines-on-a-line-plot" class="level2">
<h2 class="anchored" data-anchor-id="example-2-overlaying-lines-on-a-line-plot">Example 2: Overlaying Lines on a Line Plot</h2>
<p>Now, let’s work with line plots. Suppose we have two vectors, <code>x</code> and <code>y</code>, representing data points for a line graph.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data</span></span>
<span id="cb2-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb2-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the initial line plot</span></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Line Plot with Overlay Lines"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-axis"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y-axis"</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overlay a new line (dashed, blue) on the plot</span></span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-27/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we use the <code>plot()</code> function with <code>type = "l"</code> to create a line plot. Then, we overlay a dashed blue line on the plot using <code>lines()</code>. The <code>col</code> argument sets the line color, and <code>lty</code> specifies the line type (2 stands for dashed).</p>
</section>
<section id="example-3-combining-points-and-lines" class="level2">
<h2 class="anchored" data-anchor-id="example-3-combining-points-and-lines">Example 3: Combining Points and Lines</h2>
<p>In some cases, you might want to overlay both points and lines on the same plot to illustrate relationships more clearly. Let’s see how to do that:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample data</span></span>
<span id="cb3-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb3-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the initial scatter plot</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scatter Plot with Overlay Points and Lines"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-axis"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y-axis"</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overlay points (green triangles)</span></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>)</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overlay a line (purple) connecting the points</span></span>
<span id="cb3-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-27/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we start with a scatter plot and overlay green triangles using <code>points()</code> and a purple line using <code>lines()</code>. The combination of points and lines can help emphasize patterns and relationships in your data.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this blog post, we’ve explored how to overlay points and lines on a plot in Base R. We’ve covered scatter plots, line plots, and combinations of both. Overlaying points and lines can be a powerful way to enhance your data visualizations and convey insights effectively.</p>
<p>Now it’s your turn! Experiment with different datasets and customize your plots by adjusting colors, shapes, and line styles. Base R provides a solid foundation for data visualization, and mastering it will enable you to create informative plots for your data analysis projects.</p>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-27/index.html</guid>
  <pubDate>Wed, 27 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Data Visualization with ggplot2: A Guide to Using facet_grid()</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-26/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a crucial tool in the data scientist’s toolkit. It allows us to explore and communicate complex patterns and insights effectively. In the world of R programming, one of the most powerful and versatile packages for data visualization is ggplot2. Among its many features, ggplot2 offers the <code>facet_grid()</code> function, which enables you to create multiple plots arranged in a grid, making it easier to visualize different groups of data simultaneously.</p>
<p>In this blog post, we’ll dive into the fascinating world of <code>facet_grid()</code> using a practical example. We’ll generate some synthetic data, split it into multiple groups, and then use <code>facet_grid()</code> to create a visually appealing grid of plots.</p>
</section>
<section id="generating-synthetic-data" class="level1">
<h1>Generating Synthetic Data</h1>
<p>Let’s start by generating some synthetic data using the <code>TidyDensity</code> package in R. We’ll create three groups of data, each with 100 observations, and a mean of -2, 0, and 2, respectively, all with a standard deviation of 1. We’ll also perform this simulation five times to create a diverse dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(TidyDensity)</span>
<span id="cb1-2"></span>
<span id="cb1-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_multi_single_dist</span>(</span>
<span id="cb1-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.tidy_dist =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidy_normal"</span>, </span>
<span id="cb1-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.param_list =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb1-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), </span>
<span id="cb1-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb1-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.num_sims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb1-10">    )</span>
<span id="cb1-11">  )</span></code></pre></div>
</div>
<p>Now that we have our data, it’s time to visualize it using <code>facet_grid()</code>.</p>
</section>
<section id="using-facet_grid-to-visualize-multiple-groups" class="level1">
<h1>Using facet_grid() to Visualize Multiple Groups</h1>
<p>The <code>facet_grid()</code> function in ggplot2 is a versatile tool for creating a grid of plots based on one or more categorical variables. It allows you to create small multiples, which are a series of similar plots, each showing a subset of your data.</p>
<p>In our synthetic data, we have three groups (mean of -2, 0, and 2), and we want to visualize each group’s distribution. Here’s how you can do it:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a ggplot object</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load ggplot2</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a ggplot object</span></span>
<span id="cb2-6">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> sim_number, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim_number)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_density</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(. <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> dist_name)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Customize the plot</span></span>
<span id="cb2-11">p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density Plots of Three Different Means"</span>,</span>
<span id="cb2-12">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>,</span>
<span id="cb2-13">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-26/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this code:</p>
<ol type="1">
<li><p>We load the <code>ggplot2</code> package, which is essential for creating our plots.</p></li>
<li><p>We create a ggplot object <code>p</code> where we specify the aesthetics (x-axis, fill color) and the geometry (density plot). We use <code>facet_grid(. ~ simulation)</code> to split the data into separate facets based on the <code>simulation</code> variable. This means that each facet will represent one of the five simulations.</p></li>
<li><p>We add labels and customize the plot’s appearance using the <code>labs()</code> and <code>theme_minimal()</code> functions.</p></li>
<li><p>Finally, we display the plot by evaluating <code>p</code>.</p></li>
</ol>
<p>The resulting plot will show a grid of density plots, with each facet representing one simulation. Within each facet, you’ll see the density distribution of the data, colored by the group mean.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this blog post, we explored the power of ggplot2’s <code>facet_grid()</code> function for visualizing multiple groups of data. By generating synthetic data and using ggplot2, we created an informative grid of density plots, allowing us to compare and contrast the distributions of different groups.</p>
<p>The ability to create small multiples with <code>facet_grid()</code> is invaluable for gaining insights from complex datasets. Whether you’re working with synthetic data or real-world data, mastering ggplot2’s <code>facet_grid()</code> function will enhance your data visualization skills and help you communicate your findings more effectively.</p>
<p>So, go ahead and experiment with your data. Create your own grid of plots using <code>facet_grid()</code> and unlock new ways to visualize and understand your data. Happy plotting!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <category>ggplot2</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-26/index.html</guid>
  <pubDate>Tue, 26 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Data Visualization with Pairs Plots in Base R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-25/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a crucial tool in data analysis, allowing us to gain insights from our data quickly. One of the fundamental techniques for exploring relationships between variables is the pairs plot. In this blog post, we’ll dive into the world of pairs plots in base R. We’ll explore what they are, why they are useful, and how to create and interpret them.</p>
</section>
<section id="what-are-pairs-plots" class="level1">
<h1>What Are Pairs Plots?</h1>
<p>A pairs plot, also known as a scatterplot matrix, is a grid of scatterplots that displays pairwise relationships between multiple variables in a dataset. Each cell in the grid represents the relationship between two variables, and the diagonal cells display histograms or kernel density plots of individual variables. Pairs plots are incredibly versatile, helping us to identify patterns, correlations, and potential outliers in our data.</p>
</section>
<section id="getting-started" class="level1">
<h1>Getting Started</h1>
<p>Before we dive into creating pairs plots, let’s set up our environment and load a dataset. For this tutorial, we’ll use the built-in “iris” dataset, which contains measurements of iris flowers.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the iris dataset</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(iris)</span></code></pre></div>
</section>
<section id="creating-a-basic-pairs-plot" class="level1">
<h1>Creating a Basic Pairs Plot</h1>
<p>To create a basic pairs plot, we’ll use the <code>pairs()</code> function in base R. Here’s how to create one for the “iris” dataset:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a basic pairs plot</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pairs</span>(iris[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pairs Plot of Iris Data"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-25/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we specify the columns to include in the pairs plot (columns 1 to 4, which represent the sepal length, sepal width, petal length, and petal width). The <code>main</code> argument sets the title of the plot.</p>
</section>
<section id="interpreting-the-plot" class="level1">
<h1>Interpreting the Plot</h1>
<p>Now that we have our basic pairs plot, let’s break down how to interpret it:</p>
<ol type="1">
<li><p><strong>Diagonal Plots</strong>: The diagonal cells display histograms (or density plots) of individual variables. These plots show the distribution of each variable in the dataset.</p></li>
<li><p><strong>Off-Diagonal Plots</strong>: The off-diagonal cells contain scatterplots that show the relationship between pairs of variables. Each point in these scatterplots represents a data point in the dataset.</p>
<ul>
<li><p><strong>Patterns</strong>: Look for patterns or trends in the scatterplots. For example, do points cluster together, suggesting a strong correlation?</p></li>
<li><p><strong>Correlations</strong>: Observe the general direction of points. Are they moving upward or downward? This can give you insights into the strength and direction of the correlation.</p></li>
<li><p><strong>Outliers</strong>: Identify any outliers or data points that deviate significantly from the main cluster. Outliers can be indicative of errors or interesting cases in your data.</p></li>
</ul></li>
</ol>
<section id="customizing-your-pairs-plot" class="level2">
<h2 class="anchored" data-anchor-id="customizing-your-pairs-plot">Customizing Your Pairs Plot</h2>
<p>You can customize your pairs plot in various ways to make it more informative and visually appealing. Here are some customization options:</p>
<ul>
<li><p><strong>Coloring by Groups</strong>: If your dataset has categorical variables that define groups, you can use colors to distinguish between them. For example, you can color data points by species in the “iris” dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color points by species</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pairs</span>(iris[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pairs Plot of Iris Data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-25/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div></li>
<li><p><strong>Adding Regression Lines</strong>: To visualize linear relationships more clearly, you can add regression lines to the scatterplots.</p></li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add regression lines</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pairs</span>(iris[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel=</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x,y){</span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(x,y)</span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)})</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-25/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now let’s add color back into the plot:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pairs</span>(iris[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel=</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x,y){</span>
<span id="cb5-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a vector of colors for each point in the plot</span></span>
<span id="cb5-3">  colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setosa"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb5-4">                   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"versicolor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>))</span>
<span id="cb5-5"></span>
<span id="cb5-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the points with the corresponding colors</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(x, y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> colors)</span>
<span id="cb5-8"></span>
<span id="cb5-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a regression line</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb5-11">})</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-25/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try It Yourself!</h1>
<p>Now that you have a basic understanding of pairs plots in base R, I encourage you to try creating and customizing your own pairs plots. Use your own dataset or explore other built-in datasets like “mtcars” or “swiss.” Pairs plots are a powerful tool for exploratory data analysis, and by experimenting with them, you can uncover valuable insights in your data.</p>
<p>In conclusion, pairs plots in base R are a versatile and intuitive way to visualize relationships between multiple variables. Whether you’re a data scientist, analyst, or just someone interested in exploring data, mastering pairs plots can greatly enhance your ability to extract meaningful insights from your datasets. So, grab your data and start plotting!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-25/index.html</guid>
  <pubDate>Mon, 25 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating Confidence Intervals for a Linear Model in R Using Base R and the Iris Dataset</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-22/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Linear regression is a fundamental statistical technique used to model the relationship between a dependent variable and one or more independent variables. While fitting a linear model is relatively straightforward in R, it’s also essential to understand the uncertainty associated with our model’s predictions. One way to visualize this uncertainty is by creating confidence intervals around the regression line. In this blog post, we’ll walk through how to perform linear regression and plot confidence intervals using base R with the popular Iris dataset.</p>
</section>
<section id="about-the-iris-dataset" class="level1">
<h1>About the Iris Dataset</h1>
<p>The Iris dataset is a well-known dataset in the field of statistics and machine learning. It contains measurements of sepal length, sepal width, petal length, and petal width for three species of iris flowers: setosa, versicolor, and virginica. For our purposes, we’ll focus on predicting petal length based on petal width for one of the iris species.</p>
</section>
<section id="loading-the-data" class="level1">
<h1>Loading the Data</h1>
<p>First, let’s load the Iris dataset and take a quick look at its structure:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the Iris dataset</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(iris)</span></code></pre></div>
<p>Now view it</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the first few rows of the dataset</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(iris)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa</code></pre>
</div>
</div>
</section>
<section id="fitting-a-linear-model" class="level1">
<h1>Fitting a Linear Model</h1>
<p>We want to predict petal length (dependent variable) based on petal width (independent variable). To do this, we’ll fit a linear regression model using the <code>lm()</code> function in R:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a linear regression model</span></span>
<span id="cb4-2">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Petal.Length <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Petal.Width, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> iris)</span></code></pre></div>
</div>
<p>Now that we have our model, let’s move on to creating confidence intervals for the regression line.</p>
</section>
<section id="calculating-confidence-intervals" class="level1">
<h1>Calculating Confidence Intervals</h1>
<p>To calculate confidence intervals for the regression line, we’ll use the <code>predict()</code> function with the <code>interval</code> argument set to “confidence”:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate confidence intervals</span></span>
<span id="cb5-2">confidence_intervals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(</span>
<span id="cb5-3">  model, </span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interval =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"confidence"</span>, </span>
<span id="cb5-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb5-6">)</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the first few rows of the confidence intervals</span></span>
<span id="cb5-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(confidence_intervals)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       fit      lwr      upr
1 1.529546 1.402050 1.657042
2 1.529546 1.402050 1.657042
3 1.529546 1.402050 1.657042
4 1.529546 1.402050 1.657042
5 1.529546 1.402050 1.657042
6 1.975534 1.863533 2.087536</code></pre>
</div>
</div>
<p>The <code>confidence_intervals</code> object now contains the lower and upper bounds of the confidence intervals for our predictions.</p>
</section>
<section id="creating-the-plot" class="level1">
<h1>Creating the Plot</h1>
<p>With the confidence intervals calculated, we can create a visually appealing plot to display our linear regression model and the associated confidence intervals:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatterplot of the data</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb7-3">  iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Petal.Width, </span>
<span id="cb7-4">  iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Petal.Length, </span>
<span id="cb7-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Linear Regression with Confidence Intervals"</span>, </span>
<span id="cb7-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Petal Width"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Petal Length"</span></span>
<span id="cb7-7">)</span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the regression line</span></span>
<span id="cb7-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add confidence intervals as shaded areas</span></span>
<span id="cb7-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon</span>(</span>
<span id="cb7-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Petal.Width, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Petal.Width)),</span>
<span id="cb7-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb7-16">    confidence_intervals[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lwr"</span>], </span>
<span id="cb7-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(confidence_intervals[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upr"</span>])</span>
<span id="cb7-18">    ), </span>
<span id="cb7-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb7-20"></span>
<span id="cb7-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a legend</span></span>
<span id="cb7-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(</span>
<span id="cb7-23">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, </span>
<span id="cb7-24">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Regression Line"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"95% Confidence Interval"</span>), </span>
<span id="cb7-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)), </span>
<span id="cb7-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>))</span>
<span id="cb7-27">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-22/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this plot, we start by creating a scatterplot of the data points, then overlay the regression line in blue. The shaded area represents the 95% confidence interval around the regression line, giving us an idea of the uncertainty in our predictions.</p>
<p>Here is a slightly different method, the confidence intervals:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate confidence intervals</span></span>
<span id="cb8-2">conf_intervals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interval =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"confidence"</span>)</span></code></pre></div>
</div>
<p>Now the plot:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatterplot</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(</span>
<span id="cb9-3">  iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Petal.Width, </span>
<span id="cb9-4">  iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Petal.Length, </span>
<span id="cb9-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Linear Model with Confidence Intervals"</span>,</span>
<span id="cb9-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Petal Width"</span>, </span>
<span id="cb9-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Petal Length"</span>, </span>
<span id="cb9-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, </span>
<span id="cb9-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span></span>
<span id="cb9-10">)</span>
<span id="cb9-11"></span>
<span id="cb9-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the regression line</span></span>
<span id="cb9-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb9-14"></span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add confidence intervals</span></span>
<span id="cb9-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(</span>
<span id="cb9-17">  iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Petal.Width, </span>
<span id="cb9-18">  conf_intervals[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lwr"</span>], </span>
<span id="cb9-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, </span>
<span id="cb9-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-21">)</span>
<span id="cb9-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(</span>
<span id="cb9-23">  iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Petal.Width, </span>
<span id="cb9-24">  conf_intervals[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upr"</span>], </span>
<span id="cb9-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, </span>
<span id="cb9-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb9-27">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-22/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this blog post, we’ve demonstrated how to perform linear regression and plot confidence intervals using base R with the Iris dataset. Understanding and visualizing the uncertainty associated with our regression model is crucial for making informed decisions based on the model’s predictions. You can apply these techniques to other datasets and regression problems to gain deeper insights into your data.</p>
<p>Linear regression is just one of the many statistical techniques that R offers. As you continue your data analysis journey, you’ll find R to be a powerful tool for exploring, modeling, and visualizing data.</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-22/index.html</guid>
  <pubDate>Fri, 22 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Data Visualization in R: Plotting Predicted Values with the mtcars Dataset</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-20/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a powerful tool in a data scientist’s toolkit. It not only helps us understand our data but also presents it in a way that is easy to comprehend. In this blog post, we will explore how to plot predicted values in R using the mtcars dataset. We will train a simple regression model to predict the miles per gallon (mpg) of cars based on their attributes and then visualize the predictions. By the end of this tutorial, you’ll have a clear understanding of how to plot predicted values and can apply this knowledge to your own data analysis projects.</p>
<p><strong>Step 1: Load the Required Libraries</strong></p>
<p>Before we dive into the code, let’s make sure we have the necessary libraries installed. We’ll be using <code>ggplot2</code> for plotting and <code>caret</code> for model training and evaluation. You can install them if you haven’t already using:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caret"</span>)</span></code></pre></div>
<p>Now, let’s load the libraries:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(caret)</span></code></pre></div>
</div>
<p><strong>Step 2: Load and Explore the Data</strong></p>
<p>We’ll use the classic <code>mtcars</code> dataset, which contains various attributes of different car models. Our goal is to predict the fuel efficiency (mpg) of these cars. Let’s load and explore the dataset:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(mtcars)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                   mpg cyl disp  hp drat    wt  qsec vs am gear carb
Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1</code></pre>
</div>
</div>
<p>This will display the first few rows of the dataset, giving you an idea of what it looks like.</p>
<p><strong>Step 3: Split the Data into Training and Testing Sets</strong></p>
<p>Before we proceed with modeling and prediction, we need to split our data into training and testing sets. We’ll use 80% of the data for training and the remaining 20% for testing:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for reproducibility</span></span>
<span id="cb5-2">splitIndex <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createDataPartition</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">list =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb5-3">training_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mtcars[splitIndex, ]</span>
<span id="cb5-4">testing_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mtcars[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>splitIndex, ]</span></code></pre></div>
</div>
<p><strong>Step 4: Build a Simple Linear Regression Model</strong></p>
<p>Now, let’s build a simple linear regression model to predict <code>mpg</code> based on other attributes. We’ll use the <code>lm()</code> function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(mpg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> training_data)</span></code></pre></div>
</div>
<p>This line of code fits the linear regression model using the training data.</p>
<p><strong>Step 5: Make Predictions</strong></p>
<p>With our model trained, we can now make predictions on the testing data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> testing_data)</span></code></pre></div>
</div>
<p><strong>Step 6: Create a Scatter Plot of Predicted vs.&nbsp;Actual Values</strong></p>
<p>The most exciting part is visualizing the predicted values. We can do this using a scatter plot. Let’s create one:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine actual and predicted values</span></span>
<span id="cb8-2">plot_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Actual =</span> testing_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Predicted =</span> predictions)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot</span></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(plot_data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Actual, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Predicted)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb8-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Actual MPG"</span>, </span>
<span id="cb8-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted MPG"</span>, </span>
<span id="cb8-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Actual vs. Predicted MPG"</span></span>
<span id="cb8-12">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-20/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This code generates a scatter plot with the actual MPG values on the x-axis and predicted MPG values on the y-axis. The red line represents a linear regression line that helps us see how well our predictions align with the actual data.</p>
<p>Here is how we also plot the data in base R.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine actual and predicted values</span></span>
<span id="cb9-2">plot_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Actual =</span> testing_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Predicted =</span> predictions)</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot</span></span>
<span id="cb9-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(plot_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Actual, plot_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Predicted,</span>
<span id="cb9-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Actual MPG"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted MPG"</span>,</span>
<span id="cb9-7">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Actual vs. Predicted MPG"</span>,</span>
<span id="cb9-8">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb9-9"></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a regression line</span></span>
<span id="cb9-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Predicted <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Actual, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> plot_data), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-20/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Congratulations! You’ve successfully learned how to plot predicted values in R using the mtcars dataset. Visualization is a vital part of data analysis, and it can provide valuable insights into the performance of your predictive models.</p>
<p>I encourage you to try this on your own datasets and explore more advanced visualization techniques. Experiment with different models and datasets to gain a deeper understanding of data visualization in R. Happy coding!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-20/index.html</guid>
  <pubDate>Wed, 20 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring Data with Scatter Plots by Group in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-19/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a powerful tool for gaining insights from your data. Scatter plots, in particular, are excellent for visualizing relationships between two continuous variables. But what if you want to compare multiple groups within your data? In this blog post, we’ll explore how to create engaging scatter plots by group in R. We’ll walk through the process step by step, providing several examples and explaining the code blocks in simple terms. So, whether you’re a data scientist, analyst, or just curious about R, let’s dive in and discover how to make your data come to life!</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites:</h1>
<p>Before we get started, make sure you have R and RStudio installed on your computer. If you haven’t already, you can download them from the official websites: <a href="https://www.r-project.org/">R</a> and <a href="https://www.rstudio.com/">RStudio</a>.</p>
</section>
<section id="data-preparation" class="level1">
<h1>Data Preparation:</h1>
<p>For this tutorial, we’ll use a sample dataset called <code>iris</code>. It’s included in R and contains information about three different species of iris flowers. To begin, load the dataset:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the iris dataset</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(iris)</span></code></pre></div>
<p>Now, let’s examine the first few rows of the dataset using the <code>head()</code> function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the first 6 rows of the dataset</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(iris)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa</code></pre>
</div>
</div>
<p>This dataset has four numeric variables: Sepal.Length, Sepal.Width, Petal.Length, and Petal.Width. The fifth variable, Species, represents the different iris species (Setosa, Versicolor, and Virginica). We’ll use this categorical variable to group our data for scatter plots.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="using-ggplot2" class="level2">
<h2 class="anchored" data-anchor-id="using-ggplot2">Using <code>ggplot2</code></h2>
<section id="creating-scatter-plots-by-group" class="level3">
<h3 class="anchored" data-anchor-id="creating-scatter-plots-by-group">Creating Scatter Plots by Group:</h3>
<p>To create scatter plots by group, we’ll use the popular R package, ggplot2. If you haven’t installed it yet, you can do so using the following command:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(ggplot2)){<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>)}</span></code></pre></div>
</div>
<p>Now, let’s load the ggplot2 library:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the ggplot2 library</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span></code></pre></div>
</div>
<section id="example-1-basic-scatter-plot" class="level4">
<h4 class="anchored" data-anchor-id="example-1-basic-scatter-plot">Example 1: Basic Scatter Plot</h4>
<p>Let’s start with a basic scatter plot that shows the relationship between Sepal.Length and Sepal.Width for all iris species. We’ll color the points by species to distinguish them:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a basic scatter plot</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> iris, </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Sepal.Width, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length vs. Sepal Width by Species"</span>,</span>
<span id="cb6-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length"</span>,</span>
<span id="cb6-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Width"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-19/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this code: - We specify the dataset (<code>iris</code>) and the variables we want to plot. - <code>geom_point()</code> adds the points to the plot. - <code>labs()</code> is used to add a title and label the axes.</p>
</section>
<section id="example-2-faceted-scatter-plot" class="level4">
<h4 class="anchored" data-anchor-id="example-2-faceted-scatter-plot">Example 2: Faceted Scatter Plot</h4>
<p>Now, let’s take it a step further and create separate scatter plots for each iris species using faceting:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create faceted scatter plots</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb7-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> iris, </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Sepal.Width, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>Species) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length vs. Sepal Width by Species"</span>,</span>
<span id="cb7-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length"</span>,</span>
<span id="cb7-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Width"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-19/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, <code>facet_wrap(~Species)</code> creates three individual scatter plots, one for each iris species. This makes it easier to compare the species’ characteristics.</p>
</section>
<section id="example-3-customized-scatter-plot" class="level4">
<h4 class="anchored" data-anchor-id="example-3-customized-scatter-plot">Example 3: Customized Scatter Plot</h4>
<p>Let’s customize our scatter plot further by adding regression lines and adjusting point aesthetics:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a customized scatter plot</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb8-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> iris, </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Sepal.Width, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> Species)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Customized Sepal Length vs. Sepal Width by Species"</span>,</span>
<span id="cb8-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length"</span>,</span>
<span id="cb8-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Width"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>`geom_smooth()` using formula = 'y ~ x'</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-19/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example: - <code>geom_point()</code> now includes size, alpha (transparency), and shape aesthetics. - <code>geom_smooth()</code> adds linear regression lines to each group.</p>
</section>
</section>
</section>
<section id="using-base-r" class="level2">
<h2 class="anchored" data-anchor-id="using-base-r">Using Base R</h2>
<section id="example-1-basic-scatter-plot-in-base-r" class="level3">
<h3 class="anchored" data-anchor-id="example-1-basic-scatter-plot-in-base-r">Example 1: Basic Scatter Plot in Base R</h3>
<p>To create a basic scatter plot in base R, we can use the <code>plot()</code> function. Here’s how to create a scatter plot of Sepal.Length vs.&nbsp;Sepal.Width by grouping on the “Species” variable:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a basic scatter plot</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length, iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species, </span>
<span id="cb10-3">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length vs. Sepal Width by Species"</span>,</span>
<span id="cb10-4">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Width"</span>)</span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-19/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this code: - <code>plot()</code> is used to create the scatter plot. - We specify the x and y variables, and we use the <code>col</code> argument to color the points by species. - <code>pch</code> specifies the point character (shape). - <code>main</code>, <code>xlab</code>, and <code>ylab</code> are used to add a title and label the axes. - <code>legend()</code> adds a legend to distinguish the species colors.</p>
</section>
<section id="example-2-faceted-scatter-plot-in-base-r" class="level3">
<h3 class="anchored" data-anchor-id="example-2-faceted-scatter-plot-in-base-r">Example 2: Faceted Scatter Plot in Base R</h3>
<p>To create faceted scatter plots in base R, we can use the <code>split()</code> function to split the data by the “Species” variable and then create individual scatter plots for each group:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split the data by species</span></span>
<span id="cb11-2">split_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split</span>(iris, iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create faceted scatter plots</span></span>
<span id="cb11-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Arrange plots in one row and three columns</span></span>
<span id="cb11-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(split_data[[i]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length, split_data[[i]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width, </span>
<span id="cb11-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)[i], </span>
<span id="cb11-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Width"</span>)</span>
<span id="cb11-10">}</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-19/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<p>In this code: - We first use <code>split()</code> to split the data into three groups based on the “Species” variable. - Then, we use a <code>for</code> loop to create individual scatter plots for each group. - <code>par(mfrow = c(1, 3))</code> arranges the plots in one row and three columns.</p>
</section>
<section id="example-3-customized-scatter-plot-in-base-r" class="level3">
<h3 class="anchored" data-anchor-id="example-3-customized-scatter-plot-in-base-r">Example 3: Customized Scatter Plot in Base R</h3>
<p>To create a customized scatter plot in base R, we can adjust various graphical parameters. Here’s an example with customized aesthetics and regression lines:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a customized scatter plot with regression lines</span></span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Length, iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sepal.Width, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species, </span>
<span id="cb13-3">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Customized Sepal Length vs. Sepal Width by Species"</span>,</span>
<span id="cb13-4">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Length"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sepal Width"</span>)</span>
<span id="cb13-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>)</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add regression lines</span></span>
<span id="cb13-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb13-9">  group_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> split_data[[i]]</span>
<span id="cb13-10">  lm_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Sepal.Width <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Sepal.Length, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> group_data)</span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(lm_fit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> i)</span>
<span id="cb13-12">}</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-19/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this code: - We add regression lines to each group using a <code>for</code> loop and the <code>abline()</code> function. - The <code>lm()</code> function is used to fit linear regression models to each group separately.</p>
<p>Now you have recreated the scatter plots by group using base R. Feel free to explore more customization options and adapt these examples to your specific needs. Happy coding!</p>
</section>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion:</h1>
<p>Creating scatter plots by group in R allows you to uncover hidden patterns and trends within your data. We’ve explored basic scatter plots, faceted plots, and even customized visualizations. Remember, the power of R lies in its flexibility, so don’t hesitate to experiment and make these examples your own. Try different datasets and variables, change colors, and explore various plotting options to truly harness the power of data visualization in R. Happy coding!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-19/index.html</guid>
  <pubDate>Tue, 19 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Histogram Breaks in R: Unveiling the Power of Data Visualization</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-17/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Histograms are a fundamental tool in data analysis and visualization, allowing us to explore the distribution of data quickly and effectively. While creating a histogram in R is straightforward, specifying breaks appropriately can make a world of difference in the insights you can draw from your data. In this blog post, we will delve into the art of specifying breaks in a histogram, providing you with multiple examples and encouraging you to experiment on your own.</p>
<p>Before we get started, it’s worth mentioning that this topic has been explored in depth by Steve Sanderson in his previous blog post. If you’re interested in diving even deeper, make sure to check out his article here: <a href="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-10/index.html">Steve’s Blog Post on Optimal Binning</a>. Now, let’s embark on our journey into the fascinating world of histogram breaks in R.</p>
</section>
<section id="understanding-histogram-breaks" class="level1">
<h1>Understanding Histogram Breaks</h1>
<p>Histograms divide data into bins, or intervals, and then count how many data points fall into each bin. The <code>breaks</code> parameter in R allows you to control how these bins are defined. By specifying breaks thoughtfully, you can highlight specific patterns and nuances in your data.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-default-breaks" class="level2">
<h2 class="anchored" data-anchor-id="example-1-default-breaks">Example 1: Default Breaks</h2>
<p>Let’s start with a simple example using R’s built-in <code>mtcars</code> dataset:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a histogram with default breaks</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Default Breaks"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miles per Gallon"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-17/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this case, R automatically selects the breaks based on the range of the data. The resulting histogram might not reveal finer details, and it’s essential to understand how to customize breaks to suit your analysis.</p>
</section>
<section id="example-2-specifying-equal-breaks" class="level2">
<h2 class="anchored" data-anchor-id="example-2-specifying-equal-breaks">Example 2: Specifying Equal Breaks</h2>
<p>You can specify equal-width breaks using the <code>breaks</code> parameter. Here’s an example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a histogram with equal-width breaks</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Equal Width Breaks"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miles per Gallon"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-17/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we divided the data into 10 equal-width bins. This approach can help reveal underlying patterns in the data distribution.</p>
</section>
<section id="example-3-custom-breaks" class="level2">
<h2 class="anchored" data-anchor-id="example-3-custom-breaks">Example 3: Custom Breaks</h2>
<p>Sometimes, you may have domain knowledge that suggests specific break points. Let’s explore a case where we set custom breaks:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a histogram with custom breaks</span></span>
<span id="cb3-2">custom_breaks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Custom Breaks"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miles per Gallon"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> custom_breaks)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-17/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here, we’ve defined custom break points, which can help emphasize critical thresholds in the data.</p>
</section>
<section id="example-4-logarithmic-breaks" class="level2">
<h2 class="anchored" data-anchor-id="example-4-logarithmic-breaks">Example 4: Logarithmic Breaks</h2>
<p>In some cases, data may follow a logarithmic distribution. You can use logarithmic breaks to visualize such data effectively:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a histogram with logarithmic breaks</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Logarithmic Breaks"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log(Miles per Gallon)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-17/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>By taking the logarithm of the data and setting appropriate breaks, you can bring out patterns that might be obscured in a standard histogram.</p>
</section>
</section>
<section id="experiment-and-learn" class="level1">
<h1>Experiment and Learn</h1>
<p>Now that you’ve seen various ways to specify breaks in a histogram, it’s your turn to experiment. Try different datasets, change the number of breaks, and explore different types of breaks (equal width, custom, logarithmic) to discover how they impact your data visualization.</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Histograms are powerful tools for exploring data distributions, and understanding how to specify breaks effectively can elevate your data analysis. Whether you’re highlighting subtle patterns or emphasizing important thresholds, customizing breaks in R allows you to tell a richer data story. Don’t forget to check out Steve Sanderson’s previous blog post for even more insights on this topic.</p>
<p>Happy coding and visualizing!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-17/index.html</guid>
  <pubDate>Mon, 18 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Histograms with Two or More Variables in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-15/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Histograms are powerful tools for visualizing the distribution of a single variable, but what if you want to compare the distributions of two variables side by side? In this blog post, we’ll explore how to create a histogram of two variables in R, a popular programming language for data analysis and visualization.</p>
<p>We’ll cover various scenarios, from basic histograms to more advanced techniques, and explain the code step by step in simple terms. So, grab your favorite dataset or generate some random data, and let’s dive into the world of dual-variable histograms!</p>
</section>
<section id="prerequisites" class="level1">
<h1>Prerequisites</h1>
<p>Before we start, ensure you have R installed on your computer. You can download it from <a href="https://cran.r-project.org/mirrors.html">R’s official website</a>. Additionally, you might find it helpful to have RStudio, an integrated development environment for R.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="basic-dual-variable-histogram" class="level2">
<h2 class="anchored" data-anchor-id="basic-dual-variable-histogram">Basic Dual-Variable Histogram</h2>
<p>Let’s begin with the most straightforward scenario: creating a histogram of two variables using the <code>hist()</code> function. We’ll use the built-in <code>mtcars</code> dataset, which contains information about various car models.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">x1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-2">x2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-3">minx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(x1, x2)</span>
<span id="cb1-4">maxx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(x1, x2)</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a basic dual-variable histogram</span></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(x1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Histogram of rnorm with mean 0 and 2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, </span>
<span id="cb1-8">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(minx, maxx))</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(x2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, </span>
<span id="cb1-10">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgreen"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean: 0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mean: 2"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgreen"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-15/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The given R code generates a dual-variable histogram in R using the <code>hist()</code> function. The first two lines of code generate two vectors <code>x1</code> and <code>x2</code> of 1000 random normal numbers each, with <code>x1</code> having a mean of 0 and <code>x2</code> having a mean of 2. The <code>min()</code> and <code>max()</code> functions are then used to find the minimum and maximum values between <code>x1</code> and <code>x2</code>. These values are used to set the limits of the x-axis of the histogram.</p>
<p>The <code>hist()</code> function is then called twice to create two histograms, one for <code>x1</code> and one for <code>x2</code>. The <code>col</code> argument is used to set the color of each histogram. The <code>add</code> argument is set to <code>TRUE</code> for the second histogram so that it is overlaid on top of the first histogram. Finally, the <code>legend()</code> function is used to add a legend to the plot indicating which histogram corresponds to which variable.</p>
<p>In summary, the code generates a dual-variable histogram of two vectors of random normal numbers with different means. The histogram shows the distribution of values for each variable and allows for easy comparison between the two variables.</p>
</section>
<section id="dual-variable-histogram-with-transparency" class="level2">
<h2 class="anchored" data-anchor-id="dual-variable-histogram-with-transparency">Dual-Variable Histogram with Transparency</h2>
<p>Adding transparency to the histograms can make the visualization more informative when the bars overlap. We can achieve this by setting the <code>alpha</code> parameter in the <code>col</code> argument. Let’s use the same dataset and create a dual-variable histogram with transparency:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a dual-variable histogram with transparency</span></span>
<span id="cb2-2">minx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>hp)</span>
<span id="cb2-3">maxx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>hp)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(</span>
<span id="cb2-5">  mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, </span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Histogram of MPG and Horsepower"</span>, </span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Value"</span>,</span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>, </span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>), </span>
<span id="cb2-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(minx, maxx))</span>
<span id="cb2-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(</span>
<span id="cb2-12">  mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>hp, </span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>), </span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb2-15">  )</span>
<span id="cb2-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MPG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Horsepower"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-15/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here, we use the <code>rgb()</code> function to set the color with transparency. The <code>alpha</code> parameter controls the transparency level, with values between 0 (completely transparent) and 1 (completely opaque).</p>
</section>
<section id="side-by-side-histograms" class="level2">
<h2 class="anchored" data-anchor-id="side-by-side-histograms">Side-by-Side Histograms</h2>
<p>If you prefer to display the histograms side by side, you can use the <code>par()</code> function to adjust the layout. Here’s an example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up a side-by-side layout</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create side-by-side histograms</span></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mpg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Histogram of MPG"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miles Per Gallon"</span>, </span>
<span id="cb3-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>))</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(mtcars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>hp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Histogram of Horsepower"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Horsepower"</span>, </span>
<span id="cb3-8">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgreen"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-15/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<p>In this code, we use <code>par(mfrow=c(1, 2))</code> to set up a 1x2 layout, which means two plots will appear side by side.</p>
</section>
<section id="customizing-dual-variable-histograms" class="level2">
<h2 class="anchored" data-anchor-id="customizing-dual-variable-histograms">Customizing Dual-Variable Histograms</h2>
<p>You can customize your dual-variable histograms further by adjusting various parameters, such as bin width, titles, labels, and colors. Experiment with different settings to create visualizations that best convey your data’s story.</p>
<p>Remember, the key to effective data visualization is experimentation and exploration. Try different datasets, play with colors and styles, and find the representation that best suits your needs.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this blog post, we’ve explored several ways to create histograms of two variables in R. Whether you’re comparing distributions or just visualizing your data, histograms are a valuable tool in your data analysis toolkit. Experiment with the provided examples and take your data visualization skills to the next level!</p>
<p>So, fire up your R environment, load your data, and start creating dual-variable histograms today. Happy coding!</p>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-15/index.html</guid>
  <pubDate>Fri, 15 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Create a Histogram with Different Colors in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-14/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Histograms are a fantastic way to visualize the distribution of data. They provide insights into the underlying patterns and help us understand our data better. But what if you want to add some color to your histograms to make them more visually appealing or to highlight specific data points? In this blog post, we’ll explore how to create histograms with different colors in R, and we’ll provide several examples to guide you through the process.</p>
</section>
<section id="why-add-color-to-histograms" class="level1">
<h1>Why Add Color to Histograms?</h1>
<p>Color can be a powerful tool for data visualization. By adding color to your histograms, you can:</p>
<ol type="1">
<li><p><strong>Emphasize specific data points:</strong> Highlighting certain parts of your distribution can make it easier for viewers to focus on what’s important.</p></li>
<li><p><strong>Improve aesthetics:</strong> Adding color can make your charts more visually appealing, making them suitable for presentations and reports.</p></li>
<li><p><strong>Enhance readability:</strong> Different colors can help distinguish between multiple histograms on the same plot or separate data categories.</p></li>
</ol>
<p>Now, let’s dive into some R code to create colorful histograms.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-basic-histogram-with-a-single-color" class="level2">
<h2 class="anchored" data-anchor-id="example-1-basic-histogram-with-a-single-color">Example 1: Basic Histogram with a Single Color</h2>
<p>Let’s start with the basics. To create a simple histogram with a single color, we’ll use the built-in <code>hist()</code> function and then customize it with the <code>col</code> parameter:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate some example data</span></span>
<span id="cb1-2">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a basic histogram with a single color (e.g., blue)</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Basic Histogram"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-14/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we generated 1000 random data points and created a histogram with blue bars. You can replace <code>"blue"</code> with any valid color name or code you prefer.</p>
</section>
<section id="example-2-customizing-bin-colors" class="level2">
<h2 class="anchored" data-anchor-id="example-2-customizing-bin-colors">Example 2: Customizing Bin Colors</h2>
<p>Sometimes, you might want to use different colors for individual bins in your histogram. Here’s how you can achieve that:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate example data</span></span>
<span id="cb2-2">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define custom colors for each bin</span></span>
<span id="cb2-5">bin_colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yellow"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a histogram with custom bin colors</span></span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> bin_colors, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Custom Bin Colors"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-14/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we’ve specified five custom colors for our histogram’s bins, creating a colorful representation of the data distribution.</p>
</section>
<section id="example-3-overlaying-multiple-histograms" class="level2">
<h2 class="anchored" data-anchor-id="example-3-overlaying-multiple-histograms">Example 3: Overlaying Multiple Histograms</h2>
<p>You may also want to compare multiple data distributions in a single histogram. To do this, you can overlay histograms with different colors. Here’s an example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate two sets of example data</span></span>
<span id="cb3-2">data1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-3">data2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create histograms for each dataset and overlay them</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(data1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Overlayed Histograms"</span>)</span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(data2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data 1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data 2"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-14/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we generated two datasets and overlaid their histograms with different colors. The <code>alpha</code> parameter controls the transparency of the bars, making it easier to see overlapping areas.</p>
</section>
<section id="experiment-and-explore" class="level2">
<h2 class="anchored" data-anchor-id="experiment-and-explore">Experiment and Explore</h2>
<p>Now that you’ve seen how to create histograms with different colors in R, I encourage you to experiment with your own datasets and colors. R provides numerous options for customizing your histograms, so you can tailor them to your specific needs. Play around with colors, transparency, and other graphical parameters to create engaging and informative visualizations.</p>
<p>Remember, the best way to learn is by doing, so fire up your R environment and start creating colorful histograms today!</p>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-14/index.html</guid>
  <pubDate>Thu, 14 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>How to Plot Multiple Plots on the Same Graph in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-13/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a crucial aspect of data analysis. In R, the flexibility and power of its plotting capabilities allow you to create compelling visualizations. One common scenario is the need to display multiple plots on the same graph. In this blog post, we’ll explore three different approaches to achieve this using the same dataset. We’ll use the <code>set.seed(123)</code> and generate data with <code>x</code> and <code>y</code> equal to <code>cumsum(rnorm(25))</code> for consistency across examples.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-overlaying-multiple-lines-on-the-same-graph" class="level2">
<h2 class="anchored" data-anchor-id="example-1-overlaying-multiple-lines-on-the-same-graph">Example 1: Overlaying Multiple Lines on the Same Graph</h2>
<p>In this example, we will overlay two lines on the same graph. This is a great way to compare trends between two variables in a single plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the seed for reproducibility</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate the data</span></span>
<span id="cb1-5">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb1-6">y1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>))</span>
<span id="cb1-7">y2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>))</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the plot</span></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(y1, y2), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(y1, y2)), </span>
<span id="cb1-11">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Overlaying Multiple Lines'</span>)</span>
<span id="cb1-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x, y2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'topleft'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Line 1'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Line 2'</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-13/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this code, we first generate the data for <code>y1</code> and <code>y2</code>. Then, we use the <code>plot()</code> function to create a plot of <code>y1</code>. We specify <code>type = 'l'</code> to create a line plot and set the color to blue. Next, we use the <code>lines()</code> function to overlay <code>y2</code> on the same plot with a red line. Finally, we add a legend to distinguish the two lines.</p>
</section>
<section id="example-2-side-by-side-plots" class="level2">
<h2 class="anchored" data-anchor-id="example-2-side-by-side-plots">Example 2: Side-by-Side Plots</h2>
<p>Sometimes, you might want to display multiple plots side by side to compare different variables. We can achieve this using the <code>par()</code> function and layout options.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a side-by-side layout</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the first plot</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, </span>
<span id="cb2-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Side-by-Side Plots (1)'</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the second plot</span></span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>,</span>
<span id="cb2-10">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Side-by-Side Plots (2)'</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-13/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reset Par</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<p>In this example, we use <code>par(mfrow = c(1, 2))</code> to set up a side-by-side layout. Then, we create two separate plots for <code>y1</code> and <code>y2</code>.</p>
</section>
<section id="example-3-stacked-plots" class="level2">
<h2 class="anchored" data-anchor-id="example-3-stacked-plots">Example 3: Stacked Plots</h2>
<p>Stacked plots are useful when you want to compare the overall trend while preserving the individual patterns of different variables. Here, we stack two line plots on top of each other.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the first plot</span></span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, </span>
<span id="cb4-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Stacked Plots'</span>)</span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the second plot</span></span>
<span id="cb4-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, y2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'l'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>,</span>
<span id="cb4-9">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'X-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Y-axis'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Side-by-Side Plots (2)'</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-13/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<p>The first line of code, <code>par(mfrow = c(2, 1), mar = c(2, 4, 4, 2))</code>, tells R to create a 2x1 (two rows, one column) plot with margins of 2, 4, 4, and 2. This means that the two plots will be stacked on top of each other.</p>
<p>The next line of code, <code>plot(x, y1, type = 'l', col = 'blue', xlab = 'X-axis', ylab = 'Y-axis', main = 'Stacked Plots')</code>, create the first plot. The <code>plot()</code> function creates a plot of the data in the vectors x and y1. The <code>type = 'l'</code> argument tells R to create a line plot, the col = ‘blue’ argument tells R to use blue color for the line, and the other arguments set the labels for the axes and the title of the plot.</p>
<p>The fourth line of code, <code>plot(x, y2, type = 'l', col = 'red', xlab = 'X-axis', ylab = 'Y-axis', main = 'Side-by-Side Plots (2)')</code>, create the second plot. This plot is similar to the first plot, except that the line is red.</p>
<p>The last line of code, <code>par(mfrow = c(1, 1))</code>, resets the plot to a single plot.</p>
<p>In summary, this code creates two line plots, one stacked on top of the other. The first plot uses blue lines and the second plot uses red lines. The plots are labeled and titled appropriately.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this blog post, we explored three different techniques for plotting multiple plots on the same graph in R. Whether you need to overlay lines, display plots side by side, or stack them, R offers powerful tools to visualize your data effectively. Try these examples with your own data to harness the full potential of R’s plotting capabilities and create informative visualizations for your analyses. Happy plotting!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-13/index.html</guid>
  <pubDate>Wed, 13 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring the Third Dimension with R: A Guide to the persp() Function</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-12/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>If you’re an R enthusiast looking to take your data visualization to the next level, you’re in for a treat. In this blog post, we’re going to dive into the world of 3D plotting using R’s powerful <code>persp()</code> function. Whether you’re visualizing surfaces, mathematical functions, or complex data, <code>persp()</code> is a versatile tool that can help you create stunning three-dimensional plots.</p>
</section>
<section id="what-is-persp" class="level1">
<h1>What is persp()?</h1>
<p>The <code>persp()</code> function in R stands for “perspective plot,” and it’s part of the base graphics package. It allows you to create three-dimensional surface plots by representing a matrix of heights or values as a surface, with the x and y coordinates defining the grid and the z coordinates representing the height of the surface at each point.</p>
<section id="the-syntax-of-persp" class="level2">
<h2 class="anchored" data-anchor-id="the-syntax-of-persp">The Syntax of persp()</h2>
<p>Before we dive into examples, let’s take a look at the basic syntax of the <code>persp()</code> function:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">persp</span>(x, y, z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>,</span>
<span id="cb1-2">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, ... )</span></code></pre></div>
<ul>
<li><code>x</code>, <code>y</code>, and <code>z</code> are the vectors or matrices representing the x, y, and z coordinates of the data points.</li>
<li><code>theta</code> and <code>phi</code> control the orientation of the plot. <code>theta</code> sets the azimuthal angle (rotation around the z-axis), and <code>phi</code> sets the polar angle (rotation from the xy-plane). These angles are in degrees.</li>
<li><code>col</code> and <code>border</code> control the color of the surface and its border, respectively.</li>
<li><code>scale</code> is a logical value that determines whether the axes should be scaled to match the data range.</li>
<li>Additional parameters can be passed as <code>...</code> to customize the plot further.</li>
</ul>
<p>Now, let’s jump into some examples to see how <code>persp()</code> works in action!</p>
</section>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-creating-a-simple-surface-plot" class="level2">
<h2 class="anchored" data-anchor-id="example-1-creating-a-simple-surface-plot">Example 1: Creating a Simple Surface Plot</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create data for a simple surface plot</span></span>
<span id="cb2-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb2-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb2-4">z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(x, y, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cos</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a 3D surface plot</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">persp</span>(x, y, z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-12/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we generate a grid of x and y values and calculate the corresponding z values based on a mathematical function. The <code>persp()</code> function then creates a 3D surface plot, using the provided x, y, and z data.</p>
</section>
<section id="example-2-customizing-the-perspective" class="level2">
<h2 class="anchored" data-anchor-id="example-2-customizing-the-perspective">Example 2: Customizing the Perspective</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create data for a surface plot</span></span>
<span id="cb3-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-4">z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(x, y, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a customized 3D surface plot</span></span>
<span id="cb3-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">persp</span>(x, y, z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-12/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this example, we create a similar surface plot but customize the perspective by changing the <code>theta</code> and <code>phi</code> angles. This gives the plot a different orientation, providing a unique view of the data.</p>
</section>
<section id="example-3-scaling-the-axes" class="level2">
<h2 class="anchored" data-anchor-id="example-3-scaling-the-axes">Example 3: Scaling the Axes</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create data for a surface plot</span></span>
<span id="cb4-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb4-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb4-4">z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(x, y, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a 3D surface plot with scaled axes</span></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">persp</span>(x, y, z, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-12/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here, we enable axis scaling with the <code>scale</code> parameter, which ensures that the x, y, and z axes are scaled to match the data range.</p>
</section>
<section id="example-4-multiple-plots" class="level2">
<h2 class="anchored" data-anchor-id="example-4-multiple-plots">Example 4: Multiple Plots</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create data</span></span>
<span id="cb5-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb5-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb5-4">z1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(x, y, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb5-5">z2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(x, y, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>((x<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (y<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb5-6">z3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(x, y, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x, y) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>((x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot data</span></span>
<span id="cb5-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">persp</span>(x, y, z1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shade =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticktype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"detailed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nticks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z1"</span>)</span>
<span id="cb5-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">persp</span>(x, y, z2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shade =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticktype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"detailed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nticks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z2"</span>)</span>
<span id="cb5-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">persp</span>(x, y, z3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">theta =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phi =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shade =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticktype =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"detailed"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nticks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Z3"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-12/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mfrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
</div>
<p>In this example, we create data for three different Gaussian distributions. We define the x- and y-axes and use the outer() function to calculate the z-values based on the normal distribution. We then use the persp() function to plot the data. We set the color to light blue, the border to NA, and the shading to 0.5. We also set the tick type to detailed and the number of ticks to 5. Finally, we label the x-, y-, and z-axes. We use the par() function to create multiple 3D plots in one figure.</p>
</section>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try It Yourself!</h1>
<p>Now that you’ve seen some examples of what the <code>persp()</code> function can do, it’s time to try it out on your own data or mathematical functions. Experiment with different perspectives, colors, and data sources to create captivating 3D plots that visualize your information in a whole new dimension.</p>
<p>Remember, the best way to learn is by doing. So, fire up R, load your data, and start exploring the third dimension with <code>persp()</code>. Happy plotting!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-12/index.html</guid>
  <pubDate>Tue, 12 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Plotting SVM Decision Boundaries with e1071 in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-11/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Support Vector Machines (SVM) are a powerful tool in the world of machine learning and classification. They excel in finding the optimal decision boundary between different classes of data. However, understanding and visualizing these decision boundaries can be a bit tricky. In this blog post, we’ll explore how to plot an SVM object using the <code>e1071</code> library in R, making it easier to grasp the magic happening under the hood.</p>
</section>
<section id="what-is-e1071" class="level1">
<h1>What is e1071?</h1>
<p><code>e1071</code> is an R package that provides tools for performing support vector machine (SVM) classification and regression. It’s widely used in the R community for its simplicity and efficiency. In this post, we’ll focus on SVM classification.</p>
</section>
<section id="setting-up" class="level1">
<h1>Setting Up</h1>
<p>Before we dive into plotting, you’ll need to install and load the <code>e1071</code> package if you haven’t already (I already have it so I won’t re-install it). You can do this using the following commands:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install e1071 (if not already installed)</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("e1071")</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the library</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(e1071)</span></code></pre></div>
</div>
</section>
<section id="creating-an-example-svm" class="level1">
<h1>Creating an Example SVM</h1>
<p>Let’s start with a simple example to illustrate how to plot the decision boundary of an SVM. We’ll use a toy dataset with two classes: red dots and blue squares. Our goal is to create an SVM that separates these two classes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a toy dataset</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb2-3">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x2 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Red"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blue"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>()</span>
<span id="cb2-7">)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train an SVM</span></span>
<span id="cb2-10">svm_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">svm</span>(label <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">kernel =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"linear"</span>)</span></code></pre></div>
</div>
<p>In this example, we generated 50 data points with two features (<code>x1</code> and <code>x2</code>) and two classes (<code>Red</code> and <code>Blue</code>). We then trained a linear SVM using the <code>svm</code> function from the <code>e1071</code> package.</p>
</section>
<section id="plotting-the-decision-boundary" class="level1">
<h1>Plotting the Decision Boundary</h1>
<p>Now comes the exciting part – plotting the decision boundary! We’ll use a combination of functions to achieve this. First, we’ll create a grid of points that cover the entire range of our data. Then, we’ll use the SVM model to predict the class labels for these points, effectively creating a decision boundary.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a grid of points for prediction</span></span>
<span id="cb3-2">x1_grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x1), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x1), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-3">x2_grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x2), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x2), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb3-4">grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x1 =</span> x1_grid, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x2 =</span> x2_grid)</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict class labels for the grid</span></span>
<span id="cb3-7">predicted_labels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(svm_model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> grid)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the decision boundary</span></span>
<span id="cb3-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x1, data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SVM Decision Boundary"</span>)</span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x1, grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(predicted_labels), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>)</span>
<span id="cb3-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-11/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this code, we first create a grid of points covering the range of our data using <code>expand.grid</code>. Then, we predict the class labels for these points using our trained SVM model and store them in <code>predicted_labels</code>. Finally, we plot the original data points with colors representing their true labels and overlay the decision boundary using the predicted labels.</p>
<section id="interpreting-the-plot" class="level2">
<h2 class="anchored" data-anchor-id="interpreting-the-plot">Interpreting the Plot</h2>
<p>The resulting plot will display your data points with red dots and blue squares, representing the true class labels. The decision boundary will be shown as a mix of red and blue points, indicating where the SVM has classified the data. The legend on the top-right helps you distinguish between the two classes.</p>
<p>We can also more simply plot out the model, see below:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(svm_model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-11/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Change the colors</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(svm_model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color.palette =</span> heat.colors)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-11/index_files/figure-html/unnamed-chunk-4-2.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="try-it-yourself" class="level2">
<h2 class="anchored" data-anchor-id="try-it-yourself">Try It Yourself!</h2>
<p>Now that you’ve seen how to plot an SVM decision boundary using the <code>e1071</code> package, I encourage you to try it with your own datasets and experiment with different kernels (e.g., radial or polynomial) to see how the decision boundary changes.</p>
<p>SVMs are a versatile tool for classification tasks, and visualizing their decision boundaries can provide valuable insights into your data and model. Happy plotting!</p>


</section>
</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-11/index.html</guid>
  <pubDate>Mon, 11 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating Population Pyramid Plots in R with ggplot2</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-08/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Are you interested in visualizing demographic data in a unique and insightful way? Population pyramids are a fantastic tool for this purpose! They allow you to compare the distribution of populations across age groups for different genders or time periods. In this blog post, we’ll explore how to create population pyramid plots in R using the powerful ggplot2 library. Don’t worry if you’re new to R or ggplot2; we’ll walk you through the process step by step.</p>
</section>
<section id="getting-started" class="level1">
<h1>Getting Started</h1>
<p>Before we dive into creating population pyramids, make sure you have R and ggplot2 installed. You can install ggplot2 by running the following command if you haven’t already:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>)</span></code></pre></div>
<p>Now that you’re set up let’s start by loading the necessary libraries and preparing our data.</p>
</section>
<section id="loading-libraries" class="level1">
<h1>Loading Libraries</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the required libraries</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span></code></pre></div>
</div>
</section>
<section id="preparing-data" class="level1">
<h1>Preparing Data</h1>
<p>For this example, we’ll use a hypothetical dataset that represents the population distribution by age and gender. You can replace this dataset with your own data, but for now, let’s create a sample dataset:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creating a sample dataset</span></span>
<span id="cb3-2">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb3-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Gender =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Female"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)),</span>
<span id="cb3-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Population =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">450</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">550</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">650</span>,</span>
<span id="cb3-6">                  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">190</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">240</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">290</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">330</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">380</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">430</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">480</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">530</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">580</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">630</span>)</span>
<span id="cb3-7">)</span></code></pre></div>
</div>
</section>
<section id="constructing-the-population-pyramid" class="level1">
<h1>Constructing the Population Pyramid</h1>
<p>Now that we have our data, let’s create the population pyramid plot step by step using ggplot2.</p>
<section id="step-1-create-a-basic-bar-chart" class="level2">
<h2 class="anchored" data-anchor-id="step-1-create-a-basic-bar-chart">Step 1: Create a Basic Bar Chart</h2>
<p>Start by creating a basic bar chart representing the population distribution for one gender. We’ll use the <code>geom_bar</code> function to do this.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a basic bar chart for one gender</span></span>
<span id="cb4-2">basic_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb4-3">    data, </span>
<span id="cb4-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(</span>
<span id="cb4-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> Age, </span>
<span id="cb4-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> Gender, </span>
<span id="cb4-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(</span>
<span id="cb4-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">test =</span> Gender <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Male"</span>, </span>
<span id="cb4-9">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yes =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Population, </span>
<span id="cb4-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">no =</span> Population</span>
<span id="cb4-11">            )</span>
<span id="cb4-12">        )</span>
<span id="cb4-13">    ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>) </span></code></pre></div>
</div>
<p>In this code:</p>
<ul>
<li>We filter the data to include only one gender (Male) using <code>subset</code>.</li>
<li>We use <code>aes</code> to specify the aesthetic mappings. We map <code>Age</code> to the x-axis, <code>-Population</code> to the y-axis (note the negative sign to flip the bars), and <code>Age</code> to the fill color.</li>
<li><code>geom_bar</code> is used to create the bar chart, and <code>stat = "identity"</code> ensures that the heights of the bars are determined by the <code>Population</code> variable.</li>
<li>Finally, <code>coord_flip()</code> is applied to flip the chart horizontally, making it look like a pyramid.</li>
</ul>
</section>
<section id="step-2-combine-both-genders" class="level2">
<h2 class="anchored" data-anchor-id="step-2-combine-both-genders">Step 2: Combine Both Genders</h2>
<p>To create a population pyramid, we need to combine both male and female data. We’ll create two separate plots for each gender and then combine them using the <code>+</code> operator.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create population pyramids for both genders and combine them</span></span>
<span id="cb5-2">population_pyramid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> basic_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> abs, </span>
<span id="cb5-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Population) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_flip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(</span>
<span id="cb5-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age"</span>, </span>
<span id="cb5-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population"</span>, </span>
<span id="cb5-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age"</span>, </span>
<span id="cb5-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population Pyramid"</span></span>
<span id="cb5-14">  )</span></code></pre></div>
</div>
<p>In this step:</p>
<ul>
<li>scale_y_continuous(labels = abs, limits = max(data$Population) * c(-1,1)):</li>
<li>This part adjusts the y-axis (vertical axis) of the plot.</li>
<li>labels = abs means that the labels on the y-axis will show the absolute values (positive numbers) rather than negative values.</li>
<li>limits = max(data$Population) * c(-1,1) sets the limits of the y-axis. It ensures that the y-axis extends from the maximum population value (positive) to the minimum (negative) value, creating a symmetrical pyramid shape.</li>
<li>coord_flip(): This function flips the coordinate system of the plot. By default, the x-axis (horizontal) represents age, and the y-axis (vertical) represents population. coord_flip() swaps them so that the x-axis represents population and the y-axis represents age, creating the pyramid effect.</li>
<li>theme_minimal(): This sets the overall visual theme of the plot to a minimalistic style. It adjusts the background, gridlines, and other visual elements to a simple and clean appearance.</li>
<li>labs(x = “Age”, y = “Population”, fill = “Age”, title = “Population Pyramid”): This part labels various elements of the plot:
<ul>
<li>x = “Age” labels the x-axis as “Age.”</li>
<li>y = “Population” labels the y-axis as “Population.”</li>
<li>fill = “Age” specifies that the “Age” variable will be used to fill the bars in the plot.</li>
<li>title = “Population Pyramid” sets the title of the plot as “Population Pyramid.”</li>
</ul></li>
</ul>
</section>
<section id="step-3-customize-your-plot" class="level2">
<h2 class="anchored" data-anchor-id="step-3-customize-your-plot">Step 3: Customize Your Plot</h2>
<p>Feel free to customize your plot further by adding labels, adjusting colors, or modifying other aesthetics to match your preferences. The <code>ggplot2</code> library provides extensive customization options.</p>
</section>
<section id="step-4-visualize-your-population-pyramid" class="level2">
<h2 class="anchored" data-anchor-id="step-4-visualize-your-population-pyramid">Step 4: Visualize Your Population Pyramid</h2>
<p>To visualize your population pyramid, simply print the <code>population_pyramid</code> object:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">population_pyramid</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-08/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This will display the population pyramid plot in your R graphics window.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Creating population pyramid plots in R using ggplot2 can be a powerful way to visualize demographic data. In this blog post, we walked through the process step by step, from loading libraries and preparing data to constructing and customizing the pyramid plot. Now it’s your turn to give it a try with your own data or explore additional features and customization options in ggplot2. Happy plotting!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-08/index.html</guid>
  <pubDate>Fri, 08 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Mastering Data Visualization in R: How to Plot a Subset of Data</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-07/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Data visualization is a powerful tool for gaining insights from your data. In R, you have a plethora of libraries and functions at your disposal to create stunning and informative plots. One common task is to plot a subset of your data, which allows you to focus on specific aspects or trends within your dataset. In this blog post, we’ll explore various techniques to plot subsets of data in R, and I’ll explain each step in simple terms. Don’t worry if you’re new to R – by the end of this post, you’ll be equipped to create customized plots with ease!</p>
<p><strong>Before we start, make sure you have R and RStudio installed on your computer. If not, you can download them from <a href="https://cran.r-project.org/mirrors.html">R’s official website</a> and <a href="https://www.rstudio.com/products/rstudio/download/">RStudio’s website</a>.</strong></p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<section id="example-1-plotting-a-subset-based-on-a-condition" class="level2">
<h2 class="anchored" data-anchor-id="example-1-plotting-a-subset-based-on-a-condition">Example 1: Plotting a Subset Based on a Condition</h2>
<p>Suppose you have a dataset of monthly sales, and you want to plot only the data points where sales exceeded $10,000. Here’s how you can do it:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load your data (replace 'your_data.csv' with your actual file)</span></span>
<span id="cb1-2">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_data.csv"</span>)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a subset based on the condition</span></span>
<span id="cb1-5">subset_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sales <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>, ]</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a scatter plot</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(subset_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Month, subset_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sales, </span>
<span id="cb1-9">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Monthly Sales &gt; $10,000"</span>, </span>
<span id="cb1-10">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Month"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sales"</span>)</span></code></pre></div>
<p>Explanation: - We load the data from a CSV file into the ‘data’ variable. - Next, we create a subset of the data using a condition (in this case, sales &gt; $10,000) and store it in ‘subset_data.’ - Finally, we create a scatter plot using the ‘plot’ function, specifying the x-axis (‘Month’) and y-axis (‘Sales’), and adding labels to the plot.</p>
</section>
<section id="example-2-plotting-a-random-subset" class="level2">
<h2 class="anchored" data-anchor-id="example-2-plotting-a-random-subset">Example 2: Plotting a Random Subset</h2>
<p>Sometimes you might want to plot a random subset of your data. Let’s say you have a large dataset of customer reviews, and you want to visualize a random sample of 100 reviews:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load your data (replace 'your_data.csv' with your actual file)</span></span>
<span id="cb2-2">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_data.csv"</span>)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a random subset</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For reproducibility</span></span>
<span id="cb2-6">sample_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>), ]</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a bar plot of review ratings</span></span>
<span id="cb2-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">barplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(sample_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Rating), </span>
<span id="cb2-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Random Sample of Customer Reviews"</span>,</span>
<span id="cb2-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rating"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>)</span></code></pre></div>
<p>Explanation: - We load the data as before. - Using the <code>sample</code> function, we select 100 random rows from the dataset while setting the seed for reproducibility. - Then, we create a bar plot to visualize the distribution of review ratings.</p>
</section>
<section id="example-3-plotting-data-by-category" class="level2">
<h2 class="anchored" data-anchor-id="example-3-plotting-data-by-category">Example 3: Plotting Data by Category</h2>
<p>Suppose you have a dataset containing information about various products and you want to plot the sales for each product category. Here’s how you can do it:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load your data (replace 'your_data.csv' with your actual file)</span></span>
<span id="cb3-2">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your_data.csv"</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a bar plot of sales by category</span></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">barplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tapply</span>(data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Sales, data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Category, sum),</span>
<span id="cb3-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sales by Product Category"</span>,</span>
<span id="cb3-7">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Category"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total Sales"</span>)</span></code></pre></div>
<p>Explanation: - We load the data. - Using the <code>tapply</code> function, we group the data by ‘Category’ and calculate the sum of ‘Sales’ for each category. - Finally, we create a bar plot to visualize the total sales for each product category.</p>
<p>Now for some worked out examples.</p>
</section>
<section id="example-4-using-subset-function" class="level2">
<h2 class="anchored" data-anchor-id="example-4-using-subset-function">Example 4: Using subset() function</h2>
<p>In this method, first, a subset of the data is created based on some condition, and then it is plotted using the plot function. Let us first create the subset of the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">data_subset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(USArrests, UrbanPop <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>)</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_subset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Murder, data_subset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Assault)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-07/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In the above code, we have created a subset of the USArrests dataset where UrbanPop is greater than 70. Then we have plotted the Murder and Assault columns of the subset using the plot function.</p>
</section>
<section id="example-5-using-operator" class="level2">
<h2 class="anchored" data-anchor-id="example-5-using-operator">Example 5: Using [ ] operator</h2>
<p>Using the ‘[ ]’ operator, elements of vectors and observations from data frames can be accessed and subsetted based on some condition.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(USArrests<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Murder[USArrests<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>UrbanPop <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>], USArrests<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Assault[USArrests<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>UrbanPop <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-07/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In the above code, we have used the [ ] operator to subset the USArrests dataset where UrbanPop is greater than 70. Then we have plotted the Murder and Assault columns of the subset using the plot function.</p>
</section>
<section id="example-6-using-attributes-for-rows-and-columns" class="level2">
<h2 class="anchored" data-anchor-id="example-6-using-attributes-for-rows-and-columns">Example 6: Using attributes for rows and columns</h2>
<p>In this method, we pass the row and column attributes to the plot function to plot a subset of the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(USArrests[USArrests<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>UrbanPop <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Murder"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Assault"</span>)])</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-07/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In the above code, we have used the row and column attributes to subset the USArrests dataset where UrbanPop is greater than 70. Then we have plotted the Murder and Assault columns of the subset using the plot function.</p>
</section>
<section id="example-7-using-dplyr-package" class="level2">
<h2 class="anchored" data-anchor-id="example-7-using-dplyr-package">Example 7: Using dplyr package</h2>
<p>The dplyr package provides a simple and efficient way to subset data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'dplyr'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:stats':

    filter, lag</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">data_subset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> USArrests <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(UrbanPop <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>)</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(data_subset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Murder, data_subset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Assault)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-07/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In the above code, we have used the filter function from the dplyr package to subset the USArrests dataset where UrbanPop is greater than 70. Then we have plotted the Murder and Assault columns of the subset using the plot function.</p>
<p>In conclusion, there are several ways to plot a subset of data in R. We have explored four methods in this blog post. I encourage readers to try these methods on their own and explore other ways to subset and plot data in R.</p>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In this blog post, we’ve explored different techniques for plotting subsets of data in R. Whether you want to filter data based on conditions, create random samples, or visualize data by categories, R provides you with the tools to do so. Don’t be afraid to experiment and tailor these examples to your own datasets. The more you practice, the more proficient you’ll become in data visualization with R. Happy coding!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-07/index.html</guid>
  <pubDate>Thu, 07 Sep 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Exploring Multivariate Data with Principal Component Analysis (PCA) Biplot in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/2023-09-06/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>When it comes to analyzing multivariate data, Principal Component Analysis (PCA) is a powerful technique that can help us uncover hidden patterns, reduce dimensionality, and gain valuable insights. One of the most informative ways to visualize the results of a PCA is by creating a biplot, and in this blog post, we’ll dive into how to do this using the <code>biplot()</code> function in R. To make it more practical, we’ll use the <code>USArrests</code> dataset to demonstrate the process step by step.</p>
</section>
<section id="what-is-a-biplot" class="level1">
<h1>What is a Biplot?</h1>
<p>Before we get into the details, let’s briefly discuss what a biplot is. A biplot is a graphical representation of a PCA that combines both the scores and loadings into a single plot. The scores represent the data points projected onto the principal components, while the loadings indicate the contribution of each original variable to the principal components. By plotting both, we can see how variables and data points relate to each other in a single chart, making it easier to interpret and analyze the PCA results.</p>
</section>
<section id="getting-started" class="level1">
<h1>Getting Started</h1>
<p>First, if you haven’t already, load the necessary R packages. You’ll need the <code>stats</code> package for PCA and the biplot visualization.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load required packages</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stats)</span></code></pre></div>
</div>
</section>
<section id="performing-pca" class="level1">
<h1>Performing PCA</h1>
<p>Next, let’s perform PCA on the <code>USArrests</code> dataset using the <code>prcomp()</code> function, which is an R function for PCA. We’ll store the PCA results in a variable called <code>pca_result</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform PCA</span></span>
<span id="cb2-2">pca_result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prcomp</span>(USArrests, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>In the code above, we’ve scaled the data (<code>scale = TRUE</code>) to ensure that variables with different scales don’t dominate the PCA.</p>
</section>
<section id="creating-the-biplot" class="level1">
<h1>Creating the Biplot</h1>
<p>Now comes the exciting part—creating the biplot! We’ll use the <code>biplot()</code> function to achieve this.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a biplot</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">biplot</span>(pca_result)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/2023-09-06/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>When you run the <code>biplot()</code> function with your PCA results, R will generate a biplot that combines both the scores and loadings. You’ll see arrows representing the original variables’ contributions to each principal component, and you’ll also see how the data points project onto the components.</p>
</section>
<section id="interpreting-the-biplot" class="level1">
<h1>Interpreting the Biplot</h1>
<p>Let’s break down what you’ll see in the biplot:</p>
<ol type="1">
<li><p><strong>Data Points</strong>: Each point represents a US state in our case, and its position in the biplot indicates how it relates to the principal components.</p></li>
<li><p><strong>Arrows</strong>: The arrows represent the original variables (in this case, the crime statistics) and show how they contribute to the principal components. Longer arrows indicate stronger contributions.</p></li>
<li><p><strong>Principal Components</strong>: The biplot will typically show the first two principal components. These components capture the most variation in the data.</p></li>
</ol>
</section>
<section id="what-insights-can-you-gain" class="level1">
<h1>What Insights Can You Gain?</h1>
<p>By examining the biplot, you can draw several conclusions:</p>
<ul>
<li>Clustering: States close to each other on the plot share similar crime profiles.</li>
<li>Variable Relationships: Variables close to each other on the plot are positively correlated, while those far apart are negatively correlated.</li>
<li>Outliers: States far from the center may be outliers in terms of their crime statistics.</li>
</ul>
</section>
<section id="try-it-yourself" class="level1">
<h1>Try It Yourself!</h1>
<p>Now that you’ve seen how to create a biplot for PCA using the <code>USArrests</code> dataset, I encourage you to try it with your own data. PCA and biplots are powerful tools for dimensionality reduction and data exploration. They can help you uncover patterns, relationships, and outliers in your data, making it easier to make informed decisions in various fields, from biology to finance.</p>
<p>In this tutorial, we’ve barely scratched the surface of what you can do with PCA and biplots. Dive deeper, explore different datasets, and use this knowledge to gain valuable insights into your own multivariate data. Happy analyzing!</p>


</section>

 ]]></description>
  <category>rtip</category>
  <category>viz</category>
  <guid>https://www.spsanderson.com/steveondata/posts/2023-09-06/index.html</guid>
  <pubDate>Wed, 06 Sep 2023 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
