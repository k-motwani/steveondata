<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Steve&#39;s Data Tips and Tricks</title>
<link>https://www.spsanderson.com/steveondata/index.html</link>
<atom:link href="https://www.spsanderson.com/steveondata/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Thu, 16 Feb 2023 05:00:00 GMT</lastBuildDate>
<item>
  <title>Officially on CRAN {tidyAML}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-16/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>I’m excited to announce that the R package {tidyAML} is now officially available on CRAN! This package is designed to make it easy for users to perform automated machine learning (AutoML) using the tidymodels ecosystem. With a simple and intuitive interface, tidyAML allows users to quickly generate high-quality machine learning models without worrying about the underlying details.</p>
<p>One of the key features of tidyAML is its ability to generate regression models on the fly, without the need to build a full specification or tune hyper-parameters. This makes it ideal for users who want to quickly build a machine learning model without spending a lot of time on the setup process.</p>
<p>tidyAML is also designed to be easy to use, with a set of functions that are straightforward and can generate many models and predictions at once. And because it’s built on top of the tidymodels ecosystem, users don’t need to worry about setting up additional packages or dependencies.</p>
<p>We’re also happy to announce that tidyAML will be added to the R package {healthyverse} and pushed to CRAN this week. This means that users who install {healthyverse} will automatically get access to tidyAML, as well as other popular packages like ggplot2, dplyr, and tidyr.</p>
<p>Whether you’re a beginner or an experienced machine learning practitioner, tidyAML is a powerful tool that can help you quickly generate high-quality models with minimal setup. We hope you’ll give it a try and let us know what you think!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-16/index.html</guid>
  <pubDate>Thu, 16 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Moving Average Plots with {healthyR.ts}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-15/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Are you interested in visualizing time series data in a clear and concise way? The R package <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> provides a variety of tools for time series analysis and visualization, including the <strong>ts_ma_plot()</strong> function.</p>
<p>The <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_ma_plot.html"><code>ts_ma_plot()</code></a> function is designed to help you quickly and easily create moving average plots for time series data. This function takes several arguments, including the data you want to visualize, the date column from your data, the value column from your data, and the frequency of the aggregation.</p>
<p>One of the great features of ts_ma_plot() is that it can handle both weekly and monthly data frequencies, making it a flexible tool for analyzing a variety of time series data. If you pass in a frequency other than “weekly” or “monthly”, the function will default to weekly, so it’s important to ensure that your data is aggregated at the appropriate frequency.</p>
<p>With ts_ma_plot(), you can create a variety of plots to help you better understand your time series data. The function allows you to add up to three different titles to your plot, helping you to organize and communicate your findings effectively. The main_title argument sets the title for the main plot, while the secondary_title and tertiary_title arguments set the titles for the second and third plots, respectively.</p>
<p>If you’re interested in using ts_ma_plot() for your own time series data, you’ll first need to preprocess your data so that it’s in the appropriate format for this function. Once you’ve done that, though, ts_ma_plot() can help you to quickly identify trends and patterns in your data that might not be immediately apparent from a raw data set.</p>
<p>In summary, ts_ma_plot() is a powerful and flexible tool for visualizing time series data. Whether you’re working with weekly or monthly data, this function can help you to quickly and easily create moving average plots that can help you to better understand your data. If you’re interested in time series analysis, be sure to check out {healthyR.ts} and give ts_ma_plot() a try!</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_ma_plot</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .date_col,</span>
<span id="cb1-4">  .value_col,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.ts_frequency =</span> <span class="st" style="color: #20794D;">"monthly"</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.main_title =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.secondary_title =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.tertiary_title =</span> <span class="cn" style="color: #8f5902;">NULL</span></span>
<span id="cb1-9">)</span></code></pre></div>
</div>
<p>Now for the arguments to the parameters.</p>
<ul>
<li><code>.data</code>: the data you want to visualize, which should be pre-processed and the aggregation should match the .frequency argument.</li>
<li><code>.date_col</code>: the data column from the .data argument that contains the dates for your time series.</li>
<li><code>.value_col</code>: the data column from the .data argument that contains the values for your time series.</li>
<li><code>.ts_frequency</code>: the frequency of the aggregation, which should be quoted as “weekly” or “monthly”. If not specified, the function defaults to weekly.</li>
<li><code>.main_title</code>: the title of the main plot.</li>
<li><code>.secondary_title</code>: the title of the second plot.</li>
<li><code>.tertiary_title</code>: the title of the third plot.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Now for an example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"></span>
<span id="cb2-4">data_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts_to_tbl</span>(AirPassengers) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>index)</span>
<span id="cb2-6"></span>
<span id="cb2-7">output <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts_ma_plot</span>(</span>
<span id="cb2-8">  <span class="at" style="color: #657422;">.data =</span> data_tbl,</span>
<span id="cb2-9">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;">.value_col =</span> value</span>
<span id="cb2-11">)</span></code></pre></div>
</div>
<p>Let’s take a look at each piece of the output.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">output<span class="sc" style="color: #5E5E5E;">$</span>data_trans_xts <span class="sc" style="color: #5E5E5E;">|&gt;</span> <span class="fu" style="color: #4758AB;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           value ma12
1949-01-01   112   NA
1949-02-01   118   NA
1949-03-01   132   NA
1949-04-01   129   NA
1949-05-01   121   NA
1949-06-01   135   NA</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">output<span class="sc" style="color: #5E5E5E;">$</span>data_diff_xts_a <span class="sc" style="color: #5E5E5E;">|&gt;</span> <span class="fu" style="color: #4758AB;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              diff_a
1949-01-01        NA
1949-02-01  5.357143
1949-03-01 11.864407
1949-04-01 -2.272727
1949-05-01 -6.201550
1949-06-01 11.570248</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">output<span class="sc" style="color: #5E5E5E;">$</span>data_diff_xts_b <span class="sc" style="color: #5E5E5E;">|&gt;</span> <span class="fu" style="color: #4758AB;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           diff_b
1949-01-01     NA
1949-02-01     NA
1949-03-01     NA
1949-04-01     NA
1949-05-01     NA
1949-06-01     NA</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">output<span class="sc" style="color: #5E5E5E;">$</span>data_summary_tbl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 144 × 5
   date_col   value  ma12 diff_a diff_b
   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;
 1 1949-01-01   112    NA   0         0
 2 1949-02-01   118    NA   5.36      0
 3 1949-03-01   132    NA  11.9       0
 4 1949-04-01   129    NA  -2.27      0
 5 1949-05-01   121    NA  -6.20      0
 6 1949-06-01   135    NA  11.6       0
 7 1949-07-01   148    NA   9.63      0
 8 1949-08-01   148    NA   0         0
 9 1949-09-01   136    NA  -8.11      0
10 1949-10-01   119    NA -12.5       0
# … with 134 more rows</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">output<span class="sc" style="color: #5E5E5E;">$</span>pgrid</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-15/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">output<span class="sc" style="color: #5E5E5E;">$</span>xts_plt</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-15/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <category>healthyrts</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-15/index.html</guid>
  <pubDate>Wed, 15 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>An example of using {box}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-14/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Today I am going to make a short post on the R package <a href="https://klmr.me/box/"><code>{box}</code></a> which was showcased to me quite nicely by <a href="https://www.linkedin.com/in/milesmichaeld/"><strong>Michael Miles</strong></a>. It was informative and I was able to immediately see the usefulness of the <code>{box}</code> library.</p>
<p>So what is ‘box’? Well here is the description straight from their site:</p>
<blockquote class="blockquote">
<p>‘box’ allows organising R code in a more modular way, via two mechanisms:</p>
<ul>
<li>It enables writing modular code by treating files and folders of R code as independent (potentially nested) modules, without requiring the user to wrap reusable code into packages.</li>
<li>It provides a new syntax to import reusable code (both from packages and from modules) which is more powerful and less error-prone than library or require, by limiting the number of names that are made available.</li>
</ul>
</blockquote>
<p>So let’s see how it all works.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>The main portion of the script looks like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># Main script</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># Script setup --------------------------------------</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;"># Load box modules</span></span>
<span id="cb1-6">box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(. <span class="sc" style="color: #5E5E5E;">/</span> box <span class="sc" style="color: #5E5E5E;">/</span> global_options <span class="sc" style="color: #5E5E5E;">/</span> global_options)</span>
<span id="cb1-7">box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(. <span class="sc" style="color: #5E5E5E;">/</span> box <span class="sc" style="color: #5E5E5E;">/</span> io <span class="sc" style="color: #5E5E5E;">/</span> imports)</span>
<span id="cb1-8">box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(. <span class="sc" style="color: #5E5E5E;">/</span> box <span class="sc" style="color: #5E5E5E;">/</span> io <span class="sc" style="color: #5E5E5E;">/</span> exports)</span>
<span id="cb1-9">box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(. <span class="sc" style="color: #5E5E5E;">/</span> box <span class="sc" style="color: #5E5E5E;">/</span> mod <span class="sc" style="color: #5E5E5E;">/</span> mod)</span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;"># Load global options</span></span>
<span id="cb1-12">global_options<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">set_global_options</span>() </span>
<span id="cb1-13"></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;"># Main script ---------------------------------------</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;"># Load data, process it, and export results</span></span>
<span id="cb1-18">all_data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">getOption</span>(<span class="st" style="color: #20794D;">'data_dir'</span>) <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb1-19">  </span>
<span id="cb1-20">  <span class="co" style="color: #5E5E5E;"># Load all data</span></span>
<span id="cb1-21">  imports<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">load_all</span>() <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb1-22">  </span>
<span id="cb1-23">  <span class="co" style="color: #5E5E5E;"># Modify dataset</span></span>
<span id="cb1-24">  mod<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">modify_data</span>() <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb1-25">  </span>
<span id="cb1-26">  <span class="co" style="color: #5E5E5E;"># Export data</span></span>
<span id="cb1-27">  exports<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">export_data</span>()</span></code></pre></div>
</div>
<p>So what does this do? Well it is grabbing data from a predefined location, modifying it and then re-exporting it. Now let’s look at all the code that is behind it, which allows us to do these things and then you will see the power of using <strong>box</strong></p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s take a look at the global options settings.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># Set global options</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;">#' @export</span></span>
<span id="cb2-3">set_global_options <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>() {</span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;">options</span>(</span>
<span id="cb2-5">    <span class="at" style="color: #657422;">look_ups =</span> <span class="st" style="color: #20794D;">'look-ups/'</span>,</span>
<span id="cb2-6">    <span class="at" style="color: #657422;">data_dir =</span> <span class="st" style="color: #20794D;">'data/input/'</span></span>
<span id="cb2-7">  )</span>
<span id="cb2-8">}</span></code></pre></div>
</div>
<p>Ok 6 lines, boxed down to one.</p>
<p>Now the import function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># Function for importing data</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;">#' @export</span></span>
<span id="cb3-4">load_all <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(file_path) {</span>
<span id="cb3-5">  </span>
<span id="cb3-6">  box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(purrr)</span>
<span id="cb3-7">  box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(vroom)</span>
<span id="cb3-8">  </span>
<span id="cb3-9">  file_path <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb3-10">    </span>
<span id="cb3-11">    <span class="co" style="color: #5E5E5E;"># Get all csv files from folder</span></span>
<span id="cb3-12">    <span class="fu" style="color: #4758AB;">list.files</span>(<span class="at" style="color: #657422;">full.names =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb3-13">    </span>
<span id="cb3-14">    <span class="co" style="color: #5E5E5E;"># Set list names</span></span>
<span id="cb3-15">    purrr<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">set_names</span>(\(file) <span class="fu" style="color: #4758AB;">basename</span>(file)) <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb3-16">    </span>
<span id="cb3-17">    <span class="co" style="color: #5E5E5E;"># Load all csvs into list</span></span>
<span id="cb3-18">    purrr<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">map</span>(\(file) vroom<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">vroom</span>(file))</span>
<span id="cb3-19"></span>
<span id="cb3-20">}</span></code></pre></div>
</div>
<p>Now the <code>modify_data</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># Function for modifying data</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;">#' @export</span></span>
<span id="cb4-4">modify_data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(df_list) {</span>
<span id="cb4-5">  </span>
<span id="cb4-6">  box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(dplyr)</span>
<span id="cb4-7">  box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(purrr)</span>
<span id="cb4-8">  </span>
<span id="cb4-9">  map_fun <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(df) {</span>
<span id="cb4-10">    </span>
<span id="cb4-11">    df <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb4-12">      dplyr<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">select</span>(name<span class="sc" style="color: #5E5E5E;">:</span>mass) <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb4-13">      dplyr<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">lol =</span> height <span class="sc" style="color: #5E5E5E;">*</span> mass) <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb4-14">      dplyr<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">filter</span>(lol <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">1500</span>)</span>
<span id="cb4-15">  }</span>
<span id="cb4-16">  </span>
<span id="cb4-17">  <span class="co" style="color: #5E5E5E;"># Apply mapping function to list</span></span>
<span id="cb4-18">  purrr<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">map</span>(df_list, map_fun)</span>
<span id="cb4-19">  </span>
<span id="cb4-20">}</span></code></pre></div>
</div>
<p>Ok again, a big savings here, instead of the above we simply call <code>mod$modify_data()</code> which makes things clearner and also modular in that we can go to a very specific spot in our proejct to fix an error or add/subtract functionality.</p>
<p>Lastly the export.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># Function for exporting data</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;">#' @export</span></span>
<span id="cb5-4">export_data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(df_list) {</span>
<span id="cb5-5">  </span>
<span id="cb5-6">  box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(vroom)</span>
<span id="cb5-7">  box<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">use</span>(purrr)</span>
<span id="cb5-8">  </span>
<span id="cb5-9">  <span class="co" style="color: #5E5E5E;"># Export data</span></span>
<span id="cb5-10">  purrr<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">map2</span>(<span class="at" style="color: #657422;">.x =</span> df_list,</span>
<span id="cb5-11">             <span class="at" style="color: #657422;">.y =</span> <span class="fu" style="color: #4758AB;">names</span>(df_list),</span>
<span id="cb5-12">             <span class="sc" style="color: #5E5E5E;">~</span>vroom<span class="sc" style="color: #5E5E5E;">$</span><span class="fu" style="color: #4758AB;">vroom_write</span>(<span class="at" style="color: #657422;">x =</span> .x,</span>
<span id="cb5-13">                               <span class="at" style="color: #657422;">file =</span> <span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">'data/output/'</span>, </span>
<span id="cb5-14">                                             .y),</span>
<span id="cb5-15">                               <span class="at" style="color: #657422;">delim =</span> <span class="st" style="color: #20794D;">','</span>))</span>
<span id="cb5-16">  </span>
<span id="cb5-17">}</span></code></pre></div>
</div>
<p>Voila! I think to even a fresh user, the power of boxing your functions is fairly apparent and to the advanced user, eyes are most likely glowing!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>box</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-14/index.html</guid>
  <pubDate>Tue, 14 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Off to CRAN! {tidyAML}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-13/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Are you tired of spending hours tuning and testing different machine learning models for your regression or classification problems? The new R package <a href="https://www.spsanderson.com/tidyAML/"><code>{tidyAML}</code></a> is here to simplify the process for you! tidyAML is a simple interface for automatic machine learning that fits the tidymodels framework, making it easier for you to solve regression and classification problems.</p>
<p>The tidyAML package has been designed with the goal of providing a simple API that automates the entire machine learning pipeline, from data preparation to model selection, training, and prediction. This means that you no longer have to spend hours tuning and testing different models; tidyAML will do it all for you, saving you time and effort.</p>
<p>In this initial release (version 0.0.1), tidyAML introduces a number of new features and minor fixes to improve the overall user experience. Here are some of the updates in this release:</p>
<p>New Features:</p>
<ul>
<li><code>make_regression_base_tbl()</code> and <code>make_classification_base_tbl()</code> functions for creating base tables for regression and classification problems, respectively.</li>
<li><code>internal_make_spec_tbl()</code> function for making the specification table for the machine learning pipeline.</li>
<li><code>internal_set_args_to_tune()</code> function for setting arguments to tune the models. This has not yet been implemented in a true working fashion but might be useful for feedback in this initial release.</li>
<li><code>create_workflow_set()</code> function for creating a set of workflows to test different models.</li>
<li><code>get_model()</code>, <code>extract_model_spec()</code>, <code>extract_wflw()</code>, <code>extract_wflw_fit()</code>, and <code>extract_wflw_pred()</code> functions for extracting different parts of the machine learning pipeline.</li>
<li><code>match_args()</code> function for matching arguments between the base and specification tables.</li>
</ul>
<p>Minor Fixes and Improvements:</p>
<ul>
<li>Updates to <code>fast_classification_parsnip_spec_tbl()</code> and <code>fast_regression_parsnip_spec_tbl()</code> to use the <code>make_regression</code> and <code>make_classification</code> functions and the <code>internal_make_spec_tbl()</code> function.</li>
<li>Addition of a class for the base table functions and using that class in <code>internal_make_spec_tbl()</code>.</li>
<li>Update to the DESCRIPTION for R &gt;= 3.4.0.</li>
</ul>
<p>In conclusion, tidyAML is a game-changer for those looking to automate the machine learning pipeline. It provides a simple API that eliminates the need for manual tuning and testing of different models. With the updates in this initial release, the tidyAML package is sure to make your machine learning journey easier and more efficient.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>There are too many functions to go over in this post so <a href="https://www.spsanderson.com/tidyAML/reference/index.html">you can find them all here</a></p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Even though there are many functions to go over, we can showcase some with a small useful example. So let’s get at it!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyAML)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(recipes)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb1-4"></span>
<span id="cb1-5">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> mtcars)</span>
<span id="cb1-6"></span>
<span id="cb1-7">frt_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">fast_regression</span>(</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.data =</span> mtcars, </span>
<span id="cb1-9">  <span class="at" style="color: #657422;">.rec_obj =</span> rec_obj, </span>
<span id="cb1-10">  <span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"lm"</span>,<span class="st" style="color: #20794D;">"glm"</span>),</span>
<span id="cb1-11">  <span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="st" style="color: #20794D;">"linear_reg"</span></span>
<span id="cb1-12">  )</span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;">glimpse</span>(frt_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 2
Columns: 8
$ .model_id       &lt;int&gt; 1, 2
$ .parsnip_engine &lt;chr&gt; "lm", "glm"
$ .parsnip_mode   &lt;chr&gt; "regression", "regression"
$ .parsnip_fns    &lt;chr&gt; "linear_reg", "linear_reg"
$ model_spec      &lt;list&gt; [~NULL, ~NULL, NULL, regression, TRUE, NULL, lm, TRUE]…
$ wflw            &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ fitted_wflw     &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ pred_wflw       &lt;list&gt; [&lt;tbl_df[24 x 1]&gt;], [&lt;tbl_df[24 x 1]&gt;]</code></pre>
</div>
</div>
<p>Now let’s go through the extractors.</p>
<p>The <code>get_model()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">get_model</span>(frt_tbl, <span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 1
Columns: 8
$ .model_id       &lt;int&gt; 2
$ .parsnip_engine &lt;chr&gt; "glm"
$ .parsnip_mode   &lt;chr&gt; "regression"
$ .parsnip_fns    &lt;chr&gt; "linear_reg"
$ model_spec      &lt;list&gt; [~NULL, ~NULL, NULL, regression, TRUE, NULL, glm, TRUE…
$ wflw            &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ fitted_wflw     &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ pred_wflw       &lt;list&gt; [&lt;tbl_df[24 x 1]&gt;]</code></pre>
</div>
</div>
<p>The <code>extract_model_spec()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">extract_model_spec</span>(frt_tbl, <span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
Linear Regression Model Specification (regression)

Computational engine: lm </code></pre>
</div>
</div>
<p>Or do multiples:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">extract_model_spec</span>(frt_tbl, <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
Linear Regression Model Specification (regression)

Computational engine: lm 


[[2]]
Linear Regression Model Specification (regression)

Computational engine: glm </code></pre>
</div>
</div>
<p>The <code>extract_wflw()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">extract_wflw</span>(frt_tbl, <span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: lm </code></pre>
</div>
</div>
<p>Or do multiples:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">extract_wflw</span>(frt_tbl, <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: lm 


[[2]]
══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: glm </code></pre>
</div>
</div>
<p>The <code>extract_wflw_fit()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">extract_wflw_fit</span>(frt_tbl, <span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────

Call:
stats::lm(formula = ..y ~ ., data = data)

Coefficients:
(Intercept)          cyl         disp           hp         drat           wt  
   28.21291     -1.60712      0.03458     -0.02189      0.56925     -5.69276  
       qsec           vs           am         gear         carb  
    0.69956      0.39398      1.50212     -0.35338      0.48289  </code></pre>
</div>
</div>
<p>Or do multiples:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">extract_wflw_fit</span>(frt_tbl, <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────

Call:
stats::lm(formula = ..y ~ ., data = data)

Coefficients:
(Intercept)          cyl         disp           hp         drat           wt  
   28.21291     -1.60712      0.03458     -0.02189      0.56925     -5.69276  
       qsec           vs           am         gear         carb  
    0.69956      0.39398      1.50212     -0.35338      0.48289  


[[2]]
══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────

Call:  stats::glm(formula = ..y ~ ., family = stats::gaussian, data = data)

Coefficients:
(Intercept)          cyl         disp           hp         drat           wt  
   28.21291     -1.60712      0.03458     -0.02189      0.56925     -5.69276  
       qsec           vs           am         gear         carb  
    0.69956      0.39398      1.50212     -0.35338      0.48289  

Degrees of Freedom: 23 Total (i.e. Null);  13 Residual
Null Deviance:      935.1 
Residual Deviance: 121.5    AIC: 131</code></pre>
</div>
</div>
<p>Finally the <code>extract_wflw_pred()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;">extract_wflw_pred</span>(frt_tbl, <span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
# A tibble: 24 × 1
   .pred
   &lt;dbl&gt;
 1  24.8
 2  26.5
 3  18.5
 4  13.9
 5  24.6
 6  29.1
 7  14.0
 8  17.9
 9  10.0
10  23.4
# … with 14 more rows</code></pre>
</div>
</div>
<p>Or do multiples:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;">extract_wflw_pred</span>(frt_tbl, <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
# A tibble: 24 × 1
   .pred
   &lt;dbl&gt;
 1  24.8
 2  26.5
 3  18.5
 4  13.9
 5  24.6
 6  29.1
 7  14.0
 8  17.9
 9  10.0
10  23.4
# … with 14 more rows

[[2]]
# A tibble: 24 × 1
   .pred
   &lt;dbl&gt;
 1  24.8
 2  26.5
 3  18.5
 4  13.9
 5  24.6
 6  29.1
 7  14.0
 8  17.9
 9  10.0
10  23.4
# … with 14 more rows</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <category>tidymodels</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-13/index.html</guid>
  <pubDate>Mon, 13 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Get the Current Hospital Data Set from CMS with {healthyR.data}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrdata-2023-02-10/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Getting data for health care in the US can sometimes be hard. With my R package <a href="https://www.spsanderson.com/healthyR.data/"><code>{healthyR.data}</code></a> I am hoping to alleviate some of that pain.</p>
<p>Right now the package is bring actively developed from what was a simple yet sleepy simulated administrative data set is getting supercharged into a a full blow package that will retrieve data from outside sources. One such source is <a href="https://data.cms.gov/">CMS</a>.</p>
<p>At the start, and this is going to be a long road, I have started to build some functionality around getting the current hospital data from <strong>CMS</strong>. Let’s take a look at how it works.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the function which has no parameters. This function will download the current and the official hospital data sets from the CMS.gov website.</p>
<p>The function makes use of a temporary directory and file to save and unzip the data. This will grab the current Hospital Data Files, unzip them and return a list of tibbles with each tibble named after the data file.</p>
<p>The function returns a list object with all of the current hospital data as a tibble. It does not save the data anywhere so if you want to save it you will have to do that manually.</p>
<p>This also means that you would have to store the data as a variable in order to access the data later on. It does have a given attributes and a class so that it can be piped into other functions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">current_hosp_data</span>()</span></code></pre></div>
</div>
<p>Now let’s see it in action.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>We will download the current hospital data sets and take a look.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.data)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"></span>
<span id="cb2-4">current_hospital_dataset <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">current_hosp_data</span>()</span></code></pre></div>
</div>
<p>This function downloads 70 files. Let’s see which ones have been downloaded.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">names</span>(current_hospital_dataset)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] "ASC_Facility.csv"                                                
 [2] "ASC_National.csv"                                                
 [3] "ASC_State.csv"                                                   
 [4] "ASCQR_OAS_CAHPS_BY_ASC.csv"                                      
 [5] "ASCQR_OAS_CAHPS_NATIONAL.csv"                                    
 [6] "ASCQR_OAS_CAHPS_STATE.csv"                                       
 [7] "CJR_PY6_Quality_Reporting_July_2022_Production_File.csv"         
 [8] "CMS_PSI_6_decimal_file.csv"                                      
 [9] "Complications_and_Deaths_Hospital.csv"                           
[10] "Complications_and_Deaths_National.csv"                           
[11] "Complications_and_Deaths_State.csv"                              
[12] "Data_Updates_January_2023.csv"                                   
[13] "Footnote_Crosswalk.csv"                                          
[14] "FY_2023_HAC_Reduction_Program_Hospital.csv"                      
[15] "FY_2023_Hospital_Readmissions_Reduction_Program_Hospital.csv"    
[16] "FY2021_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt.csv"
[17] "FY2021_Net_Change_in_Base_Op_DRG_Payment_Amt.csv"                
[18] "FY2021_Percent_Change_in_Medicare_Payments.csv"                  
[19] "FY2021_Value_Based_Incentive_Payment_Amount.csv"                 
[20] "HCAHPS_Hospital.csv"                                             
[21] "HCAHPS_National.csv"                                             
[22] "HCAHPS_State.csv"                                                
[23] "Healthcare_Associated_Infections_Hospital.csv"                   
[24] "Healthcare_Associated_Infections_National.csv"                   
[25] "Healthcare_Associated_Infections_State.csv"                      
[26] "Hospital_General_Information.csv"                                
[27] "HOSPITAL_QUARTERLY_MSPB_6_DECIMALS.csv"                          
[28] "hvbp_clinical_outcomes.csv"                                      
[29] "hvbp_efficiency_and_cost_reduction.csv"                          
[30] "hvbp_person_and_community_engagement.csv"                        
[31] "hvbp_safety.csv"                                                 
[32] "hvbp_tps.csv"                                                    
[33] "IPFQR_QualityMeasures_Facility.csv"                              
[34] "IPFQR_QualityMeasures_National.csv"                              
[35] "IPFQR_QualityMeasures_State.csv"                                 
[36] "Maternal_Health_Hospital.csv"                                    
[37] "Maternal_Health_National.csv"                                    
[38] "Maternal_Health_State.csv"                                       
[39] "Measure_Dates.csv"                                               
[40] "Medicare_Hospital_Spending_by_Claim.csv"                         
[41] "Medicare_Hospital_Spending_Per_Patient_Hospital.csv"             
[42] "Medicare_Hospital_Spending_Per_Patient_National.csv"             
[43] "Medicare_Hospital_Spending_Per_Patient_State.csv"                
[44] "OAS_CAHPS_Footnotes.csv"                                         
[45] "OQR_OAS_CAHPS_BY_HOSPITAL.csv"                                   
[46] "OQR_OAS_CAHPS_NATIONAL.csv"                                      
[47] "OQR_OAS_CAHPS_STATE.csv"                                         
[48] "Outpatient_Imaging_Efficiency_Hospital.csv"                      
[49] "Outpatient_Imaging_Efficiency_National.csv"                      
[50] "Outpatient_Imaging_Efficiency_State.csv"                         
[51] "Payment_National.csv"                                            
[52] "Payment_State.csv"                                               
[53] "Payment_and_Value_of_Care_Hospital.csv"                          
[54] "PCH_HCAHPS_HOSPITAL.csv"                                         
[55] "PCH_HCAHPS_NATIONAL.csv"                                         
[56] "PCH_HCAHPS_STATE.csv"                                            
[57] "PCH_HEALTHCARE_ASSOCIATED_INFECTIONS_HOSPITAL.csv"               
[58] "PCH_ONCOLOGY_CARE_MEASURES_HOSPITAL.csv"                         
[59] "PCH_OUTCOMES_HOSPITAL.csv"                                       
[60] "PCH_OUTCOMES_NATIONAL.csv"                                       
[61] "Timely_and_Effective_Care_Hospital.csv"                          
[62] "Timely_and_Effective_Care_National.csv"                          
[63] "Timely_and_Effective_Care_State.csv"                             
[64] "Unplanned_Hospital_Visits_Hospital.csv"                          
[65] "Unplanned_Hospital_Visits_National.csv"                          
[66] "Unplanned_Hospital_Visits_State.csv"                             
[67] "VA_IPF.csv"                                                      
[68] "VA_TE.csv"                                                       
[69] "Value_of_Care_National.csv"                                      
[70] "Veterans_Health_Administration_Provider_Level_Data.csv"          </code></pre>
</div>
</div>
<p>More to come in the future!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyrdata</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyrdata-2023-02-10/index.html</guid>
  <pubDate>Fri, 10 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating and Predicting Fast Regression Parsnip Models with {tidyAML}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-09/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>I am almost ready for a first release of my R package <a href="https://www.spsanderson.com/tidyAML/"><code>{tidyAML}</code></a>. The purpose of this is to act as a way of quickly generating models using the <strong>parsnip</strong> package and keeping things inside of the <strong>tidymodels</strong> framework allowing users to seamlessly create models in <strong>tidyAML</strong> but pluck and move them over to <strong>tidymodels</strong> should they prefer. This is because I believe that software should be interchangeable and work well with other libraries. Today I am going to showcase how the function <a href="https://www.spsanderson.com/tidyAML/reference/fast_regression.html"><code>fast_regression()</code></a></p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">fast_regression</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .rec_obj,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="st" style="color: #20794D;">"all"</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="st" style="color: #20794D;">"all"</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.split_type =</span> <span class="st" style="color: #20794D;">"initial_split"</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.split_args =</span> <span class="cn" style="color: #8f5902;">NULL</span></span>
<span id="cb1-8">)</span></code></pre></div>
</div>
<p>Here are the arguments to the function:</p>
<ul>
<li><code>.data</code> - The data being passed to the function for the regression problem</li>
<li><code>.rec_obj</code> - The recipe object being passed.</li>
<li><code>.parsnip_fns</code> - The default is ‘all’ which will create all possible regression model specifications supported.</li>
<li><code>.parsnip_eng</code> - The default is ‘all’ which will create all possible regression model specifications supported.</li>
<li><code>.split_type</code> - The default is ‘initial_split’, you can pass any type of split supported by <strong>rsample</strong></li>
<li><code>.split_args</code> - The default is NULL, when NULL then the default parameters of the split type will be executed for the rsample split type.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s take a look at an example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(tidyAML)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">library</span>(recipes)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;">library</span>(purrr)</span>
<span id="cb2-5"></span>
<span id="cb2-6">rec_obj <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;">~</span> ., <span class="at" style="color: #657422;">data =</span> mtcars)</span>
<span id="cb2-7">fast_reg_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">fast_regression</span>(</span>
<span id="cb2-8">  <span class="at" style="color: #657422;">.data =</span> mtcars,</span>
<span id="cb2-9">  <span class="at" style="color: #657422;">.rec_obj =</span> rec_obj,</span>
<span id="cb2-10">  <span class="at" style="color: #657422;">.parsnip_eng =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"lm"</span>,<span class="st" style="color: #20794D;">"glm"</span>),</span>
<span id="cb2-11">  <span class="at" style="color: #657422;">.parsnip_fns =</span> <span class="st" style="color: #20794D;">"linear_reg"</span></span>
<span id="cb2-12">)</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="fu" style="color: #4758AB;">glimpse</span>(fast_reg_tbl)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 2
Columns: 8
$ .model_id       &lt;int&gt; 1, 2
$ .parsnip_engine &lt;chr&gt; "lm", "glm"
$ .parsnip_mode   &lt;chr&gt; "regression", "regression"
$ .parsnip_fns    &lt;chr&gt; "linear_reg", "linear_reg"
$ model_spec      &lt;list&gt; [~NULL, ~NULL, NULL, regression, TRUE, NULL, lm, TRUE]…
$ wflw            &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ fitted_wflw     &lt;list&gt; [cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb, mp…
$ pred_wflw       &lt;list&gt; [&lt;tbl_df[24 x 1]&gt;], [&lt;tbl_df[24 x 1]&gt;]</code></pre>
</div>
</div>
<p>Let’s take a look at the model spec.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">fast_reg_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>(model_spec) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Linear Regression Model Specification (regression)

Computational engine: lm </code></pre>
</div>
</div>
<p>Now the <code>wflw</code> column.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">fast_reg_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>(wflw) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>══ Workflow ════════════════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────
Linear Regression Model Specification (regression)

Computational engine: lm </code></pre>
</div>
</div>
<p>The Fitted workflow.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">fast_reg_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>(fitted_wflw) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>══ Workflow [trained] ══════════════════════════════════════════════════════════
Preprocessor: Recipe
Model: linear_reg()

── Preprocessor ────────────────────────────────────────────────────────────────
0 Recipe Steps

── Model ───────────────────────────────────────────────────────────────────────

Call:
stats::lm(formula = ..y ~ ., data = data)

Coefficients:
(Intercept)          cyl         disp           hp         drat           wt  
 -15.077267     1.107474     0.001161    -0.001014     4.010199    -1.280324  
       qsec           vs           am         gear         carb  
   0.512318    -0.488014     2.430052     4.353568    -2.546043  </code></pre>
</div>
</div>
<p>And lastly tne predicted workflow column.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">fast_reg_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">slice</span>(<span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pull</span>(pred_wflw) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">pluck</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 24 × 1
   .pred
   &lt;dbl&gt;
 1  24.7
 2  28.2
 3  18.9
 4  12.0
 5  14.8
 6  15.4
 7  14.7
 8  20.0
 9  11.2
10  19.1
# … with 14 more rows</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidyaml</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-09/index.html</guid>
  <pubDate>Thu, 09 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Creating an R Project Directory</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-08/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>When working in R I find it best to create a new project when working on something. This keeps all of the data and scripts in one location. This also means that if you are not careful the directory you have your project in can become quite messy. This used to happen to me with regularity, then I got smart and wrote a script that would standardize how projects are built for me.</p>
<p>I find it important to have different fodlers for different parts of a project. This does not mean I will use them all for every project but that is fine, you can either comment that portion out or just delete the files that are created.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is what I do broken down into different steps. First, I see if the package <code>{fs}</code> is installed, and if not, then install it, and finally load it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="cf" style="color: #003B4F;">if</span>(<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">require</span>(fs)) {</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"fs"</span>)</span>
<span id="cb1-3">}</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(fs))</span></code></pre></div>
</div>
<p>Next we create a character vector of folder paths that will exist inside of the main project folder itself.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">folders <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(</span>
<span id="cb2-2">  <span class="st" style="color: #20794D;">"00_Scripts"</span></span>
<span id="cb2-3">  , <span class="st" style="color: #20794D;">"00_Data"</span></span>
<span id="cb2-4">  , <span class="st" style="color: #20794D;">"01_Queries"</span></span>
<span id="cb2-5">  , <span class="st" style="color: #20794D;">"02_Data_Manipulation"</span></span>
<span id="cb2-6">  , <span class="st" style="color: #20794D;">"03_Viz"</span></span>
<span id="cb2-7">  , <span class="st" style="color: #20794D;">"04_TS_Modeling"</span></span>
<span id="cb2-8">  , <span class="st" style="color: #20794D;">"99_Automations"</span></span>
<span id="cb2-9">)</span></code></pre></div>
</div>
<p>Now that the folders we want are spelt out, we can create them.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">fs<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dir_create</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;">path =</span> folders</span>
<span id="cb3-3">)</span></code></pre></div>
</div>
<p>Now that is done, it’s off to creating a few files that I personally almost always use. I do a lot of work out of a data warehouse so a connection file is needed. We also need a disconnection function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># DSS Connection </span></span>
<span id="cb4-2">db_connect <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>() {</span>
<span id="cb4-3">  db_con <span class="ot" style="color: #003B4F;">&lt;-</span> LICHospitalR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">db_connect</span>()</span>
<span id="cb4-4">  </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;">return</span>(db_con)</span>
<span id="cb4-6">  </span>
<span id="cb4-7">}</span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;"># Disconnect from Database</span></span>
<span id="cb4-10">db_disconnect <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(.connection) {</span>
<span id="cb4-11">  </span>
<span id="cb4-12">  DBI<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dbDisconnect</span>(</span>
<span id="cb4-13">    <span class="at" style="color: #657422;">conn =</span> <span class="fu" style="color: #4758AB;">db_connect</span>()</span>
<span id="cb4-14">  )</span>
<span id="cb4-15">  </span>
<span id="cb4-16">}</span></code></pre></div>
</div>
<p>Now, let’s load in the typical libraries. You can modify this to suit your own needs.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># Library Load</span></span>
<span id="cb5-2"></span>
<span id="cb5-3">library_load <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(){</span>
<span id="cb5-4">  </span>
<span id="cb5-5">  <span class="cf" style="color: #003B4F;">if</span>(<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">require</span>(pacman)){<span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"pacman"</span>)}</span>
<span id="cb5-6">  pacman<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">p_load</span>(</span>
<span id="cb5-7">    <span class="st" style="color: #20794D;">"DBI"</span></span>
<span id="cb5-8">    , <span class="st" style="color: #20794D;">"odbc"</span></span>
<span id="cb5-9">    , <span class="st" style="color: #20794D;">"janitor"</span></span>
<span id="cb5-10">    , <span class="st" style="color: #20794D;">"dplyr"</span></span>
<span id="cb5-11">    , <span class="st" style="color: #20794D;">"tibble"</span></span>
<span id="cb5-12">    , <span class="st" style="color: #20794D;">"tidyr"</span></span>
<span id="cb5-13">    , <span class="st" style="color: #20794D;">"LICHospitalR"</span></span>
<span id="cb5-14">    , <span class="st" style="color: #20794D;">"modeltime"</span></span>
<span id="cb5-15">  )</span>
<span id="cb5-16">  </span>
<span id="cb5-17">}</span></code></pre></div>
</div>
<p>Ok so now the functions have been created, let’s dump them!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">db_funs <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"db_connect"</span>,<span class="st" style="color: #20794D;">"db_disconnect"</span>)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;">dump</span>(</span>
<span id="cb6-3">  <span class="at" style="color: #657422;">list =</span> db_funs,</span>
<span id="cb6-4">  <span class="at" style="color: #657422;">file =</span> <span class="st" style="color: #20794D;">"00_Scripts/db_con_obj.R"</span></span>
<span id="cb6-5">)</span>
<span id="cb6-6"></span>
<span id="cb6-7">lib_funs <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"library_load"</span></span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;">dump</span>(</span>
<span id="cb6-9">  <span class="at" style="color: #657422;">list =</span> lib_funs,</span>
<span id="cb6-10">  <span class="at" style="color: #657422;">file =</span> <span class="st" style="color: #20794D;">"00_Scripts/library_load.R"</span></span>
<span id="cb6-11">)</span></code></pre></div>
</div>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Here is the full script!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="cf" style="color: #003B4F;">if</span>(<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">require</span>(fs)) {</span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"fs"</span>)</span>
<span id="cb7-3">}</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(fs))</span>
<span id="cb7-5"></span>
<span id="cb7-6">folders <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(</span>
<span id="cb7-7">  <span class="st" style="color: #20794D;">"00_Scripts"</span></span>
<span id="cb7-8">  , <span class="st" style="color: #20794D;">"00_Data"</span></span>
<span id="cb7-9">  , <span class="st" style="color: #20794D;">"01_Queries"</span></span>
<span id="cb7-10">  , <span class="st" style="color: #20794D;">"02_Data_Manipulation"</span></span>
<span id="cb7-11">  , <span class="st" style="color: #20794D;">"03_Viz"</span></span>
<span id="cb7-12">  , <span class="st" style="color: #20794D;">"04_TS_Modeling"</span></span>
<span id="cb7-13">  , <span class="st" style="color: #20794D;">"99_Automations"</span></span>
<span id="cb7-14">)</span>
<span id="cb7-15"></span>
<span id="cb7-16">fs<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dir_create</span>(</span>
<span id="cb7-17">  <span class="at" style="color: #657422;">path =</span> folders</span>
<span id="cb7-18">)</span>
<span id="cb7-19"></span>
<span id="cb7-20"></span>
<span id="cb7-21"><span class="fu" style="color: #4758AB;">file_create</span>(<span class="st" style="color: #20794D;">"01_Queries/query_functions.R"</span>)</span>
<span id="cb7-22"><span class="fu" style="color: #4758AB;">file_create</span>(<span class="st" style="color: #20794D;">"02_Data_Manipulation/data_functions.R"</span>)</span>
<span id="cb7-23"><span class="fu" style="color: #4758AB;">file_create</span>(<span class="st" style="color: #20794D;">"03_Viz/viz_functions.R"</span>)</span>
<span id="cb7-24"><span class="fu" style="color: #4758AB;">file_create</span>(<span class="st" style="color: #20794D;">"04_TS_Modeling/ts_functions.R"</span>)</span>
<span id="cb7-25"></span>
<span id="cb7-26"><span class="co" style="color: #5E5E5E;"># DSS Connection </span></span>
<span id="cb7-27">db_connect <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>() {</span>
<span id="cb7-28">  db_con <span class="ot" style="color: #003B4F;">&lt;-</span> LICHospitalR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">db_connect</span>()</span>
<span id="cb7-29">  </span>
<span id="cb7-30">  <span class="fu" style="color: #4758AB;">return</span>(db_con)</span>
<span id="cb7-31">  </span>
<span id="cb7-32">}</span>
<span id="cb7-33"></span>
<span id="cb7-34"><span class="co" style="color: #5E5E5E;"># Disconnect from Database</span></span>
<span id="cb7-35">db_disconnect <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(.connection) {</span>
<span id="cb7-36">  </span>
<span id="cb7-37">  DBI<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">dbDisconnect</span>(</span>
<span id="cb7-38">    <span class="at" style="color: #657422;">conn =</span> <span class="fu" style="color: #4758AB;">db_connect</span>()</span>
<span id="cb7-39">  )</span>
<span id="cb7-40">  </span>
<span id="cb7-41">}</span>
<span id="cb7-42"></span>
<span id="cb7-43"><span class="co" style="color: #5E5E5E;"># Library Load</span></span>
<span id="cb7-44"></span>
<span id="cb7-45">library_load <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(){</span>
<span id="cb7-46">  </span>
<span id="cb7-47">  <span class="cf" style="color: #003B4F;">if</span>(<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">require</span>(pacman)){<span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"pacman"</span>)}</span>
<span id="cb7-48">  pacman<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">p_load</span>(</span>
<span id="cb7-49">    <span class="st" style="color: #20794D;">"DBI"</span></span>
<span id="cb7-50">    , <span class="st" style="color: #20794D;">"odbc"</span></span>
<span id="cb7-51">    , <span class="st" style="color: #20794D;">"janitor"</span></span>
<span id="cb7-52">    , <span class="st" style="color: #20794D;">"dplyr"</span></span>
<span id="cb7-53">    , <span class="st" style="color: #20794D;">"tibble"</span></span>
<span id="cb7-54">    , <span class="st" style="color: #20794D;">"tidyr"</span></span>
<span id="cb7-55">    , <span class="st" style="color: #20794D;">"LICHospitalR"</span></span>
<span id="cb7-56">    , <span class="st" style="color: #20794D;">"modeltime"</span></span>
<span id="cb7-57">  )</span>
<span id="cb7-58">  </span>
<span id="cb7-59">}</span>
<span id="cb7-60"></span>
<span id="cb7-61">db_funs <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"db_connect"</span>,<span class="st" style="color: #20794D;">"db_disconnect"</span>)</span>
<span id="cb7-62"><span class="fu" style="color: #4758AB;">dump</span>(</span>
<span id="cb7-63">  <span class="at" style="color: #657422;">list =</span> db_funs,</span>
<span id="cb7-64">  <span class="at" style="color: #657422;">file =</span> <span class="st" style="color: #20794D;">"00_Scripts/db_con_obj.R"</span></span>
<span id="cb7-65">)</span>
<span id="cb7-66"></span>
<span id="cb7-67">lib_funs <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"library_load"</span></span>
<span id="cb7-68"><span class="fu" style="color: #4758AB;">dump</span>(</span>
<span id="cb7-69">  <span class="at" style="color: #657422;">list =</span> lib_funs,</span>
<span id="cb7-70">  <span class="at" style="color: #657422;">file =</span> <span class="st" style="color: #20794D;">"00_Scripts/library_load.R"</span></span>
<span id="cb7-71">)</span></code></pre></div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-08/index.html</guid>
  <pubDate>Wed, 08 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Subsetting Named Lists in R</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-07/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In R, lists are a fundamental data structure that allows us to store multiple objects of different data types under a single name. Often times, we want to extract certain elements of a list based on their names, and this can be accomplished through the use of the subset function. In this blog post, we will take a look at how to use the grep function to subset named lists in R.</p>
<p>First, we will create a list object as follows:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">asc_list <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">Facility =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">10</span>,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;">State =</span> <span class="dv" style="color: #AD0000;">11</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">20</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">National =</span> <span class="dv" style="color: #AD0000;">21</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">30</span></span>
<span id="cb1-5">)</span></code></pre></div>
</div>
<p>We now have a list with three elements, each with a different name. Next, we want to make sure that our list does not contain any 0 length items. This can be achieved by using the lapply function and the length function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">asc_list <span class="ot" style="color: #003B4F;">&lt;-</span> asc_list[<span class="fu" style="color: #4758AB;">lapply</span>(asc_list, length) <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span>]</span></code></pre></div>
</div>
<p>The <code>lapply</code> function applies the length function to each element of the list, and returns a logical vector indicating whether each element is of length greater than 0. By using the square bracket operator, we can extract only those elements for which the logical value is TRUE.</p>
<p>Next, we create a character vector of possible items that we want to match on:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">patterns <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"state"</span>,<span class="st" style="color: #20794D;">"faci"</span>)</span></code></pre></div>
</div>
<p>We can now pass this vector of patterns to the grep function, along with the names of our list and the ignore.case argument set to TRUE. The grep function returns the indices of the elements in our list that match the given pattern:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">asc_list[<span class="fu" style="color: #4758AB;">grep</span>(</span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">paste</span>(patterns, <span class="at" style="color: #657422;">collapse =</span> <span class="st" style="color: #20794D;">"|"</span>),</span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">names</span>(asc_list),</span>
<span id="cb4-4">  <span class="at" style="color: #657422;">ignore.case =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb4-5">  )]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$Facility
 [1]  1  2  3  4  5  6  7  8  9 10

$State
 [1] 11 12 13 14 15 16 17 18 19 20</code></pre>
</div>
</div>
<p>The result of this code is a new list that contains only the elements of our original list whose names match either “state” or “faci”. The paste function is used to join the patterns in the vector into a single string, with the | character separating each pattern. This allows us to search for multiple patterns at once.</p>
<p>In conclusion, the grep function is a powerful tool for sub-setting named lists in R, especially when we have multiple patterns that we want to match on. By combining the grep function with other R functions such as <code>lapply</code> and length, we can extract specific elements from our lists with ease.</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidydensity</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-07/index.html</guid>
  <pubDate>Tue, 07 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Cumulative Measurement Functions with {TidyDensity}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>If you’re looking for an easy-to-use package to calculate cumulative statistics in R, you may want to check out the TidyDensity package. This package offers several functions to calculate cumulative measurements, including mean, median, standard deviation, variance, skewness, kurtosis, harmonic mean, and geometric mean.</p>
<ul>
<li><code>cgmean()</code>: Cumulative Geometric Mean</li>
</ul>
<p>The <code>cgmean()</code> function calculates the cumulative geometric mean of a set of values. This is the nth root of the product of the first n elements of the set. It’s a useful measurement for sets of values that are multiplied together, such as growth rates.</p>
<ul>
<li><code>chmean()</code>: Cumulative Harmonic Mean</li>
</ul>
<p>The <code>chmean()</code> function calculates the cumulative harmonic mean of a set of values. This is the inverse of the arithmetic mean of the reciprocals of the values. It’s commonly used for sets of values that represent rates, such as speeds.</p>
<ul>
<li><code>ckurtosis()</code>: Cumulative Kurtosis</li>
</ul>
<p>The <code>ckurtosis()</code> function calculates the cumulative kurtosis of a set of values. Kurtosis is a measure of the peakedness of a distribution, relative to a normal distribution. The cumulative kurtosis calculates the kurtosis of a set of values up to a specific point in the set.</p>
<ul>
<li><code>cmean()</code>: Cumulative Mean</li>
</ul>
<p>The <code>cmean()</code> function calculates the cumulative mean of a set of values. It’s a measure of the average of the values up to a specific point in the set.</p>
<ul>
<li><code>cmedian()</code>: Cumulative Median</li>
</ul>
<p>The <code>cmedian()</code> function calculates the cumulative median of a set of values. It’s the value that separates the lower half of the set from the upper half, up to a specific point in the set.</p>
<ul>
<li><code>csd()</code>: Cumulative Standard Deviation</li>
</ul>
<p>The <code>csd()</code> function calculates the cumulative standard deviation of a set of values. Standard deviation is a measure of the spread of values in a set. The cumulative standard deviation calculates the standard deviation up to a specific point in the set.</p>
<ul>
<li><code>cskewness()</code>: Cumulative Skewness</li>
</ul>
<p>The <code>cskewness()</code> function calculates the cumulative skewness of a set of values. Skewness is a measure of the asymmetry of a distribution. The cumulative skewness calculates the skewness up to a specific point in the set.</p>
<ul>
<li><code>cvar()</code>: Cumulative Variance</li>
</ul>
<p>The <code>cvar()</code> function calculates the cumulative variance of a set of values. Variance is a measure of the spread of values in a set. The cumulative variance calculates the variance up to a specific point in the set.</p>
<p>In conclusion, the <a href="https://www.spsanderson.com/TidyDensity/"><code>{TidyDensity}</code></a> package offers several functions for calculating cumulative statistics, including mean, median, standard deviation, variance, skewness, kurtosis, harmonic mean, and geometric mean. These functions make it easy to calculate cumulative statistics for sets of values in R.</p>
</section>
<section id="functions" class="level1">
<h1>Functions</h1>
<p>All of the functions perform work strictly on a vector. Because of this I will not go over the function calls separately because they all follow the vectorized for of <code>fun(.x)</code> where <strong><code>.x</code></strong> is the argument passed to the cumulative function.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Here I will go over some examples of each function use the <em>AirPassengers</em> data set.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(TidyDensity)</span>
<span id="cb1-2"></span>
<span id="cb1-3">v <span class="ot" style="color: #003B4F;">&lt;-</span> AirPassengers</span></code></pre></div>
</div>
<p>Let’s start at the top.</p>
<p>Cumulative Geometric Mean:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">cgmean</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 112.0000 114.9609 120.3810 122.4802 122.1827 124.2311</code></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">tail</span>(<span class="fu" style="color: #4758AB;">cgmean</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 249.6135 251.1999 252.4577 253.5305 254.2952 255.2328</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cgmean</span>(v), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Cumulative Harmonic Mean:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">chmean</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 112.00000  57.46087  40.03378  30.55222  24.39304  20.66000</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">tail</span>(<span class="fu" style="color: #4758AB;">chmean</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.636832 1.632423 1.627194 1.621471 1.614757 1.608744</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">chmean</span>(v), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Cumulative Kurtosis:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">ckurtosis</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]      NaN 1.000000 1.500000 1.315839 1.597316 1.597850</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">tail</span>(<span class="fu" style="color: #4758AB;">ckurtosis</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2.668951 2.795314 2.733117 2.674195 2.649894 2.606228</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">ckurtosis</span>(v), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Cumulative Mean:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">cmean</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 112.0000 115.0000 120.6667 122.7500 122.4000 124.5000</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;">tail</span>(<span class="fu" style="color: #4758AB;">cmean</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 273.1367 275.5143 277.1631 278.4577 279.2378 280.2986</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cmean</span>(v), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Cumulative Median:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">cmedian</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 112.0 115.0 118.0 123.5 121.0 125.0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;">tail</span>(<span class="fu" style="color: #4758AB;">cmedian</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 259.0 261.5 264.0 264.0 264.0 265.5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cmedian</span>(v), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Cumulative Standard Deviation:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">csd</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]        NA  4.242641 10.263203  9.358597  8.142481  8.916277</code></pre>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;">tail</span>(<span class="fu" style="color: #4758AB;">csd</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 115.0074 117.9956 119.1924 119.7668 119.7083 119.9663</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">csd</span>(v), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Cumulative Skewness:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">cskewness</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]         NaN  0.00000000  0.44510927 -0.14739157 -0.02100016 -0.18544758</code></pre>
</div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;">tail</span>(<span class="fu" style="color: #4758AB;">cskewness</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.5936970 0.6471651 0.6349071 0.6145579 0.5972102 0.5770682</code></pre>
</div>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cskewness</span>(v), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Cumulative Variance:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="fu" style="color: #4758AB;">head</span>(<span class="fu" style="color: #4758AB;">cvar</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]        NA  18.00000 105.33333  87.58333  66.30000  79.50000</code></pre>
</div>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1"><span class="fu" style="color: #4758AB;">tail</span>(<span class="fu" style="color: #4758AB;">cvar</span>(v))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 13226.70 13922.96 14206.84 14344.08 14330.07 14391.92</code></pre>
</div>
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cvar</span>(v), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>tidydensity</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-06/inex.html</guid>
  <pubDate>Mon, 06 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>The Argument Matcher: A Function for Selecting the Right Arguments {tidyAML}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-03/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>I am working on finishing up a few things with my new R package <a href="https://www.spsanderson.com/tidyAML/"><code>{tidyAML}</code></a> before I release it to CRAN. One of those things is the ability of a user to build a model using a command that might be something like <code>generate_model()</code>. One of the things that is necessary to do is to match the function arguments from the <code>generate_model()</code> to the actual <strong>parsnip</strong> call.</p>
<p>This is where and argument matcher of sorts may come in handy. I am doing this because it will take one most step of abstraction away, and instead of say calling <code>linear_reg()</code> or <code>mars()</code> or something like that, you can just instead use <code>generate_model()</code> and type in your engine or the <code>parsnip</code> function call there.</p>
<p>Now I am not one hundred percent certain that I’ll actually implement this or not, but the exercise was fun enough that I decided to share it. So let’s get into it.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the current state of the function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">argument_matcher <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(<span class="at" style="color: #657422;">.f =</span> <span class="st" style="color: #20794D;">"linear_reg"</span>, <span class="at" style="color: #657422;">.args =</span> <span class="fu" style="color: #4758AB;">list</span>()){</span>
<span id="cb1-2">  </span>
<span id="cb1-3">  <span class="co" style="color: #5E5E5E;"># TidyEval ----</span></span>
<span id="cb1-4">  fns <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.character</span>(.f)</span>
<span id="cb1-5">  </span>
<span id="cb1-6">  fns_args <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">formalArgs</span>(fns)</span>
<span id="cb1-7">  fns_args_list <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.list</span>(fns_args)</span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;">names</span>(fns_args_list) <span class="ot" style="color: #003B4F;">&lt;-</span> fns_args</span>
<span id="cb1-9">  </span>
<span id="cb1-10">  arg_list <span class="ot" style="color: #003B4F;">&lt;-</span> .args</span>
<span id="cb1-11">  arg_list_names <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unique</span>(<span class="fu" style="color: #4758AB;">names</span>(arg_list))</span>
<span id="cb1-12">  </span>
<span id="cb1-13">  l <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(arg_list, fns_args_list)</span>
<span id="cb1-14">  </span>
<span id="cb1-15">  arg_idx <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">which</span>(arg_list_names <span class="sc" style="color: #5E5E5E;">%in%</span> fns_args_list)</span>
<span id="cb1-16">  bad_arg_idx <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">which</span>(<span class="sc" style="color: #5E5E5E;">!</span>arg_list_names <span class="sc" style="color: #5E5E5E;">%in%</span> fns_args_list)</span>
<span id="cb1-17">  </span>
<span id="cb1-18">  bad_args <span class="ot" style="color: #003B4F;">&lt;-</span> arg_list[bad_arg_idx]</span>
<span id="cb1-19">  bad_arg_names <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unique</span>(<span class="fu" style="color: #4758AB;">names</span>(bad_args))</span>
<span id="cb1-20">  </span>
<span id="cb1-21">  final_args <span class="ot" style="color: #003B4F;">&lt;-</span> arg_list[arg_idx]</span>
<span id="cb1-22">  </span>
<span id="cb1-23">  <span class="co" style="color: #5E5E5E;"># Return ----</span></span>
<span id="cb1-24">  <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(bad_arg_names <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span>)){</span>
<span id="cb1-25">    rlang<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">inform</span>(</span>
<span id="cb1-26">      <span class="at" style="color: #657422;">message =</span> <span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"bad arguments passed: "</span>, bad_arg_names),</span>
<span id="cb1-27">      <span class="at" style="color: #657422;">use_cli_format =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb1-28">    )</span>
<span id="cb1-29">  }</span>
<span id="cb1-30"></span>
<span id="cb1-31">  <span class="fu" style="color: #4758AB;">return</span>(final_args)</span>
<span id="cb1-32">}</span></code></pre></div>
</div>
<p>When working with R functions, it’s not uncommon to encounter a situation where you need to pass arguments to another function. This can be especially challenging when the arguments are not properly matched. Fortunately, the <code>argument_matcher</code> function provides an elegant solution to this problem.</p>
<p>The <code>argument_matcher</code> function takes two arguments: <code>.f</code> and <code>.args</code>. The <code>.f</code> argument is a string that specifies the name of the function you want to pass arguments to, while the <code>.args</code> argument is a list that contains the arguments you want to pass to the specified function.</p>
<p>The <code>argument_matcher</code> function first uses the <code>formalArg</code>s function to extract the formal arguments of the specified function and store them in <code>fns_args</code>. The names of the formal arguments are then used to create a list, <code>fns_args_list</code>.</p>
<p>Next, the function extracts the names of the arguments in <code>.arg</code>s and stores them in <code>arg_list_names</code>. It then checks if the names of the arguments in <code>.args</code> match the names of the formal arguments of the specified function, and stores the matching arguments in <code>final_args</code>. Any arguments that don’t match the formal arguments are stored in bad_args, and a warning message is printed indicating that bad arguments were passed.</p>
<p>The final step is to return the <code>final_args</code> list, which contains only the arguments that match the formal arguments of the specified function.</p>
<p>In conclusion, the <code>argument_matcher</code> function is a useful tool for ensuring that arguments are properly matched when passed to another function. Whether you’re working with linear regression models or any other type of function, the <code>argument_matche</code>r function will help you select the right arguments and avoid common errors.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s see a simple example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(tidymodels))</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">argument_matcher</span>(</span>
<span id="cb2-4">  <span class="at" style="color: #657422;">.args =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb2-5">    <span class="at" style="color: #657422;">mode =</span> <span class="st" style="color: #20794D;">"regression"</span>, </span>
<span id="cb2-6">    <span class="at" style="color: #657422;">engine =</span> <span class="st" style="color: #20794D;">"lm"</span>,</span>
<span id="cb2-7">    <span class="at" style="color: #657422;">cost =</span> <span class="fl" style="color: #AD0000;">0.5</span>,</span>
<span id="cb2-8">    <span class="at" style="color: #657422;">trees =</span> <span class="dv" style="color: #AD0000;">1</span>, </span>
<span id="cb2-9">    <span class="at" style="color: #657422;">mtry =</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb2-10">    )</span>
<span id="cb2-11">  )</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>bad arguments passed: cost
bad arguments passed: trees
bad arguments passed: mtry</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>$mode
[1] "regression"

$engine
[1] "lm"</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>list</category>
  <category>tidyaml</category>
  <category>tidymodels</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-03/index.html</guid>
  <pubDate>Fri, 03 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Diverging Lollipop Chart: A Visual Tool for Comparing Data with {healthyR}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-02/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>A diverging lollipop chart is a useful tool for comparing data that falls into two categories, usually indicated by different colors. This type of chart is particularly well-suited for comparing the differences between two data sets and for identifying which data points are contributing most to the differences.</p>
<p>The R package <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> offers a function called <a href="https://www.spsanderson.com/healthyR/reference/diverging_lollipop_plt.html"><code>diverging_lollipop_plt()</code></a> that can be used to create a diverging lollipop chart. This function has several parameters that can be used to customize the chart to meet your specific needs.</p>
<p>In conclusion, the diverging lollipop chart is a useful tool for comparing data sets and can provide insights into the differences between two sets of data. The <a href="https://www.spsanderson.com/healthyR/reference/diverging_lollipop_plt.html"><code>diverging_lollipop_plt()</code></a> function from the <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> package is a great option for creating this type of chart, as it offers a range of customization options to meet your specific needs. Whether you’re working with data related to business, finance, or any other field, a diverging lollipop chart can be a valuable tool in your visual analysis toolkit.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">diverging_lollipop_plt</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .x_axis,</span>
<span id="cb1-4">  .y_axis,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.plot_title =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.plot_subtitle =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.plot_caption =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb1-9">)</span></code></pre></div>
</div>
<p>Now lets see the arguments that get provided to the parameters.</p>
<ul>
<li><code>.data</code> - The data to pass to the function, must be a tibble/data.frame.</li>
<li><code>.x_axis</code> - The data that is passed to the x-axis. This will also be the x and xend parameters of the geom_segment</li>
<li><code>.y_axis</code> - The data that is passed to the y-axis. This will also equal the parameters of <code>yend</code> and <code>label</code></li>
<li><code>.plot_title</code> - Default is NULL</li>
<li><code>.plot_subtitle</code> - Default is NULL</li>
<li><code>.plot_caption</code> - Default is NULL</li>
<li><code>.interactive</code> - Default is FALSE. TRUE returns a plotly plot</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s see an example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(ggplot2))</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"mtcars"</span>)</span>
<span id="cb2-6">mtcars<span class="sc" style="color: #5E5E5E;">$</span>car_name <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rownames</span>(mtcars)</span>
<span id="cb2-7">mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg_z <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">round</span>((mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">mean</span>(mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg))<span class="sc" style="color: #5E5E5E;">/</span><span class="fu" style="color: #4758AB;">sd</span>(mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg), <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb2-8">mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg_type <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg_z <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="st" style="color: #20794D;">"below"</span>, <span class="st" style="color: #20794D;">"above"</span>)</span>
<span id="cb2-9">mtcars <span class="ot" style="color: #003B4F;">&lt;-</span> mtcars[<span class="fu" style="color: #4758AB;">order</span>(mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg_z), ]  <span class="co" style="color: #5E5E5E;"># sort</span></span>
<span id="cb2-10">mtcars<span class="sc" style="color: #5E5E5E;">$</span>car_name <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">factor</span>(mtcars<span class="sc" style="color: #5E5E5E;">$</span>car_name, <span class="at" style="color: #657422;">levels =</span> mtcars<span class="sc" style="color: #5E5E5E;">$</span>car_name)</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;">diverging_lollipop_plt</span>(</span>
<span id="cb2-13">  <span class="at" style="color: #657422;">.data =</span> mtcars, </span>
<span id="cb2-14">  <span class="at" style="color: #657422;">.x_axis =</span> car_name,</span>
<span id="cb2-15">  <span class="at" style="color: #657422;">.y_axis =</span> mpg_z</span>
<span id="cb2-16">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-02/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now let’s also see the interactive chart.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">diverging_lollipop_plt</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;">.data =</span> mtcars, </span>
<span id="cb3-3">  <span class="at" style="color: #657422;">.x_axis =</span> car_name,</span>
<span id="cb3-4">  <span class="at" style="color: #657422;">.y_axis =</span> mpg_z,</span>
<span id="cb3-5">  <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb3-6">)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-464c8a583214626e10fa" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-464c8a583214626e10fa">{"x":{"data":[{"x":[-1.61,-1.61,-1.13,-0.96,-0.89,-0.84,-0.81,-0.81,-0.76,-0.71,-0.61,-0.46,-0.38,-0.33,-0.23,-0.15,-0.15,-0.06,0.15,0.15,0.22,0.22,0.23,0.45,0.45,0.72,0.98,1.2,1.71,1.71,2.04,2.29],"y":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"text":["car_name: Cadillac Fleetwood<br />mpg_z: -1.61<br />mpg_z: -1.61","car_name: Lincoln Continental<br />mpg_z: -1.61<br />mpg_z: -1.61","car_name: Camaro Z28<br />mpg_z: -1.13<br />mpg_z: -1.13","car_name: Duster 360<br />mpg_z: -0.96<br />mpg_z: -0.96","car_name: Chrysler Imperial<br />mpg_z: -0.89<br />mpg_z: -0.89","car_name: Maserati Bora<br />mpg_z: -0.84<br />mpg_z: -0.84","car_name: Merc 450SLC<br />mpg_z: -0.81<br />mpg_z: -0.81","car_name: AMC Javelin<br />mpg_z: -0.81<br />mpg_z: -0.81","car_name: Dodge Challenger<br />mpg_z: -0.76<br />mpg_z: -0.76","car_name: Ford Pantera L<br />mpg_z: -0.71<br />mpg_z: -0.71","car_name: Merc 450SE<br />mpg_z: -0.61<br />mpg_z: -0.61","car_name: Merc 450SL<br />mpg_z: -0.46<br />mpg_z: -0.46","car_name: Merc 280C<br />mpg_z: -0.38<br />mpg_z: -0.38","car_name: Valiant<br />mpg_z: -0.33<br />mpg_z: -0.33","car_name: Hornet Sportabout<br />mpg_z: -0.23<br />mpg_z: -0.23","car_name: Merc 280<br />mpg_z: -0.15<br />mpg_z: -0.15","car_name: Pontiac Firebird<br />mpg_z: -0.15<br />mpg_z: -0.15","car_name: Ferrari Dino<br />mpg_z: -0.06<br />mpg_z: -0.06","car_name: Mazda RX4<br />mpg_z:  0.15<br />mpg_z:  0.15","car_name: Mazda RX4 Wag<br />mpg_z:  0.15<br />mpg_z:  0.15","car_name: Hornet 4 Drive<br />mpg_z:  0.22<br />mpg_z:  0.22","car_name: Volvo 142E<br />mpg_z:  0.22<br />mpg_z:  0.22","car_name: Toyota Corona<br />mpg_z:  0.23<br />mpg_z:  0.23","car_name: Datsun 710<br />mpg_z:  0.45<br />mpg_z:  0.45","car_name: Merc 230<br />mpg_z:  0.45<br />mpg_z:  0.45","car_name: Merc 240D<br />mpg_z:  0.72<br />mpg_z:  0.72","car_name: Porsche 914-2<br />mpg_z:  0.98<br />mpg_z:  0.98","car_name: Fiat X1-9<br />mpg_z:  1.20<br />mpg_z:  1.20","car_name: Honda Civic<br />mpg_z:  1.71<br />mpg_z:  1.71","car_name: Lotus Europa<br />mpg_z:  1.71<br />mpg_z:  1.71","car_name: Fiat 128<br />mpg_z:  2.04<br />mpg_z:  2.04","car_name: Toyota Corolla<br />mpg_z:  2.29<br />mpg_z:  2.29"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,0,0,1)","opacity":1,"size":22.6771653543307,"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,0,0,1)"}},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[0,-1.61,null,0,-1.61,null,0,-1.13,null,0,-0.96,null,0,-0.89,null,0,-0.84,null,0,-0.81,null,0,-0.81,null,0,-0.76,null,0,-0.71,null,0,-0.61,null,0,-0.46,null,0,-0.38,null,0,-0.33,null,0,-0.23,null,0,-0.15,null,0,-0.15,null,0,-0.06,null,0,0.15,null,0,0.15,null,0,0.22,null,0,0.22,null,0,0.23,null,0,0.45,null,0,0.45,null,0,0.72,null,0,0.98,null,0,1.2,null,0,1.71,null,0,1.71,null,0,2.04,null,0,2.29],"y":[1,1,null,2,2,null,3,3,null,4,4,null,5,5,null,6,6,null,7,7,null,8,8,null,9,9,null,10,10,null,11,11,null,12,12,null,13,13,null,14,14,null,15,15,null,16,16,null,17,17,null,18,18,null,19,19,null,20,20,null,21,21,null,22,22,null,23,23,null,24,24,null,25,25,null,26,26,null,27,27,null,28,28,null,29,29,null,30,30,null,31,31,null,32,32],"text":["car_name: Cadillac Fleetwood<br />y: 0<br />mpg_z: -1.61<br />mpg_z: -1.61<br />car_name:  1","car_name: Cadillac Fleetwood<br />y: 0<br />mpg_z: -1.61<br />mpg_z: -1.61<br />car_name:  1",null,"car_name: Lincoln Continental<br />y: 0<br />mpg_z: -1.61<br />mpg_z: -1.61<br />car_name:  2","car_name: Lincoln Continental<br />y: 0<br />mpg_z: -1.61<br />mpg_z: -1.61<br />car_name:  2",null,"car_name: Camaro Z28<br />y: 0<br />mpg_z: -1.13<br />mpg_z: -1.13<br />car_name:  3","car_name: Camaro Z28<br />y: 0<br />mpg_z: -1.13<br />mpg_z: -1.13<br />car_name:  3",null,"car_name: Duster 360<br />y: 0<br />mpg_z: -0.96<br />mpg_z: -0.96<br />car_name:  4","car_name: Duster 360<br />y: 0<br />mpg_z: -0.96<br />mpg_z: -0.96<br />car_name:  4",null,"car_name: Chrysler Imperial<br />y: 0<br />mpg_z: -0.89<br />mpg_z: -0.89<br />car_name:  5","car_name: Chrysler Imperial<br />y: 0<br />mpg_z: -0.89<br />mpg_z: -0.89<br />car_name:  5",null,"car_name: Maserati Bora<br />y: 0<br />mpg_z: -0.84<br />mpg_z: -0.84<br />car_name:  6","car_name: Maserati Bora<br />y: 0<br />mpg_z: -0.84<br />mpg_z: -0.84<br />car_name:  6",null,"car_name: Merc 450SLC<br />y: 0<br />mpg_z: -0.81<br />mpg_z: -0.81<br />car_name:  7","car_name: Merc 450SLC<br />y: 0<br />mpg_z: -0.81<br />mpg_z: -0.81<br />car_name:  7",null,"car_name: AMC Javelin<br />y: 0<br />mpg_z: -0.81<br />mpg_z: -0.81<br />car_name:  8","car_name: AMC Javelin<br />y: 0<br />mpg_z: -0.81<br />mpg_z: -0.81<br />car_name:  8",null,"car_name: Dodge Challenger<br />y: 0<br />mpg_z: -0.76<br />mpg_z: -0.76<br />car_name:  9","car_name: Dodge Challenger<br />y: 0<br />mpg_z: -0.76<br />mpg_z: -0.76<br />car_name:  9",null,"car_name: Ford Pantera L<br />y: 0<br />mpg_z: -0.71<br />mpg_z: -0.71<br />car_name: 10","car_name: Ford Pantera L<br />y: 0<br />mpg_z: -0.71<br />mpg_z: -0.71<br />car_name: 10",null,"car_name: Merc 450SE<br />y: 0<br />mpg_z: -0.61<br />mpg_z: -0.61<br />car_name: 11","car_name: Merc 450SE<br />y: 0<br />mpg_z: -0.61<br />mpg_z: -0.61<br />car_name: 11",null,"car_name: Merc 450SL<br />y: 0<br />mpg_z: -0.46<br />mpg_z: -0.46<br />car_name: 12","car_name: Merc 450SL<br />y: 0<br />mpg_z: -0.46<br />mpg_z: -0.46<br />car_name: 12",null,"car_name: Merc 280C<br />y: 0<br />mpg_z: -0.38<br />mpg_z: -0.38<br />car_name: 13","car_name: Merc 280C<br />y: 0<br />mpg_z: -0.38<br />mpg_z: -0.38<br />car_name: 13",null,"car_name: Valiant<br />y: 0<br />mpg_z: -0.33<br />mpg_z: -0.33<br />car_name: 14","car_name: Valiant<br />y: 0<br />mpg_z: -0.33<br />mpg_z: -0.33<br />car_name: 14",null,"car_name: Hornet Sportabout<br />y: 0<br />mpg_z: -0.23<br />mpg_z: -0.23<br />car_name: 15","car_name: Hornet Sportabout<br />y: 0<br />mpg_z: -0.23<br />mpg_z: -0.23<br />car_name: 15",null,"car_name: Merc 280<br />y: 0<br />mpg_z: -0.15<br />mpg_z: -0.15<br />car_name: 16","car_name: Merc 280<br />y: 0<br />mpg_z: -0.15<br />mpg_z: -0.15<br />car_name: 16",null,"car_name: Pontiac Firebird<br />y: 0<br />mpg_z: -0.15<br />mpg_z: -0.15<br />car_name: 17","car_name: Pontiac Firebird<br />y: 0<br />mpg_z: -0.15<br />mpg_z: -0.15<br />car_name: 17",null,"car_name: Ferrari Dino<br />y: 0<br />mpg_z: -0.06<br />mpg_z: -0.06<br />car_name: 18","car_name: Ferrari Dino<br />y: 0<br />mpg_z: -0.06<br />mpg_z: -0.06<br />car_name: 18",null,"car_name: Mazda RX4<br />y: 0<br />mpg_z:  0.15<br />mpg_z:  0.15<br />car_name: 19","car_name: Mazda RX4<br />y: 0<br />mpg_z:  0.15<br />mpg_z:  0.15<br />car_name: 19",null,"car_name: Mazda RX4 Wag<br />y: 0<br />mpg_z:  0.15<br />mpg_z:  0.15<br />car_name: 20","car_name: Mazda RX4 Wag<br />y: 0<br />mpg_z:  0.15<br />mpg_z:  0.15<br />car_name: 20",null,"car_name: Hornet 4 Drive<br />y: 0<br />mpg_z:  0.22<br />mpg_z:  0.22<br />car_name: 21","car_name: Hornet 4 Drive<br />y: 0<br />mpg_z:  0.22<br />mpg_z:  0.22<br />car_name: 21",null,"car_name: Volvo 142E<br />y: 0<br />mpg_z:  0.22<br />mpg_z:  0.22<br />car_name: 22","car_name: Volvo 142E<br />y: 0<br />mpg_z:  0.22<br />mpg_z:  0.22<br />car_name: 22",null,"car_name: Toyota Corona<br />y: 0<br />mpg_z:  0.23<br />mpg_z:  0.23<br />car_name: 23","car_name: Toyota Corona<br />y: 0<br />mpg_z:  0.23<br />mpg_z:  0.23<br />car_name: 23",null,"car_name: Datsun 710<br />y: 0<br />mpg_z:  0.45<br />mpg_z:  0.45<br />car_name: 24","car_name: Datsun 710<br />y: 0<br />mpg_z:  0.45<br />mpg_z:  0.45<br />car_name: 24",null,"car_name: Merc 230<br />y: 0<br />mpg_z:  0.45<br />mpg_z:  0.45<br />car_name: 25","car_name: Merc 230<br />y: 0<br />mpg_z:  0.45<br />mpg_z:  0.45<br />car_name: 25",null,"car_name: Merc 240D<br />y: 0<br />mpg_z:  0.72<br />mpg_z:  0.72<br />car_name: 26","car_name: Merc 240D<br />y: 0<br />mpg_z:  0.72<br />mpg_z:  0.72<br />car_name: 26",null,"car_name: Porsche 914-2<br />y: 0<br />mpg_z:  0.98<br />mpg_z:  0.98<br />car_name: 27","car_name: Porsche 914-2<br />y: 0<br />mpg_z:  0.98<br />mpg_z:  0.98<br />car_name: 27",null,"car_name: Fiat X1-9<br />y: 0<br />mpg_z:  1.20<br />mpg_z:  1.20<br />car_name: 28","car_name: Fiat X1-9<br />y: 0<br />mpg_z:  1.20<br />mpg_z:  1.20<br />car_name: 28",null,"car_name: Honda Civic<br />y: 0<br />mpg_z:  1.71<br />mpg_z:  1.71<br />car_name: 29","car_name: Honda Civic<br />y: 0<br />mpg_z:  1.71<br />mpg_z:  1.71<br />car_name: 29",null,"car_name: Lotus Europa<br />y: 0<br />mpg_z:  1.71<br />mpg_z:  1.71<br />car_name: 30","car_name: Lotus Europa<br />y: 0<br />mpg_z:  1.71<br />mpg_z:  1.71<br />car_name: 30",null,"car_name: Fiat 128<br />y: 0<br />mpg_z:  2.04<br />mpg_z:  2.04<br />car_name: 31","car_name: Fiat 128<br />y: 0<br />mpg_z:  2.04<br />mpg_z:  2.04<br />car_name: 31",null,"car_name: Toyota Corolla<br />y: 0<br />mpg_z:  2.29<br />mpg_z:  2.29<br />car_name: 32","car_name: Toyota Corolla<br />y: 0<br />mpg_z:  2.29<br />mpg_z:  2.29<br />car_name: 32"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,0,0,1)","dash":"solid"},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[-1.61,-1.61,-1.13,-0.96,-0.89,-0.84,-0.81,-0.81,-0.76,-0.71,-0.61,-0.46,-0.38,-0.33,-0.23,-0.15,-0.15,-0.06,0.15,0.15,0.22,0.22,0.23,0.45,0.45,0.72,0.98,1.2,1.71,1.71,2.04,2.29],"y":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"text":[-1.61,-1.61,-1.13,-0.96,-0.89,-0.84,-0.81,-0.81,-0.76,-0.71,-0.61,-0.46,-0.38,-0.33,-0.23,-0.15,-0.15,-0.06,0.15,0.15,0.22,0.22,0.23,0.45,0.45,0.72,0.98,1.2,1.71,1.71,2.04,2.29],"hovertext":["car_name: Cadillac Fleetwood<br />mpg_z: -1.61<br />mpg_z: -1.61","car_name: Lincoln Continental<br />mpg_z: -1.61<br />mpg_z: -1.61","car_name: Camaro Z28<br />mpg_z: -1.13<br />mpg_z: -1.13","car_name: Duster 360<br />mpg_z: -0.96<br />mpg_z: -0.96","car_name: Chrysler Imperial<br />mpg_z: -0.89<br />mpg_z: -0.89","car_name: Maserati Bora<br />mpg_z: -0.84<br />mpg_z: -0.84","car_name: Merc 450SLC<br />mpg_z: -0.81<br />mpg_z: -0.81","car_name: AMC Javelin<br />mpg_z: -0.81<br />mpg_z: -0.81","car_name: Dodge Challenger<br />mpg_z: -0.76<br />mpg_z: -0.76","car_name: Ford Pantera L<br />mpg_z: -0.71<br />mpg_z: -0.71","car_name: Merc 450SE<br />mpg_z: -0.61<br />mpg_z: -0.61","car_name: Merc 450SL<br />mpg_z: -0.46<br />mpg_z: -0.46","car_name: Merc 280C<br />mpg_z: -0.38<br />mpg_z: -0.38","car_name: Valiant<br />mpg_z: -0.33<br />mpg_z: -0.33","car_name: Hornet Sportabout<br />mpg_z: -0.23<br />mpg_z: -0.23","car_name: Merc 280<br />mpg_z: -0.15<br />mpg_z: -0.15","car_name: Pontiac Firebird<br />mpg_z: -0.15<br />mpg_z: -0.15","car_name: Ferrari Dino<br />mpg_z: -0.06<br />mpg_z: -0.06","car_name: Mazda RX4<br />mpg_z:  0.15<br />mpg_z:  0.15","car_name: Mazda RX4 Wag<br />mpg_z:  0.15<br />mpg_z:  0.15","car_name: Hornet 4 Drive<br />mpg_z:  0.22<br />mpg_z:  0.22","car_name: Volvo 142E<br />mpg_z:  0.22<br />mpg_z:  0.22","car_name: Toyota Corona<br />mpg_z:  0.23<br />mpg_z:  0.23","car_name: Datsun 710<br />mpg_z:  0.45<br />mpg_z:  0.45","car_name: Merc 230<br />mpg_z:  0.45<br />mpg_z:  0.45","car_name: Merc 240D<br />mpg_z:  0.72<br />mpg_z:  0.72","car_name: Porsche 914-2<br />mpg_z:  0.98<br />mpg_z:  0.98","car_name: Fiat X1-9<br />mpg_z:  1.20<br />mpg_z:  1.20","car_name: Honda Civic<br />mpg_z:  1.71<br />mpg_z:  1.71","car_name: Lotus Europa<br />mpg_z:  1.71<br />mpg_z:  1.71","car_name: Fiat 128<br />mpg_z:  2.04<br />mpg_z:  2.04","car_name: Toyota Corolla<br />mpg_z:  2.29<br />mpg_z:  2.29"],"textfont":{"size":7.55905511811024,"color":"rgba(255,255,255,1)"},"type":"scatter","mode":"text","hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":26.2283105022831,"r":7.30593607305936,"b":40.1826484018265,"l":136.62100456621},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-1.805,2.485],"tickmode":"array","ticktext":["-1","0","1","2"],"tickvals":[-1,0,1,2],"categoryorder":"array","categoryarray":["-1","0","1","2"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"mpg_z","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[0.4,32.6],"tickmode":"array","ticktext":["Cadillac Fleetwood","Lincoln Continental","Camaro Z28","Duster 360","Chrysler Imperial","Maserati Bora","Merc 450SLC","AMC Javelin","Dodge Challenger","Ford Pantera L","Merc 450SE","Merc 450SL","Merc 280C","Valiant","Hornet Sportabout","Merc 280","Pontiac Firebird","Ferrari Dino","Mazda RX4","Mazda RX4 Wag","Hornet 4 Drive","Volvo 142E","Toyota Corona","Datsun 710","Merc 230","Merc 240D","Porsche 914-2","Fiat X1-9","Honda Civic","Lotus Europa","Fiat 128","Toyota Corolla"],"tickvals":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"categoryorder":"array","categoryarray":["Cadillac Fleetwood","Lincoln Continental","Camaro Z28","Duster 360","Chrysler Imperial","Maserati Bora","Merc 450SLC","AMC Javelin","Dodge Challenger","Ford Pantera L","Merc 450SE","Merc 450SL","Merc 280C","Valiant","Hornet Sportabout","Merc 280","Pontiac Firebird","Ferrari Dino","Mazda RX4","Mazda RX4 Wag","Hornet 4 Drive","Volvo 142E","Toyota Corona","Datsun 710","Merc 230","Merc 240D","Porsche 914-2","Fiat X1-9","Honda Civic","Lotus Europa","Fiat 128","Toyota Corolla"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"car_name","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"3ac45aa81e7":{"x":{},"y":{},"label":{},"type":"scatter"},"3ac44cfb1eec":{"x":{},"y":{},"label":{},"yend":{},"xend":{}},"3ac46ead5eed":{"x":{},"y":{},"label":{}}},"cur_data":"3ac45aa81e7","visdat":{"3ac45aa81e7":["function (y) ","x"],"3ac44cfb1eec":["function (y) ","x"],"3ac46ead5eed":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>healthyr</category>
  <category>plots</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-02/index.html</guid>
  <pubDate>Thu, 02 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Attributes in R Functions: An Overview</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-01/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>R is a powerful programming language that is widely used for data analysis, visualization, and machine learning. One of the features of R that makes it versatile and flexible is the ability to assign attributes to functions. Attributes are metadata associated with an object in R, and they can be used to store additional information about the function or to modify the behavior of the function.</p>
<p>In this blog post, we will discuss what attributes are, how they can be useful, and how they can be used inside R functions.</p>
<section id="what-are-attributes-in-r-functions" class="level2">
<h2 class="anchored" data-anchor-id="what-are-attributes-in-r-functions">What are Attributes in R Functions?</h2>
<p>Attributes are pieces of information that are stored alongside an object in R. Functions are objects in R, and they can have attributes associated with them. Some of the common attributes associated with functions in R include:</p>
<ol type="1">
<li><code>formals</code>: This attribute stores the arguments of the function and their default values.</li>
<li><code>srcref</code>: This attribute stores the source code of the function, including the line numbers of the code.</li>
<li><code>environment</code>: This attribute stores the environment in which the function was defined.</li>
</ol>
</section>
<section id="how-attributes-can-be-useful-in-r-functions" class="level2">
<h2 class="anchored" data-anchor-id="how-attributes-can-be-useful-in-r-functions">How Attributes can be Useful in R Functions</h2>
<p>Attributes can be useful in R functions in several ways, including:</p>
<ol type="1">
<li>Debugging: Attributes can be used to store information that can be used to debug functions. For example, the srcref attribute can be used to retrieve the source code of the function and the line numbers of the code, which can be useful when trying to identify the source of an error.</li>
<li>Metadata: Attributes can be used to store metadata about the function, such as the author, version, and date of creation. This information can be used to keep track of the function and to provide information about its purpose and usage.</li>
<li>Modifying Function Behavior: Attributes can be used to modify the behavior of the function. For example, the environment attribute can be used to set the environment in which the function is executed. This can be useful when creating closures or when using functions in a specific context.</li>
</ol>
</section>
<section id="how-to-use-attributes-in-r-functions" class="level2">
<h2 class="anchored" data-anchor-id="how-to-use-attributes-in-r-functions">How to Use Attributes in R Functions</h2>
<p>To access or modify the attributes of a function in R, you can use the attributes() function. For example, to retrieve the formals attribute of a function, you can use the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">f <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x, y) { x <span class="sc" style="color: #5E5E5E;">+</span> y }</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">attributes</span>(f)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$srcref
function(x, y) { x + y }</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">formals</span>(f)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$x


$y</code></pre>
</div>
</div>
<p>To add an attribute to a function, you can use the attr() function. For example, to add a version attribute to a function, you can use the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">f <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x, y) { x <span class="sc" style="color: #5E5E5E;">+</span> y }</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">attr</span>(f, <span class="st" style="color: #20794D;">"version"</span>) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"1.0"</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;">attributes</span>(f)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$srcref
function(x, y) { x + y }

$version
[1] "1.0"</code></pre>
</div>
</div>
<p>To remove an attribute from a function, you can use the attributes() function with the NULL value. For example, to remove the version attribute from a function, you can use the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">f <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x, y) { x <span class="sc" style="color: #5E5E5E;">+</span> y }</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">attr</span>(f, <span class="st" style="color: #20794D;">"version"</span>) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"1.0"</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;">attributes</span>(f)<span class="sc" style="color: #5E5E5E;">$</span>version <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cn" style="color: #8f5902;">NULL</span></span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;">attributes</span>(f)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$srcref
function(x, y) { x + y }</code></pre>
</div>
</div>
<p>Conclusion</p>
<p>Attributes are a useful feature in R functions that can be used to store additional information about the function, to debug the function, and to modify its behavior. By using attributes, you can make your functions more versatile, flexible, and easier to work with.</p>
</section>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is a function from my <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> package that makes use of attributes that come in from the output of another function. The function is <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_brownian_motion_plot.html"><code>ts_brownian_motion_plot()</code></a>. Let’s go ahead and take a look at how the function works.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># ...</span></span>
<span id="cb9-2"></span>
<span id="cb9-3"> <span class="co" style="color: #5E5E5E;"># Attributes</span></span>
<span id="cb9-4">    atb <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">attributes</span>(.data)</span>
<span id="cb9-5">    </span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;"># ...</span></span>
<span id="cb9-7"></span>
<span id="cb9-8">ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb9-9">  <span class="at" style="color: #657422;">title =</span> atb<span class="sc" style="color: #5E5E5E;">$</span>.motion_type,</span>
<span id="cb9-10">  <span class="at" style="color: #657422;">subtitle =</span> <span class="fu" style="color: #4758AB;">paste0</span>(<span class="st" style="color: #20794D;">"Simulations: "</span>, atb<span class="sc" style="color: #5E5E5E;">$</span>.num_sims,</span>
<span id="cb9-11">                    <span class="st" style="color: #20794D;">" - Initial Value: "</span>, <span class="fu" style="color: #4758AB;">round</span>(atb<span class="sc" style="color: #5E5E5E;">$</span>.initial_value, <span class="dv" style="color: #AD0000;">2</span>),</span>
<span id="cb9-12">                    <span class="st" style="color: #20794D;">" - Delta Time: "</span>, <span class="fu" style="color: #4758AB;">round</span>(atb<span class="sc" style="color: #5E5E5E;">$</span>.delta_time, <span class="dv" style="color: #AD0000;">2</span>))</span>
<span id="cb9-13">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-14">ggplot2<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="cf" style="color: #003B4F;">if</span>(atb<span class="sc" style="color: #5E5E5E;">$</span>.num_sims <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">9</span>) {<span class="st" style="color: #20794D;">"none"</span>})</span></code></pre></div>
</div>
<p>So what’s happening here is that I am taking the attributes from the incoming data which is the result of a <code>{healthyR.ts}</code> brownian motion function and setting them equal to a variable <code>atb</code>, later in the function I take that <code>atb</code> variable and pluck out certain items I want from it.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>Let’s see an example in action.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># install.packages("healthyR.ts")</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb10-3"></span>
<span id="cb10-4">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts_brownian_motion</span>()</span>
<span id="cb10-5"></span>
<span id="cb10-6">atb <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">attributes</span>(df)</span>
<span id="cb10-7"></span>
<span id="cb10-8">atb[<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">names</span>(atb) <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="st" style="color: #20794D;">"row.names"</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$names
[1] "sim_number" "t"          "y"         

$class
[1] "tbl_df"     "tbl"        "data.frame"

$.time
[1] 100

$.num_sims
[1] 10

$.delta_time
[1] 1

$.initial_value
[1] 0

$.return_tibble
[1] TRUE

$.motion_type
[1] "Brownian Motion"</code></pre>
</div>
</div>
<p>Now to see the plat in action.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">ts_brownian_motion_plot</span>(df, t, y)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-02-01/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>metadata</category>
  <category>attributes</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-02-01/index.html</guid>
  <pubDate>Wed, 01 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Median: A Simple Way to Detect Excess Events Over Time with {healthyR}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-31/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>As we collect data over time, it’s important to look for patterns and trends that can help us understand what’s happening. One common way to do this is to look at the median of the data. The median is the middle value of a set of numbers, and it can be a useful tool for detecting whether there is an excess of events, either positive or negative, occurring over time.</p>
<p>Benefits of Looking at Median:</p>
<ol type="1">
<li><p>Shows the central tendency: The median gives us a good idea of the central tendency of the data. This can help us understand what’s typical and what’s not.</p></li>
<li><p>Resistant to outliers: Unlike the mean, the median is not affected by outliers. This means that if there are a few extreme values in the data, the median will not be skewed by them.</p></li>
<li><p>Easy to understand: The median is easy to understand, even for people who are not familiar with statistics.</p></li>
</ol>
<p>Using the R Library <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> provides a convenient way to perform median analysis. The function <a href="https://www.spsanderson.com/healthyR/reference/ts_median_excess_plt.html"><code>ts_median_excess_plt()</code></a> can be used to plot the median of an event over time and detect any excess events that may be occurring. This function is designed to be user-friendly, so even if you’re not an expert in statistics, you can still use it to gain valuable insights into your data.</p>
<p>In conclusion, looking at the median of an event over time can be a useful tool for detecting excess events, either positive or negative. The R library {healthyR} provides a convenient way to perform this analysis with the function <code>ts_median_excess_plt()</code>. Give it a try and see what insights you can uncover in your own data!</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_median_excess_plt</span>(</span>
<span id="cb1-2">  .data,</span>
<span id="cb1-3">  .date_col,</span>
<span id="cb1-4">  .value_col,</span>
<span id="cb1-5">  .x_axis,</span>
<span id="cb1-6">  .ggplot_group_var,</span>
<span id="cb1-7">  .years_back</span>
<span id="cb1-8">)</span></code></pre></div>
</div>
<p>Here are its arguments.</p>
<ul>
<li><code>.data</code> - The data that is being analyzed, data must be a tibble/data.frame.</li>
<li><code>.date_col</code> - The column of the tibble that holds the date.</li>
<li><code>.value_col</code> - The column that holds the value of interest.</li>
<li><code>.x_axis</code> - What is the be the x-axis, day, week, etc.</li>
<li><code>.ggplot_group_var</code> - The variable to group the ggplot on.</li>
<li><code>.years_back</code> - How many yeas back do you want to go in order to compute the median value.</li>
</ul>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>First make sure you have the package installed.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"healthyR"</span>)</span></code></pre></div>
</div>
<p>Now for an example. The data is required to be in a certain format, this function is dated, meaning it was one of the first ones I wrote so I will be taking time to improve it in the future. We are using data from my <a href="https://www.spsanderson.com/healthyR.data/"><code>{healthyR.data]</code>}</a> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.data)</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(lubridate)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;">library</span>(healthyR)</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;">library</span>(timetk)</span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;">library</span>(ggplot2)</span>
<span id="cb3-7"></span>
<span id="cb3-8">df <span class="ot" style="color: #003B4F;">&lt;-</span> healthyR_data <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;">filter_by_time</span>(</span>
<span id="cb3-10">    <span class="at" style="color: #657422;">.date_var =</span> visit_start_date_time,</span>
<span id="cb3-11">    <span class="at" style="color: #657422;">.start_date =</span> <span class="st" style="color: #20794D;">"2012"</span>,</span>
<span id="cb3-12">    <span class="at" style="color: #657422;">.end_date =</span> <span class="st" style="color: #20794D;">"2019"</span></span>
<span id="cb3-13">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;">filter</span>(ip_op_flag <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"I"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-15">  <span class="fu" style="color: #4758AB;">select</span>(visit_id, visit_start_date_time) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-16">  <span class="fu" style="color: #4758AB;">mutate</span>(</span>
<span id="cb3-17">    <span class="at" style="color: #657422;">visit_start_date_time =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(visit_start_date_time, <span class="st" style="color: #20794D;">"%Y%M%D"</span>),</span>
<span id="cb3-18">    <span class="at" style="color: #657422;">record =</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-19">    ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;">summarise_by_time</span>(</span>
<span id="cb3-21">    <span class="at" style="color: #657422;">.date_var =</span> visit_start_date_time,</span>
<span id="cb3-22">    <span class="at" style="color: #657422;">visits =</span> <span class="fu" style="color: #4758AB;">sum</span>(record)</span>
<span id="cb3-23">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-24">  <span class="fu" style="color: #4758AB;">ts_signature_tbl</span>(</span>
<span id="cb3-25">    <span class="at" style="color: #657422;">.date_col =</span> visit_start_date_time</span>
<span id="cb3-26">  )</span></code></pre></div>
</div>
<p>Ok now that we have our data, let’s take a look at it using <code>glimpse()</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">glimpse</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 2,922
Columns: 30
$ visit_start_date_time &lt;date&gt; 2012-01-01, 2012-01-02, 2012-01-03, 2012-01-04,…
$ visits                &lt;dbl&gt; 34, 52, 53, 44, 46, 55, 42, 29, 50, 55, 50, 43, …
$ index.num             &lt;dbl&gt; 1325376000, 1325462400, 1325548800, 1325635200, …
$ diff                  &lt;dbl&gt; NA, 86400, 86400, 86400, 86400, 86400, 86400, 86…
$ year                  &lt;int&gt; 2012, 2012, 2012, 2012, 2012, 2012, 2012, 2012, …
$ year.iso              &lt;int&gt; 2011, 2012, 2012, 2012, 2012, 2012, 2012, 2012, …
$ half                  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …
$ quarter               &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …
$ month                 &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …
$ month.xts             &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
$ month.lbl             &lt;ord&gt; January, January, January, January, January, Jan…
$ day                   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…
$ hour                  &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
$ minute                &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
$ second                &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
$ hour12                &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
$ am.pm                 &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …
$ wday                  &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, …
$ wday.xts              &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, …
$ wday.lbl              &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Thursday, Fr…
$ mday                  &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…
$ qday                  &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…
$ yday                  &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1…
$ mweek                 &lt;int&gt; 5, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, …
$ week                  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, …
$ week.iso              &lt;int&gt; 52, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3,…
$ week2                 &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, …
$ week3                 &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, …
$ week4                 &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, …
$ mday7                 &lt;int&gt; 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, …</code></pre>
</div>
</div>
<p>Now to visualize it.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">df <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">ts_median_excess_plt</span>(</span>
<span id="cb6-3">    <span class="at" style="color: #657422;">.date_col =</span> visit_start_date_time,</span>
<span id="cb6-4">    <span class="at" style="color: #657422;">.value_col =</span> visits,</span>
<span id="cb6-5">    <span class="at" style="color: #657422;">.x_axis =</span> month.lbl,</span>
<span id="cb6-6">    <span class="at" style="color: #657422;">.ggplot_group_var =</span> year,</span>
<span id="cb6-7">    <span class="at" style="color: #657422;">.years_back =</span> <span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb6-8">  ) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;">labs</span>(</span>
<span id="cb6-10">    <span class="at" style="color: #657422;">y =</span> <span class="st" style="color: #20794D;">"Excess Visits"</span>,</span>
<span id="cb6-11">    <span class="at" style="color: #657422;">title =</span> <span class="st" style="color: #20794D;">"Excess Visits by Month YoY"</span></span>
<span id="cb6-12">  ) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text.x=</span><span class="fu" style="color: #4758AB;">element_text</span>(<span class="at" style="color: #657422;">angle =</span> <span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">90</span>, <span class="at" style="color: #657422;">hjust =</span> <span class="dv" style="color: #AD0000;">0</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-31/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>So from here what we can see is that looking back in time over the visits data that the current year (the max year in the data) shows that it is significantly under previous years median values by month.</p>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <category>healthyr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-31/index.html</guid>
  <pubDate>Tue, 31 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>{healthyR.ts}: The New and Improved Library for Time Series Analysis</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-30/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Are you looking for a powerful and efficient library for time series analysis? Look no further than <a href="https:/www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a>! This library has recently been updated with new functions and improvements, making it easier for you to analyze and visualize your time series data.</p>
<p>One of the new functions in <a href="https:/www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> is <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_geometric_brownian_motion.html"><code>ts_geometric_brownian_motion()</code></a>. This function allows you to generate multiple Brownian motion simulations at once, saving you time and effort. With this feature, you can easily generate multiple simulations to compare and analyze different scenarios.</p>
<p>Another new function, <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_brownian_motion_augment.html"><code>ts_brownian_motion_augment()</code></a>, enables you to add a Brownian motion to a time series that you provide. This is a great tool for analyzing the impact of random variations on your data.</p>
<p>The <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_geometric_brownian_motion_augment.html"><code>ts_geometric_brownian_motion_augment()</code></a> function generates a geometric Brownian motion, allowing you to study the effects of compounding growth or decay in your time series data. And, with the <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_brownian_motion_plot.html"><code>ts_brownian_motion_plot()</code></a> function, you can easily plot both augmented and non-augmented Brownian motion plots, giving you a visual representation of your data.</p>
<p>In addition to the new functions, <a href="https:/www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> has also made several minor fixes and improvements. For example, the <a href="https://www.spsanderson.com/healthyR.ts/reference/ts_brownian_motion.html"><code>ts_brownian_motion()</code></a> function has been updated and optimized, resulting in a 49x speedup due to vectorization. Additionally, all Brownian motion functions now have an attribute of <code>.motion_type</code>, making it easier to track and identify your data.</p>
<p>With all of these new features and improvements, <a href="https:/www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> is the ideal library for anyone looking to analyze and visualize time series data. So, if you want to take your time series analysis to the next level, install <a href="https:/www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> today!</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the new functions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb1-3">  <span class="at" style="color: #657422;">.time =</span> <span class="dv" style="color: #AD0000;">25</span>,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.mean =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.sigma =</span> <span class="fl" style="color: #AD0000;">0.1</span>,</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.initial_value =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.delta_time =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">365</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.return_tibble =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb1-9">)</span></code></pre></div>
</div>
<p>Its arguments.</p>
<ul>
<li><code>.num_sims</code> - Total number of simulations.</li>
<li><code>.time</code> - Total time of the simulation.</li>
<li><code>.mean</code> - Expected return</li>
<li><code>.sigma</code> - Volatility</li>
<li><code>.initial_value</code> - Integer representing the initial value.</li>
<li><code>.delta_time</code> - Time step size.</li>
<li><code>.return_tibble</code> - The default is TRUE. If set to FALSE then an object of class matrix will be returned.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">ts_brownian_motion_augment</span>(</span>
<span id="cb2-2">  .data,</span>
<span id="cb2-3">  .date_col,</span>
<span id="cb2-4">  .value_col,</span>
<span id="cb2-5">  <span class="at" style="color: #657422;">.time =</span> <span class="dv" style="color: #AD0000;">100</span>,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">10</span>,</span>
<span id="cb2-7">  <span class="at" style="color: #657422;">.delta_time =</span> <span class="cn" style="color: #8f5902;">NULL</span></span>
<span id="cb2-8">)</span></code></pre></div>
</div>
<p>Its arguments.</p>
<ul>
<li><code>.data</code> - The data.frame/tibble being augmented.</li>
<li><code>.date_col</code> - The column that holds the date.</li>
<li><code>.value_col</code> - The value that is going to get augmented. The last value of this column becomes the initial value internally.</li>
<li><code>.time</code> - How many time steps ahead.</li>
<li><code>.num_sims</code> - How many simulations should be run.</li>
<li><code>.delta_time</code> - Time step size.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion_augment</span>(</span>
<span id="cb3-2">  .data,</span>
<span id="cb3-3">  .date_col,</span>
<span id="cb3-4">  .value_col,</span>
<span id="cb3-5">  <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">10</span>,</span>
<span id="cb3-6">  <span class="at" style="color: #657422;">.time =</span> <span class="dv" style="color: #AD0000;">25</span>,</span>
<span id="cb3-7">  <span class="at" style="color: #657422;">.mean =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb3-8">  <span class="at" style="color: #657422;">.sigma =</span> <span class="fl" style="color: #AD0000;">0.1</span>,</span>
<span id="cb3-9">  <span class="at" style="color: #657422;">.delta_time =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">365</span></span>
<span id="cb3-10">)</span></code></pre></div>
</div>
<p>Its arguments.</p>
<ul>
<li><code>.data</code> - The data you are going to pass to the function to augment.</li>
<li><code>.date_col</code> - The column that holds the date</li>
<li><code>.value_col</code> - The column that holds the value</li>
<li><code>.num_sims</code> - Total number of simulations.</li>
<li><code>.time</code> - Total time of the simulation.</li>
<li><code>.mean</code> - Expected return</li>
<li><code>.sigma</code> - Volatility</li>
<li><code>.delta_time</code> - Time step size.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">ts_brownian_motion_plot</span>(</span>
<span id="cb4-2">  .data, </span>
<span id="cb4-3">  .date_col, </span>
<span id="cb4-4">  .value_col, </span>
<span id="cb4-5">  <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb4-6">)</span></code></pre></div>
</div>
<p>Its arguments.</p>
<ul>
<li><code>.data</code> - The data you are going to pass to the function to augment.</li>
<li><code>.date_col</code> - The column that holds the date</li>
<li><code>.value_col</code> - The column that holds the value</li>
<li><code>.interactive</code> - The default is FALSE, TRUE will produce an interactive plotly plot.</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>First make sure you install <a href="https://www.spsanderson.com/healthyR.ts/"><code>{healthyR.ts}</code></a> if you do not yet already have it, otherwise update it to gain th enew functionality.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"healthyR.ts"</span>)</span></code></pre></div>
</div>
<p>Now let’s take a look at <code>ts_geometric_brownian_motion()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ts)</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 2,600 × 3
   sim_number        t     y
   &lt;fct&gt;         &lt;int&gt; &lt;dbl&gt;
 1 sim_number 1      1   100
 2 sim_number 2      1   100
 3 sim_number 3      1   100
 4 sim_number 4      1   100
 5 sim_number 5      1   100
 6 sim_number 6      1   100
 7 sim_number 7      1   100
 8 sim_number 8      1   100
 9 sim_number 9      1   100
10 sim_number 10     1   100
# … with 2,590 more rows</code></pre>
</div>
</div>
<p>Now let’s take a look at <code>ts_brownian_motion_augment()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">rn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">31</span>)</span>
<span id="cb8-2">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb8-3"><span class="at" style="color: #657422;">date_col =</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(<span class="at" style="color: #657422;">from =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-01-01"</span>),</span>
<span id="cb8-4">                      <span class="at" style="color: #657422;">to =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-01-31"</span>),</span>
<span id="cb8-5">                      <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"day"</span>),</span>
<span id="cb8-6"> <span class="at" style="color: #657422;">value =</span> rn</span>
<span id="cb8-7">)</span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="fu" style="color: #4758AB;">ts_brownian_motion_augment</span>(</span>
<span id="cb8-10">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb8-11">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb8-12">  <span class="at" style="color: #657422;">.value_col =</span> value</span>
<span id="cb8-13">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1,041 × 3
   sim_number  date_col    value
   &lt;fct&gt;       &lt;date&gt;      &lt;dbl&gt;
 1 actual_data 2022-01-01 -0.303
 2 actual_data 2022-01-02 -1.17 
 3 actual_data 2022-01-03 -1.44 
 4 actual_data 2022-01-04 -0.682
 5 actual_data 2022-01-05 -2.31 
 6 actual_data 2022-01-06 -1.19 
 7 actual_data 2022-01-07 -0.454
 8 actual_data 2022-01-08 -1.83 
 9 actual_data 2022-01-09  0.659
10 actual_data 2022-01-10 -0.150
# … with 1,031 more rows</code></pre>
</div>
</div>
<p>Now <code>ts_geometric_brownian_motion_augment()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">rn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">31</span>)</span>
<span id="cb10-2">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb10-3"><span class="at" style="color: #657422;">date_col =</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(<span class="at" style="color: #657422;">from =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-01-01"</span>),</span>
<span id="cb10-4">                      <span class="at" style="color: #657422;">to =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-01-31"</span>),</span>
<span id="cb10-5">                      <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"day"</span>),</span>
<span id="cb10-6"> <span class="at" style="color: #657422;">value =</span> rn</span>
<span id="cb10-7">)</span>
<span id="cb10-8"></span>
<span id="cb10-9"><span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion_augment</span>(</span>
<span id="cb10-10">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb10-11">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb10-12">  <span class="at" style="color: #657422;">.value_col =</span> value</span>
<span id="cb10-13">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 291 × 3
   sim_number  date_col    value
   &lt;fct&gt;       &lt;date&gt;      &lt;dbl&gt;
 1 actual_data 2022-01-01 -1.47 
 2 actual_data 2022-01-02 -1.63 
 3 actual_data 2022-01-03  1.01 
 4 actual_data 2022-01-04  1.44 
 5 actual_data 2022-01-05 -1.05 
 6 actual_data 2022-01-06 -0.599
 7 actual_data 2022-01-07 -0.393
 8 actual_data 2022-01-08  1.06 
 9 actual_data 2022-01-09 -0.121
10 actual_data 2022-01-10 -0.349
# … with 281 more rows</code></pre>
</div>
</div>
<p>Now for <code>ts_brownian_motion_plot()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">ts_geometric_brownian_motion</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;">ts_brownian_motion_plot</span>(<span class="at" style="color: #657422;">.date_col =</span> t, <span class="at" style="color: #657422;">.value_col =</span> y)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-30/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">ts_brownian_motion</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">ts_brownian_motion_plot</span>(t, y, <span class="at" style="color: #657422;">.interactive =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-e86972b08d0560da7c45" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-e86972b08d0560da7c45">{"x":{"data":[{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,1.2363187294214,2.37183639129078,3.7898810547307,4.43677897379124,3.34121895568476,4.07872565428723,3.42594639181003,4.03884017142835,3.49860733327056,3.57179740060708,3.69129597420667,3.26879820407356,4.27628257061192,3.94407100640492,3.47117084079407,3.3722140923099,2.34265089801254,3.88095736715544,3.32960311136399,2.98362075707009,3.35209489315558,2.44156840186272,2.57499855806229,3.7234273890659,3.65086587965989,4.41046152665955,5.56383830464581,5.39819480997969,6.50297863472238,7.12820680244605,6.2734775891667,5.4530156016529,5.52095964158515,5.71156925362651,4.80236513926042,3.84163488810364,3.62185629234773,4.03003766621372,5.41340801566914,4.5793652133629,4.21793703601878,4.09072987799269,3.46301059053026,0.625053901879091,0.239339228251185,1.47575852126262,0.871036926510241,0.165944452578215,-0.173892474764436,-1.229366275871,-1.33731816542413,-1.94235503712354,-1.24230686991079,-2.56099368095583,-3.9067146733365,-4.60873263085269,-5.54733407672463,-5.7335667417713,-3.71883649949053,-2.77467863102318,-1.99357301121777,-2.2200191789981,-1.03055337867293,-0.395698297066504,-0.924996587764163,-0.932763396344466,-0.0433120259812904,-0.47661305212748,-1.20431475807364,-0.860002050609173,-1.57362930745005,-1.10768460663175,-1.12821371044474,-1.31776643993247,-1.84082673710916,-2.86795096766938,-3.34712765303344,-3.21144430579683,-1.86341304756078,-1.71864815934778,0.376532981448807,1.8424174891273,1.61497178716265,0.209574177638641,0.746570696230856,0.757388945193649,0.902955446364063,1.30346514752368,1.72412815265147,2.60427314273436,3.02208352117925,2.9291493198013,3.4470561461598,4.65798609938248,5.21247805708218,4.4116100904667,5.74774703592527,6.26934388571134,7.28899840967492,7.30419003180048],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   2<br />y:   1.23631873<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   3<br />y:   2.37183639<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   4<br />y:   3.78988105<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   5<br />y:   4.43677897<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   6<br />y:   3.34121896<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   7<br />y:   4.07872565<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   8<br />y:   3.42594639<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:   9<br />y:   4.03884017<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  10<br />y:   3.49860733<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  11<br />y:   3.57179740<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  12<br />y:   3.69129597<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  13<br />y:   3.26879820<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  14<br />y:   4.27628257<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  15<br />y:   3.94407101<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  16<br />y:   3.47117084<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  17<br />y:   3.37221409<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  18<br />y:   2.34265090<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  19<br />y:   3.88095737<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  20<br />y:   3.32960311<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  21<br />y:   2.98362076<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  22<br />y:   3.35209489<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  23<br />y:   2.44156840<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  24<br />y:   2.57499856<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  25<br />y:   3.72342739<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  26<br />y:   3.65086588<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  27<br />y:   4.41046153<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  28<br />y:   5.56383830<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  29<br />y:   5.39819481<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  30<br />y:   6.50297863<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  31<br />y:   7.12820680<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  32<br />y:   6.27347759<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  33<br />y:   5.45301560<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  34<br />y:   5.52095964<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  35<br />y:   5.71156925<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  36<br />y:   4.80236514<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  37<br />y:   3.84163489<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  38<br />y:   3.62185629<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  39<br />y:   4.03003767<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  40<br />y:   5.41340802<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  41<br />y:   4.57936521<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  42<br />y:   4.21793704<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  43<br />y:   4.09072988<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  44<br />y:   3.46301059<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  45<br />y:   0.62505390<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  46<br />y:   0.23933923<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  47<br />y:   1.47575852<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  48<br />y:   0.87103693<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  49<br />y:   0.16594445<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  50<br />y:  -0.17389247<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  51<br />y:  -1.22936628<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  52<br />y:  -1.33731817<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  53<br />y:  -1.94235504<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  54<br />y:  -1.24230687<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  55<br />y:  -2.56099368<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  56<br />y:  -3.90671467<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  57<br />y:  -4.60873263<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  58<br />y:  -5.54733408<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  59<br />y:  -5.73356674<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  60<br />y:  -3.71883650<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  61<br />y:  -2.77467863<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  62<br />y:  -1.99357301<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  63<br />y:  -2.22001918<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  64<br />y:  -1.03055338<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  65<br />y:  -0.39569830<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  66<br />y:  -0.92499659<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  67<br />y:  -0.93276340<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  68<br />y:  -0.04331203<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  69<br />y:  -0.47661305<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  70<br />y:  -1.20431476<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  71<br />y:  -0.86000205<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  72<br />y:  -1.57362931<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  73<br />y:  -1.10768461<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  74<br />y:  -1.12821371<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  75<br />y:  -1.31776644<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  76<br />y:  -1.84082674<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  77<br />y:  -2.86795097<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  78<br />y:  -3.34712765<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  79<br />y:  -3.21144431<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  80<br />y:  -1.86341305<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  81<br />y:  -1.71864816<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  82<br />y:   0.37653298<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  83<br />y:   1.84241749<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  84<br />y:   1.61497179<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  85<br />y:   0.20957418<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  86<br />y:   0.74657070<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  87<br />y:   0.75738895<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  88<br />y:   0.90295545<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  89<br />y:   1.30346515<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  90<br />y:   1.72412815<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  91<br />y:   2.60427314<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  92<br />y:   3.02208352<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  93<br />y:   2.92914932<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  94<br />y:   3.44705615<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  95<br />y:   4.65798610<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  96<br />y:   5.21247806<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  97<br />y:   4.41161009<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  98<br />y:   5.74774704<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t:  99<br />y:   6.26934389<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 100<br />y:   7.28899841<br />sim_number: sim_number 1<br />sim_number: sim_number 1","t: 101<br />y:   7.30419003<br />sim_number: sim_number 1<br />sim_number: sim_number 1"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"sim_number 1","legendgroup":"sim_number 1","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,-1.62251236877937,-1.52234353265334,-1.24836864162097,-2.21650399913947,-4.47346825434754,-6.31174998953636,-5.80727848776566,-6.14467131882565,-6.21078216989189,-7.38780821574198,-5.88507829615363,-5.76732190248292,-6.62839225886376,-4.84866767533979,-3.90975951582615,-3.33506204629773,-3.10028732253531,-3.48274553256749,-3.58726447972236,-4.94057961951981,-3.31444626860158,-3.01786865632787,-2.78324223348599,-2.48996116700482,-4.50816027202169,-4.96488914394922,-4.35299450355693,-4.27727224902214,-3.68861558945167,-4.59482064827243,-4.83111010053106,-3.42297919815026,-2.14692530668498,-1.36262772266276,-3.19175465635385,-3.95912902805577,-3.24482123926233,-2.92593451319581,-2.07121365103104,-1.99381209337132,-1.2804270963188,-1.32339803432205,-0.105127777215829,0.0485125682972144,-1.054702476388,-0.919614845851092,0.0177299453742982,1.78475485802843,0.846471232348084,1.01295981608791,1.64437110632765,1.81483134032153,2.52162574736579,4.53306878199438,4.55672494671371,5.86876634402543,7.56792050644376,8.0944907274777,7.10275122261761,6.81214203602055,6.56437916248551,6.57726368390918,3.9030400988127,4.33629791802597,5.49450667708322,5.29963179630899,5.20431251045375,5.08228634888185,4.29565633543033,4.34167212471369,3.29016607687101,2.67677658407461,2.77328454468517,1.92069580561001,2.42483066136914,2.07955126922123,2.58150656952302,2.9063926259665,1.15301983439395,2.01693397875099,1.50067762842659,0.886533855037801,0.37222229805449,0.57308385449129,-1.04494819438852,1.14694505378548,0.555897836894005,-1.14691930667461,0.406799337705817,2.86405606924661,2.40587523749003,1.03725336975045,1.42046718962207,1.5829375980231,2.21025666377999,2.01783119718462,0.656490515108741,1.16947870592744,2.05710989124194,-0.0741196681487406],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   2<br />y:  -1.62251237<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   3<br />y:  -1.52234353<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   4<br />y:  -1.24836864<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   5<br />y:  -2.21650400<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   6<br />y:  -4.47346825<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   7<br />y:  -6.31174999<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   8<br />y:  -5.80727849<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:   9<br />y:  -6.14467132<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  10<br />y:  -6.21078217<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  11<br />y:  -7.38780822<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  12<br />y:  -5.88507830<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  13<br />y:  -5.76732190<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  14<br />y:  -6.62839226<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  15<br />y:  -4.84866768<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  16<br />y:  -3.90975952<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  17<br />y:  -3.33506205<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  18<br />y:  -3.10028732<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  19<br />y:  -3.48274553<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  20<br />y:  -3.58726448<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  21<br />y:  -4.94057962<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  22<br />y:  -3.31444627<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  23<br />y:  -3.01786866<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  24<br />y:  -2.78324223<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  25<br />y:  -2.48996117<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  26<br />y:  -4.50816027<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  27<br />y:  -4.96488914<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  28<br />y:  -4.35299450<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  29<br />y:  -4.27727225<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  30<br />y:  -3.68861559<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  31<br />y:  -4.59482065<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  32<br />y:  -4.83111010<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  33<br />y:  -3.42297920<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  34<br />y:  -2.14692531<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  35<br />y:  -1.36262772<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  36<br />y:  -3.19175466<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  37<br />y:  -3.95912903<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  38<br />y:  -3.24482124<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  39<br />y:  -2.92593451<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  40<br />y:  -2.07121365<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  41<br />y:  -1.99381209<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  42<br />y:  -1.28042710<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  43<br />y:  -1.32339803<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  44<br />y:  -0.10512778<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  45<br />y:   0.04851257<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  46<br />y:  -1.05470248<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  47<br />y:  -0.91961485<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  48<br />y:   0.01772995<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  49<br />y:   1.78475486<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  50<br />y:   0.84647123<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  51<br />y:   1.01295982<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  52<br />y:   1.64437111<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  53<br />y:   1.81483134<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  54<br />y:   2.52162575<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  55<br />y:   4.53306878<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  56<br />y:   4.55672495<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  57<br />y:   5.86876634<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  58<br />y:   7.56792051<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  59<br />y:   8.09449073<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  60<br />y:   7.10275122<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  61<br />y:   6.81214204<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  62<br />y:   6.56437916<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  63<br />y:   6.57726368<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  64<br />y:   3.90304010<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  65<br />y:   4.33629792<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  66<br />y:   5.49450668<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  67<br />y:   5.29963180<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  68<br />y:   5.20431251<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  69<br />y:   5.08228635<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  70<br />y:   4.29565634<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  71<br />y:   4.34167212<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  72<br />y:   3.29016608<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  73<br />y:   2.67677658<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  74<br />y:   2.77328454<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  75<br />y:   1.92069581<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  76<br />y:   2.42483066<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  77<br />y:   2.07955127<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  78<br />y:   2.58150657<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  79<br />y:   2.90639263<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  80<br />y:   1.15301983<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  81<br />y:   2.01693398<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  82<br />y:   1.50067763<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  83<br />y:   0.88653386<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  84<br />y:   0.37222230<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  85<br />y:   0.57308385<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  86<br />y:  -1.04494819<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  87<br />y:   1.14694505<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  88<br />y:   0.55589784<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  89<br />y:  -1.14691931<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  90<br />y:   0.40679934<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  91<br />y:   2.86405607<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  92<br />y:   2.40587524<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  93<br />y:   1.03725337<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  94<br />y:   1.42046719<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  95<br />y:   1.58293760<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  96<br />y:   2.21025666<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  97<br />y:   2.01783120<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  98<br />y:   0.65649052<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t:  99<br />y:   1.16947871<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 100<br />y:   2.05710989<br />sim_number: sim_number 2<br />sim_number: sim_number 2","t: 101<br />y:  -0.07411967<br />sim_number: sim_number 2<br />sim_number: sim_number 2"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(216,144,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 2","legendgroup":"sim_number 2","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,0.406535125154965,1.77416198884182,2.64017606638556,2.27962157853606,1.45762278048038,3.30184508471676,5.59008088528583,6.28133153028864,6.21205981271001,6.02754580957258,6.44742368286975,5.75773233182131,4.39716878216856,3.12879189641944,4.0625029802073,3.85183764484234,2.96616855799182,3.05439567576031,3.66672701226207,3.14392431401146,1.89861336261169,1.99229224130253,1.87868975480371,3.9813493016928,4.96970999101655,5.23703408922293,7.41834961219751,7.13415766815402,7.558143199439,7.6464065398824,5.73371924144132,5.50301955470587,4.75261192002872,4.56216673336176,4.8011695683837,4.17842560267571,3.50995395615704,3.69894646828193,2.88031693972913,3.02621342656591,2.89363062769891,2.04678589440253,2.12225181962053,2.58043212349415,3.44276431773879,3.3364940490602,4.88331152103503,4.25331789722143,3.7027259922342,5.21921491841909,5.25659453983105,4.54098368575037,3.82585635363776,4.6068917506945,4.89118650560871,6.53784140142687,7.82822617832921,8.21958080270631,9.57892077261567,8.91861685102244,7.41366095545524,7.61908746544318,6.95168984013566,7.18419641196424,4.51517303902972,4.36091079783246,4.0230347868295,3.53196151531459,2.02297125431834,2.36573651956077,4.06744452260845,3.6409766988322,4.05931877263274,2.85669592185051,1.73387238288137,2.77537342131008,3.96897856943565,3.67816141978849,4.86755329523197,5.00376490043127,4.59349719291083,3.89334990325469,4.96136064158858,6.454198929095,7.00230775031589,4.89655031303487,4.2907278717212,4.80454178563472,5.24703250899896,4.59135616460069,5.82799473354902,6.10667784482777,6.97646359963759,6.38056100635674,6.75709622952281,6.34219158367597,5.89708206317574,6.58041795732136,8.10797343350738,9.13428207530939],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   2<br />y:   0.40653513<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   3<br />y:   1.77416199<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   4<br />y:   2.64017607<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   5<br />y:   2.27962158<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   6<br />y:   1.45762278<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   7<br />y:   3.30184508<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   8<br />y:   5.59008089<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:   9<br />y:   6.28133153<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  10<br />y:   6.21205981<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  11<br />y:   6.02754581<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  12<br />y:   6.44742368<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  13<br />y:   5.75773233<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  14<br />y:   4.39716878<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  15<br />y:   3.12879190<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  16<br />y:   4.06250298<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  17<br />y:   3.85183764<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  18<br />y:   2.96616856<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  19<br />y:   3.05439568<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  20<br />y:   3.66672701<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  21<br />y:   3.14392431<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  22<br />y:   1.89861336<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  23<br />y:   1.99229224<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  24<br />y:   1.87868975<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  25<br />y:   3.98134930<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  26<br />y:   4.96970999<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  27<br />y:   5.23703409<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  28<br />y:   7.41834961<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  29<br />y:   7.13415767<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  30<br />y:   7.55814320<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  31<br />y:   7.64640654<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  32<br />y:   5.73371924<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  33<br />y:   5.50301955<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  34<br />y:   4.75261192<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  35<br />y:   4.56216673<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  36<br />y:   4.80116957<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  37<br />y:   4.17842560<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  38<br />y:   3.50995396<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  39<br />y:   3.69894647<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  40<br />y:   2.88031694<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  41<br />y:   3.02621343<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  42<br />y:   2.89363063<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  43<br />y:   2.04678589<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  44<br />y:   2.12225182<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  45<br />y:   2.58043212<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  46<br />y:   3.44276432<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  47<br />y:   3.33649405<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  48<br />y:   4.88331152<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  49<br />y:   4.25331790<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  50<br />y:   3.70272599<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  51<br />y:   5.21921492<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  52<br />y:   5.25659454<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  53<br />y:   4.54098369<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  54<br />y:   3.82585635<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  55<br />y:   4.60689175<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  56<br />y:   4.89118651<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  57<br />y:   6.53784140<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  58<br />y:   7.82822618<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  59<br />y:   8.21958080<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  60<br />y:   9.57892077<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  61<br />y:   8.91861685<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  62<br />y:   7.41366096<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  63<br />y:   7.61908747<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  64<br />y:   6.95168984<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  65<br />y:   7.18419641<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  66<br />y:   4.51517304<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  67<br />y:   4.36091080<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  68<br />y:   4.02303479<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  69<br />y:   3.53196152<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  70<br />y:   2.02297125<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  71<br />y:   2.36573652<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  72<br />y:   4.06744452<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  73<br />y:   3.64097670<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  74<br />y:   4.05931877<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  75<br />y:   2.85669592<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  76<br />y:   1.73387238<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  77<br />y:   2.77537342<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  78<br />y:   3.96897857<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  79<br />y:   3.67816142<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  80<br />y:   4.86755330<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  81<br />y:   5.00376490<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  82<br />y:   4.59349719<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  83<br />y:   3.89334990<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  84<br />y:   4.96136064<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  85<br />y:   6.45419893<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  86<br />y:   7.00230775<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  87<br />y:   4.89655031<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  88<br />y:   4.29072787<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  89<br />y:   4.80454179<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  90<br />y:   5.24703251<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  91<br />y:   4.59135616<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  92<br />y:   5.82799473<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  93<br />y:   6.10667784<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  94<br />y:   6.97646360<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  95<br />y:   6.38056101<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  96<br />y:   6.75709623<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  97<br />y:   6.34219158<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  98<br />y:   5.89708206<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t:  99<br />y:   6.58041796<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 100<br />y:   8.10797343<br />sim_number: sim_number 3<br />sim_number: sim_number 3","t: 101<br />y:   9.13428208<br />sim_number: sim_number 3<br />sim_number: sim_number 3"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(163,165,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 3","legendgroup":"sim_number 3","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,-0.978930308558004,-1.70727786712281,-1.10014522463577,0.286056343119767,-1.22069385327846,-0.279918609933833,-1.92586912867621,-1.17945047896999,-1.46253775308841,-0.541543599722013,-0.911835884029752,-1.30770224854055,-0.614254389831703,1.03075663825676,-0.127684704357399,-0.425501923863111,-0.636089702587627,1.63187408583743,0.75012971358899,1.51436770719811,-0.365755728248676,0.323067460458319,0.537209379310877,3.01603392576933,2.1252515337097,2.69757497977095,1.97397332356914,1.19303775456417,1.72375950117387,-0.776422682229318,-1.3309552830198,-1.55317594683377,-2.94173833453996,-4.10832098625014,-5.09959036426426,-4.54511633240662,-3.91805050220942,-4.34386241083574,-5.83601105528947,-5.42552361930579,-6.45404768787849,-6.4823664602821,-4.55118366061663,-3.46045257591331,-2.12461620426449,-3.08181381333815,-2.46281960029467,-2.99230563466149,-3.8747908372413,-3.18021922097119,-2.65561670083873,-1.08464797707329,-0.228973249070973,-0.583809961504509,-0.282138585773671,-0.642847624861205,-0.616387754532615,0.671755845453507,0.512768719470306,0.28927994218709,0.0670705772985413,2.21071813943956,1.99765650894274,1.64016698778204,1.60603151593036,1.96735732642531,1.57855918935229,1.14292243090501,1.91687851219463,0.705037760310711,-0.752894410402976,-1.45141746058398,-2.29739901290913,-3.83784400031628,-4.18802361470146,-3.14355083709641,-2.87543981792803,-3.45328612075056,-3.30486105121149,-2.97623732552675,-4.42360470377904,-5.26264908185101,-4.98451513785354,-4.29887028874411,-5.00462760293822,-5.39347345972388,-4.68062223409703,-5.75178620436056,-5.72941840188343,-3.46234868092776,-2.73386641181331,-3.10131147705874,-5.39151042517764,-7.55248351452074,-6.13460380298925,-7.14225380777987,-7.23488221606612,-5.91157105959233,-6.75496849122746,-5.92153859501927],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   2<br />y:  -0.97893031<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   3<br />y:  -1.70727787<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   4<br />y:  -1.10014522<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   5<br />y:   0.28605634<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   6<br />y:  -1.22069385<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   7<br />y:  -0.27991861<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   8<br />y:  -1.92586913<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:   9<br />y:  -1.17945048<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  10<br />y:  -1.46253775<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  11<br />y:  -0.54154360<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  12<br />y:  -0.91183588<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  13<br />y:  -1.30770225<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  14<br />y:  -0.61425439<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  15<br />y:   1.03075664<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  16<br />y:  -0.12768470<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  17<br />y:  -0.42550192<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  18<br />y:  -0.63608970<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  19<br />y:   1.63187409<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  20<br />y:   0.75012971<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  21<br />y:   1.51436771<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  22<br />y:  -0.36575573<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  23<br />y:   0.32306746<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  24<br />y:   0.53720938<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  25<br />y:   3.01603393<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  26<br />y:   2.12525153<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  27<br />y:   2.69757498<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  28<br />y:   1.97397332<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  29<br />y:   1.19303775<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  30<br />y:   1.72375950<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  31<br />y:  -0.77642268<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  32<br />y:  -1.33095528<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  33<br />y:  -1.55317595<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  34<br />y:  -2.94173833<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  35<br />y:  -4.10832099<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  36<br />y:  -5.09959036<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  37<br />y:  -4.54511633<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  38<br />y:  -3.91805050<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  39<br />y:  -4.34386241<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  40<br />y:  -5.83601106<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  41<br />y:  -5.42552362<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  42<br />y:  -6.45404769<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  43<br />y:  -6.48236646<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  44<br />y:  -4.55118366<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  45<br />y:  -3.46045258<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  46<br />y:  -2.12461620<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  47<br />y:  -3.08181381<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  48<br />y:  -2.46281960<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  49<br />y:  -2.99230563<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  50<br />y:  -3.87479084<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  51<br />y:  -3.18021922<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  52<br />y:  -2.65561670<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  53<br />y:  -1.08464798<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  54<br />y:  -0.22897325<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  55<br />y:  -0.58380996<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  56<br />y:  -0.28213859<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  57<br />y:  -0.64284762<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  58<br />y:  -0.61638775<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  59<br />y:   0.67175585<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  60<br />y:   0.51276872<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  61<br />y:   0.28927994<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  62<br />y:   0.06707058<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  63<br />y:   2.21071814<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  64<br />y:   1.99765651<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  65<br />y:   1.64016699<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  66<br />y:   1.60603152<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  67<br />y:   1.96735733<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  68<br />y:   1.57855919<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  69<br />y:   1.14292243<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  70<br />y:   1.91687851<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  71<br />y:   0.70503776<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  72<br />y:  -0.75289441<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  73<br />y:  -1.45141746<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  74<br />y:  -2.29739901<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  75<br />y:  -3.83784400<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  76<br />y:  -4.18802361<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  77<br />y:  -3.14355084<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  78<br />y:  -2.87543982<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  79<br />y:  -3.45328612<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  80<br />y:  -3.30486105<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  81<br />y:  -2.97623733<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  82<br />y:  -4.42360470<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  83<br />y:  -5.26264908<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  84<br />y:  -4.98451514<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  85<br />y:  -4.29887029<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  86<br />y:  -5.00462760<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  87<br />y:  -5.39347346<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  88<br />y:  -4.68062223<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  89<br />y:  -5.75178620<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  90<br />y:  -5.72941840<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  91<br />y:  -3.46234868<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  92<br />y:  -2.73386641<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  93<br />y:  -3.10131148<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  94<br />y:  -5.39151043<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  95<br />y:  -7.55248351<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  96<br />y:  -6.13460380<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  97<br />y:  -7.14225381<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  98<br />y:  -7.23488222<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t:  99<br />y:  -5.91157106<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 100<br />y:  -6.75496849<br />sim_number: sim_number 4<br />sim_number: sim_number 4","t: 101<br />y:  -5.92153860<br />sim_number: sim_number 4<br />sim_number: sim_number 4"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(57,182,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 4","legendgroup":"sim_number 4","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,-0.345669108806716,0.279765783485832,0.976844867598893,1.97837690068351,0.366158964587586,1.3721447463878,1.54568396553084,0.632123763352261,1.21851138604921,1.651259032465,2.23522080078604,2.81264039453979,2.04017375066828,2.73347791944067,2.17478473374348,3.80647204155435,3.98180505040634,4.53792529649914,4.84507965979578,4.20455171036708,4.62987651850272,3.72830740811095,3.49979702120472,3.26924382764608,4.10836042882053,4.31970531981955,2.86915189486865,2.10406070407452,1.21201410964688,2.00271918786488,2.74437177939191,2.45533289566813,1.56771971533613,0.570875303708219,0.967385115560887,2.648160618541,2.68276588607224,2.63133748507749,1.12907391813839,0.863770392248768,1.81166771427548,1.27798922758785,-0.342027592236281,-1.3584240931022,-2.15941988534758,-3.58294534035791,-2.32684038753843,-2.15140390433122,-4.11723184048217,-4.68173725030885,-5.09628171708778,-4.73033808398485,-4.74443519116938,-4.37727267433862,-4.91296107601443,-5.26163685261371,-5.33961009552378,-4.75878311816858,-6.49957923962444,-6.47115339027072,-5.21190574689215,-4.96548733638444,-5.27552796289323,-4.57021315366463,-3.94790192183973,-3.2994184752536,-1.75520322776965,-2.40475497842108,-4.54473529219602,-3.92567715399853,-4.07343982281286,-4.18853146916872,-3.73798362221216,-4.36432774801851,-4.38933687616788,-5.03495274521437,-5.47075042725405,-7.41856935622542,-7.2216476848918,-7.35108466861464,-5.91864070961986,-4.79563054721056,-4.92280441115923,-4.61811511772054,-4.74129310968317,-3.13901569255255,-3.6902184141122,-3.73463639795442,-2.21093564019644,-4.15954576186439,-4.26418365813134,-4.04584217024191,-3.29547725154986,-3.69059364994022,-2.09703165772486,-2.03915800160834,-1.41203226031299,-1.90950486196138,-0.400974429251977,-0.349212300379635],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   2<br />y:  -0.34566911<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   3<br />y:   0.27976578<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   4<br />y:   0.97684487<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   5<br />y:   1.97837690<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   6<br />y:   0.36615896<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   7<br />y:   1.37214475<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   8<br />y:   1.54568397<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:   9<br />y:   0.63212376<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  10<br />y:   1.21851139<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  11<br />y:   1.65125903<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  12<br />y:   2.23522080<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  13<br />y:   2.81264039<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  14<br />y:   2.04017375<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  15<br />y:   2.73347792<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  16<br />y:   2.17478473<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  17<br />y:   3.80647204<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  18<br />y:   3.98180505<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  19<br />y:   4.53792530<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  20<br />y:   4.84507966<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  21<br />y:   4.20455171<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  22<br />y:   4.62987652<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  23<br />y:   3.72830741<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  24<br />y:   3.49979702<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  25<br />y:   3.26924383<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  26<br />y:   4.10836043<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  27<br />y:   4.31970532<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  28<br />y:   2.86915189<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  29<br />y:   2.10406070<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  30<br />y:   1.21201411<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  31<br />y:   2.00271919<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  32<br />y:   2.74437178<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  33<br />y:   2.45533290<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  34<br />y:   1.56771972<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  35<br />y:   0.57087530<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  36<br />y:   0.96738512<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  37<br />y:   2.64816062<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  38<br />y:   2.68276589<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  39<br />y:   2.63133749<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  40<br />y:   1.12907392<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  41<br />y:   0.86377039<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  42<br />y:   1.81166771<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  43<br />y:   1.27798923<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  44<br />y:  -0.34202759<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  45<br />y:  -1.35842409<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  46<br />y:  -2.15941989<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  47<br />y:  -3.58294534<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  48<br />y:  -2.32684039<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  49<br />y:  -2.15140390<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  50<br />y:  -4.11723184<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  51<br />y:  -4.68173725<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  52<br />y:  -5.09628172<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  53<br />y:  -4.73033808<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  54<br />y:  -4.74443519<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  55<br />y:  -4.37727267<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  56<br />y:  -4.91296108<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  57<br />y:  -5.26163685<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  58<br />y:  -5.33961010<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  59<br />y:  -4.75878312<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  60<br />y:  -6.49957924<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  61<br />y:  -6.47115339<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  62<br />y:  -5.21190575<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  63<br />y:  -4.96548734<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  64<br />y:  -5.27552796<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  65<br />y:  -4.57021315<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  66<br />y:  -3.94790192<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  67<br />y:  -3.29941848<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  68<br />y:  -1.75520323<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  69<br />y:  -2.40475498<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  70<br />y:  -4.54473529<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  71<br />y:  -3.92567715<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  72<br />y:  -4.07343982<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  73<br />y:  -4.18853147<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  74<br />y:  -3.73798362<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  75<br />y:  -4.36432775<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  76<br />y:  -4.38933688<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  77<br />y:  -5.03495275<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  78<br />y:  -5.47075043<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  79<br />y:  -7.41856936<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  80<br />y:  -7.22164768<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  81<br />y:  -7.35108467<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  82<br />y:  -5.91864071<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  83<br />y:  -4.79563055<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  84<br />y:  -4.92280441<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  85<br />y:  -4.61811512<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  86<br />y:  -4.74129311<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  87<br />y:  -3.13901569<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  88<br />y:  -3.69021841<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  89<br />y:  -3.73463640<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  90<br />y:  -2.21093564<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  91<br />y:  -4.15954576<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  92<br />y:  -4.26418366<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  93<br />y:  -4.04584217<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  94<br />y:  -3.29547725<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  95<br />y:  -3.69059365<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  96<br />y:  -2.09703166<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  97<br />y:  -2.03915800<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  98<br />y:  -1.41203226<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t:  99<br />y:  -1.90950486<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 100<br />y:  -0.40097443<br />sim_number: sim_number 5<br />sim_number: sim_number 5","t: 101<br />y:  -0.34921230<br />sim_number: sim_number 5<br />sim_number: sim_number 5"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,191,125,1)","dash":"solid"},"hoveron":"points","name":"sim_number 5","legendgroup":"sim_number 5","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,0.0984373004040069,0.618356112899538,0.125461999685738,-1.06379891300753,-2.27492363777333,-3.75732930116941,-4.55104980491356,-3.91075817171352,-5.30511062644084,-5.78274590480029,-6.68450366078996,-7.89227731565374,-6.2968342648629,-5.33706007646655,-5.99862921087282,-7.43393523257097,-6.92397360981601,-6.50422834184938,-7.74480206676252,-8.69752483143693,-7.28239852467207,-8.33406658776879,-8.00287195479292,-8.19580482716544,-8.58942775893865,-9.66024124560196,-11.075371110479,-12.0425695173222,-12.7047052618319,-11.1402192146316,-11.3485236496461,-11.0584415539438,-10.8746808037496,-10.5049302294053,-9.95764926559609,-9.65109268829925,-9.87883525278499,-10.0911469657957,-8.94404634414514,-8.54096030402168,-8.42160372598725,-8.72123453950235,-8.76925299080873,-9.26942321381134,-9.76265028147868,-10.9941679723943,-11.505844680216,-12.162499945899,-12.3911615702453,-13.6969904795274,-13.8380055266489,-15.1816736859108,-15.3667919053995,-15.311221721825,-15.8087304789661,-17.5101012374083,-17.0067447587744,-17.1939986898223,-17.2218987573135,-17.2033052739301,-17.5733247052609,-16.6901645935682,-16.2545701600925,-16.4758485055817,-17.5188998119685,-17.8654810997765,-18.4834214272556,-19.1642063383628,-18.8272868724008,-20.3730862571056,-20.884613223801,-22.1094241793199,-22.1444683306704,-23.2325545269357,-24.3948708765981,-23.9194370762208,-23.8034972201032,-23.4072191886378,-24.4267263235349,-23.678702475185,-24.3178640235131,-24.3750834112774,-23.1382232109388,-22.2106350912457,-20.975171470083,-20.8384409776466,-22.0367509165478,-19.6724434442391,-19.4970932731491,-19.8002994492396,-20.2097606906368,-19.6697468979824,-20.6423837150147,-19.6158621531968,-19.8452782774572,-21.3803403429026,-21.082135208293,-22.0795640723447,-21.9604102553994,-22.8758153421208],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   2<br />y:   0.09843730<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   3<br />y:   0.61835611<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   4<br />y:   0.12546200<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   5<br />y:  -1.06379891<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   6<br />y:  -2.27492364<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   7<br />y:  -3.75732930<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   8<br />y:  -4.55104980<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:   9<br />y:  -3.91075817<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  10<br />y:  -5.30511063<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  11<br />y:  -5.78274590<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  12<br />y:  -6.68450366<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  13<br />y:  -7.89227732<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  14<br />y:  -6.29683426<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  15<br />y:  -5.33706008<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  16<br />y:  -5.99862921<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  17<br />y:  -7.43393523<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  18<br />y:  -6.92397361<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  19<br />y:  -6.50422834<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  20<br />y:  -7.74480207<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  21<br />y:  -8.69752483<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  22<br />y:  -7.28239852<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  23<br />y:  -8.33406659<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  24<br />y:  -8.00287195<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  25<br />y:  -8.19580483<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  26<br />y:  -8.58942776<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  27<br />y:  -9.66024125<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  28<br />y: -11.07537111<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  29<br />y: -12.04256952<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  30<br />y: -12.70470526<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  31<br />y: -11.14021921<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  32<br />y: -11.34852365<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  33<br />y: -11.05844155<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  34<br />y: -10.87468080<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  35<br />y: -10.50493023<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  36<br />y:  -9.95764927<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  37<br />y:  -9.65109269<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  38<br />y:  -9.87883525<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  39<br />y: -10.09114697<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  40<br />y:  -8.94404634<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  41<br />y:  -8.54096030<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  42<br />y:  -8.42160373<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  43<br />y:  -8.72123454<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  44<br />y:  -8.76925299<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  45<br />y:  -9.26942321<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  46<br />y:  -9.76265028<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  47<br />y: -10.99416797<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  48<br />y: -11.50584468<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  49<br />y: -12.16249995<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  50<br />y: -12.39116157<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  51<br />y: -13.69699048<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  52<br />y: -13.83800553<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  53<br />y: -15.18167369<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  54<br />y: -15.36679191<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  55<br />y: -15.31122172<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  56<br />y: -15.80873048<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  57<br />y: -17.51010124<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  58<br />y: -17.00674476<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  59<br />y: -17.19399869<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  60<br />y: -17.22189876<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  61<br />y: -17.20330527<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  62<br />y: -17.57332471<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  63<br />y: -16.69016459<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  64<br />y: -16.25457016<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  65<br />y: -16.47584851<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  66<br />y: -17.51889981<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  67<br />y: -17.86548110<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  68<br />y: -18.48342143<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  69<br />y: -19.16420634<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  70<br />y: -18.82728687<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  71<br />y: -20.37308626<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  72<br />y: -20.88461322<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  73<br />y: -22.10942418<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  74<br />y: -22.14446833<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  75<br />y: -23.23255453<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  76<br />y: -24.39487088<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  77<br />y: -23.91943708<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  78<br />y: -23.80349722<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  79<br />y: -23.40721919<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  80<br />y: -24.42672632<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  81<br />y: -23.67870248<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  82<br />y: -24.31786402<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  83<br />y: -24.37508341<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  84<br />y: -23.13822321<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  85<br />y: -22.21063509<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  86<br />y: -20.97517147<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  87<br />y: -20.83844098<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  88<br />y: -22.03675092<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  89<br />y: -19.67244344<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  90<br />y: -19.49709327<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  91<br />y: -19.80029945<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  92<br />y: -20.20976069<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  93<br />y: -19.66974690<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  94<br />y: -20.64238372<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  95<br />y: -19.61586215<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  96<br />y: -19.84527828<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  97<br />y: -21.38034034<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  98<br />y: -21.08213521<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t:  99<br />y: -22.07956407<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 100<br />y: -21.96041026<br />sim_number: sim_number 6<br />sim_number: sim_number 6","t: 101<br />y: -22.87581534<br />sim_number: sim_number 6<br />sim_number: sim_number 6"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,191,196,1)","dash":"solid"},"hoveron":"points","name":"sim_number 6","legendgroup":"sim_number 6","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,0.362198544287957,0.700578334922097,-0.265116898681629,-0.59481428736989,-1.6209830515736,-2.28132132877875,-1.38871424610004,-1.59302588655857,-0.589999456570055,1.71875052350982,2.25461358681665,0.720224060430092,1.52397398482009,0.711677107353079,0.41674749577784,0.935146296735925,0.894091868900539,-0.179505621173862,-0.617469619625934,0.823009933376368,0.385242883144383,1.87808804852675,2.06218235544918,2.07905739742843,3.06162136089047,4.2739156034623,1.24939761918715,1.33267778358137,-0.653441702193442,0.892366541598078,1.00345394601091,-0.550684537486814,1.02219031102931,1.4072566028214,1.18475071194872,1.8552594718025,1.46447911592057,1.88031834447176,2.02480112419093,1.90358978694953,3.13037086431423,2.73629023509572,4.00218767163646,3.31795582891488,1.62578540595693,3.81035985011103,5.27961619049271,5.52043615717338,4.79823000572296,4.307063456807,2.03037988711553,1.63474418639911,1.61903297786131,1.08309924935114,1.71875973091107,0.600870775027928,1.01870046015552,0.922325653334443,0.456504345975058,0.0148247102846898,-1.25312489788017,-1.25605966016709,-2.05746677102255,-2.76158353827621,-0.128639260151316,0.389689940026396,-1.41130012776314,-2.37882673562824,-3.01158454762707,-2.25264303263244,-0.719133366260473,-0.0844771171089421,-0.753590917592158,-0.326450361189481,-1.32000392000496,-1.1943923345732,-1.10448772947427,-0.26690558032458,1.63292884447782,3.07678253200536,2.83433940657541,2.36910720850753,2.01907885445627,1.51852285464599,1.64734711412366,-0.291701960559839,1.72305245913774,0.953080414838816,0.490686901318861,1.04488245566586,2.35326556830213,3.50080370672501,3.39719793062939,3.67311449162674,3.67113254702793,3.3194194012989,3.5843488315622,3.57950898730841,2.71920511421155,3.6375025462326],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   2<br />y:   0.36219854<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   3<br />y:   0.70057833<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   4<br />y:  -0.26511690<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   5<br />y:  -0.59481429<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   6<br />y:  -1.62098305<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   7<br />y:  -2.28132133<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   8<br />y:  -1.38871425<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:   9<br />y:  -1.59302589<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  10<br />y:  -0.58999946<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  11<br />y:   1.71875052<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  12<br />y:   2.25461359<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  13<br />y:   0.72022406<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  14<br />y:   1.52397398<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  15<br />y:   0.71167711<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  16<br />y:   0.41674750<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  17<br />y:   0.93514630<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  18<br />y:   0.89409187<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  19<br />y:  -0.17950562<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  20<br />y:  -0.61746962<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  21<br />y:   0.82300993<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  22<br />y:   0.38524288<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  23<br />y:   1.87808805<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  24<br />y:   2.06218236<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  25<br />y:   2.07905740<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  26<br />y:   3.06162136<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  27<br />y:   4.27391560<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  28<br />y:   1.24939762<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  29<br />y:   1.33267778<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  30<br />y:  -0.65344170<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  31<br />y:   0.89236654<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  32<br />y:   1.00345395<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  33<br />y:  -0.55068454<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  34<br />y:   1.02219031<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  35<br />y:   1.40725660<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  36<br />y:   1.18475071<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  37<br />y:   1.85525947<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  38<br />y:   1.46447912<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  39<br />y:   1.88031834<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  40<br />y:   2.02480112<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  41<br />y:   1.90358979<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  42<br />y:   3.13037086<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  43<br />y:   2.73629024<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  44<br />y:   4.00218767<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  45<br />y:   3.31795583<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  46<br />y:   1.62578541<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  47<br />y:   3.81035985<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  48<br />y:   5.27961619<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  49<br />y:   5.52043616<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  50<br />y:   4.79823001<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  51<br />y:   4.30706346<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  52<br />y:   2.03037989<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  53<br />y:   1.63474419<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  54<br />y:   1.61903298<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  55<br />y:   1.08309925<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  56<br />y:   1.71875973<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  57<br />y:   0.60087078<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  58<br />y:   1.01870046<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  59<br />y:   0.92232565<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  60<br />y:   0.45650435<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  61<br />y:   0.01482471<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  62<br />y:  -1.25312490<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  63<br />y:  -1.25605966<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  64<br />y:  -2.05746677<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  65<br />y:  -2.76158354<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  66<br />y:  -0.12863926<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  67<br />y:   0.38968994<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  68<br />y:  -1.41130013<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  69<br />y:  -2.37882674<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  70<br />y:  -3.01158455<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  71<br />y:  -2.25264303<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  72<br />y:  -0.71913337<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  73<br />y:  -0.08447712<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  74<br />y:  -0.75359092<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  75<br />y:  -0.32645036<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  76<br />y:  -1.32000392<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  77<br />y:  -1.19439233<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  78<br />y:  -1.10448773<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  79<br />y:  -0.26690558<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  80<br />y:   1.63292884<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  81<br />y:   3.07678253<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  82<br />y:   2.83433941<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  83<br />y:   2.36910721<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  84<br />y:   2.01907885<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  85<br />y:   1.51852285<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  86<br />y:   1.64734711<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  87<br />y:  -0.29170196<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  88<br />y:   1.72305246<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  89<br />y:   0.95308041<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  90<br />y:   0.49068690<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  91<br />y:   1.04488246<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  92<br />y:   2.35326557<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  93<br />y:   3.50080371<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  94<br />y:   3.39719793<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  95<br />y:   3.67311449<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  96<br />y:   3.67113255<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  97<br />y:   3.31941940<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  98<br />y:   3.58434883<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t:  99<br />y:   3.57950899<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 100<br />y:   2.71920511<br />sim_number: sim_number 7<br />sim_number: sim_number 7","t: 101<br />y:   3.63750255<br />sim_number: sim_number 7<br />sim_number: sim_number 7"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,176,246,1)","dash":"solid"},"hoveron":"points","name":"sim_number 7","legendgroup":"sim_number 7","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,-0.515110361294601,-0.476290960530992,0.249239160448702,1.48014227548871,3.57188495729941,3.01268120439752,1.82135411328476,1.12000971393918,0.513972779086735,-0.0662842899544998,-0.0587160679919154,-1.02557079206612,-2.09373175713093,-3.41744316013705,-3.94930019362495,-3.6555469274234,-4.11398888554755,-4.20903543510541,-3.0878171034393,-1.78745458964378,-0.390512483511779,-2.27365349377052,-3.60280320561939,-3.51851298262581,-3.82149607539036,-4.05588520744674,-5.33290352258661,-6.59688182875144,-8.19403784225687,-8.09011859394855,-7.09408019755517,-6.11409316874666,-7.5741376352118,-8.02020357722645,-9.1115096013449,-7.79963138540439,-6.05062486722886,-7.1651540903504,-5.58694804847773,-5.2783574682035,-5.31339653590853,-4.05275291253398,-3.78233830082921,-3.31652527072179,-4.77599823995555,-3.73385303691786,-2.26529733038215,-2.65761404927768,-3.20749261600526,-3.85270862662243,-4.65973495837762,-4.57356123418889,-5.27054907461206,-5.42479132268763,-6.23621764412073,-6.44812221857621,-8.23521039015642,-8.61063433426105,-10.2702501547035,-9.99779597221052,-10.9672678437562,-11.971084429901,-11.3862395965747,-10.6417332877216,-9.42590687168788,-8.84170516131816,-10.191882938331,-10.0328497601679,-9.89395803288642,-9.69892362986055,-9.42850346594336,-10.40046235005,-10.7815153687895,-11.4391611663747,-10.7796727831245,-10.291480915606,-11.1163664783166,-10.0719731972187,-10.9753326219099,-9.37174673819773,-8.87053615843933,-10.0070521955466,-9.79359745269015,-9.28757315528616,-9.44472445250929,-8.62540263807763,-7.85112635715047,-8.36507319975253,-8.63012736159155,-8.04373247441802,-6.00668403219633,-7.77147537833813,-8.94828278838869,-7.86169540561703,-8.30134080071071,-7.90388110629273,-8.93769215078656,-8.51503818257404,-9.25277566162227,-7.56955217363817],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   2<br />y:  -0.51511036<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   3<br />y:  -0.47629096<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   4<br />y:   0.24923916<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   5<br />y:   1.48014228<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   6<br />y:   3.57188496<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   7<br />y:   3.01268120<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   8<br />y:   1.82135411<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:   9<br />y:   1.12000971<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  10<br />y:   0.51397278<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  11<br />y:  -0.06628429<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  12<br />y:  -0.05871607<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  13<br />y:  -1.02557079<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  14<br />y:  -2.09373176<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  15<br />y:  -3.41744316<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  16<br />y:  -3.94930019<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  17<br />y:  -3.65554693<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  18<br />y:  -4.11398889<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  19<br />y:  -4.20903544<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  20<br />y:  -3.08781710<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  21<br />y:  -1.78745459<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  22<br />y:  -0.39051248<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  23<br />y:  -2.27365349<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  24<br />y:  -3.60280321<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  25<br />y:  -3.51851298<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  26<br />y:  -3.82149608<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  27<br />y:  -4.05588521<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  28<br />y:  -5.33290352<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  29<br />y:  -6.59688183<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  30<br />y:  -8.19403784<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  31<br />y:  -8.09011859<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  32<br />y:  -7.09408020<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  33<br />y:  -6.11409317<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  34<br />y:  -7.57413764<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  35<br />y:  -8.02020358<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  36<br />y:  -9.11150960<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  37<br />y:  -7.79963139<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  38<br />y:  -6.05062487<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  39<br />y:  -7.16515409<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  40<br />y:  -5.58694805<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  41<br />y:  -5.27835747<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  42<br />y:  -5.31339654<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  43<br />y:  -4.05275291<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  44<br />y:  -3.78233830<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  45<br />y:  -3.31652527<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  46<br />y:  -4.77599824<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  47<br />y:  -3.73385304<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  48<br />y:  -2.26529733<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  49<br />y:  -2.65761405<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  50<br />y:  -3.20749262<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  51<br />y:  -3.85270863<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  52<br />y:  -4.65973496<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  53<br />y:  -4.57356123<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  54<br />y:  -5.27054907<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  55<br />y:  -5.42479132<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  56<br />y:  -6.23621764<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  57<br />y:  -6.44812222<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  58<br />y:  -8.23521039<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  59<br />y:  -8.61063433<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  60<br />y: -10.27025015<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  61<br />y:  -9.99779597<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  62<br />y: -10.96726784<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  63<br />y: -11.97108443<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  64<br />y: -11.38623960<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  65<br />y: -10.64173329<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  66<br />y:  -9.42590687<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  67<br />y:  -8.84170516<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  68<br />y: -10.19188294<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  69<br />y: -10.03284976<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  70<br />y:  -9.89395803<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  71<br />y:  -9.69892363<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  72<br />y:  -9.42850347<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  73<br />y: -10.40046235<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  74<br />y: -10.78151537<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  75<br />y: -11.43916117<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  76<br />y: -10.77967278<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  77<br />y: -10.29148092<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  78<br />y: -11.11636648<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  79<br />y: -10.07197320<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  80<br />y: -10.97533262<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  81<br />y:  -9.37174674<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  82<br />y:  -8.87053616<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  83<br />y: -10.00705220<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  84<br />y:  -9.79359745<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  85<br />y:  -9.28757316<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  86<br />y:  -9.44472445<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  87<br />y:  -8.62540264<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  88<br />y:  -7.85112636<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  89<br />y:  -8.36507320<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  90<br />y:  -8.63012736<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  91<br />y:  -8.04373247<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  92<br />y:  -6.00668403<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  93<br />y:  -7.77147538<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  94<br />y:  -8.94828279<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  95<br />y:  -7.86169541<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  96<br />y:  -8.30134080<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  97<br />y:  -7.90388111<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  98<br />y:  -8.93769215<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t:  99<br />y:  -8.51503818<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 100<br />y:  -9.25277566<br />sim_number: sim_number 8<br />sim_number: sim_number 8","t: 101<br />y:  -7.56955217<br />sim_number: sim_number 8<br />sim_number: sim_number 8"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(149,144,255,1)","dash":"solid"},"hoveron":"points","name":"sim_number 8","legendgroup":"sim_number 8","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,-0.442989881659254,2.13630831062908,2.22633510902681,1.62420390036115,0.434481724319229,0.903460963504256,1.13029817058248,1.50518428398084,0.855642440836705,0.461514762130864,0.344812546690988,-1.01654423901651,-1.5969878249429,-0.721682971448456,-0.847576820863804,-0.526293632443416,-1.43772744741198,-3.29456081339316,-2.7871657760151,-2.78314860719147,-2.36825571263654,-1.45408251873046,-2.74177310322591,-2.56568789059822,-3.06888479024764,-3.66149257947823,-4.12247335427401,-4.05377506743814,-3.53360525479812,-3.48197320710819,-1.52513705711601,-1.63235752809563,-1.02200230393977,-2.21565013844848,-1.71822308235259,-2.21105803468702,-0.337426717702014,0.143180057950927,0.804620980822585,1.99147851737312,3.78004764030044,3.40851996257213,4.46409299187015,2.57864968906031,2.86031410596624,4.08629944613891,4.44071736002505,4.00953213300883,4.42801112437266,7.23938280494397,8.1359257255583,8.9633961965986,9.24591580546327,9.31803579104607,10.2263151486323,10.2273434152961,9.67262379831559,9.34745704425917,8.13110133438263,9.44473224880351,10.2526031203788,11.3551860462995,12.9425746080704,12.1206094915365,13.2176497472259,14.1747640633212,14.4909849960775,13.8732300507163,12.8887801748145,13.689526672512,12.5534596979639,12.2659954999453,13.3174860189399,14.1546420982433,14.5460621008419,12.4514482372146,13.1049456196862,13.9332764963082,16.858001275581,16.5322808942359,16.0406855986648,15.8858971621696,14.5463572535182,15.9591715218655,15.4548158897582,14.3199184909494,14.9011178966341,15.1820632867053,15.8875923125611,16.3392458652512,15.8373830934782,16.8049288464507,17.4268079988746,18.2227700967312,18.5996513454203,18.7268197961038,17.5594075281584,17.8490538278773,19.5307930590111,19.5541003057916],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   2<br />y:  -0.44298988<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   3<br />y:   2.13630831<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   4<br />y:   2.22633511<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   5<br />y:   1.62420390<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   6<br />y:   0.43448172<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   7<br />y:   0.90346096<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   8<br />y:   1.13029817<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:   9<br />y:   1.50518428<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  10<br />y:   0.85564244<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  11<br />y:   0.46151476<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  12<br />y:   0.34481255<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  13<br />y:  -1.01654424<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  14<br />y:  -1.59698782<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  15<br />y:  -0.72168297<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  16<br />y:  -0.84757682<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  17<br />y:  -0.52629363<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  18<br />y:  -1.43772745<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  19<br />y:  -3.29456081<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  20<br />y:  -2.78716578<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  21<br />y:  -2.78314861<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  22<br />y:  -2.36825571<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  23<br />y:  -1.45408252<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  24<br />y:  -2.74177310<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  25<br />y:  -2.56568789<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  26<br />y:  -3.06888479<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  27<br />y:  -3.66149258<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  28<br />y:  -4.12247335<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  29<br />y:  -4.05377507<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  30<br />y:  -3.53360525<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  31<br />y:  -3.48197321<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  32<br />y:  -1.52513706<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  33<br />y:  -1.63235753<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  34<br />y:  -1.02200230<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  35<br />y:  -2.21565014<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  36<br />y:  -1.71822308<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  37<br />y:  -2.21105803<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  38<br />y:  -0.33742672<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  39<br />y:   0.14318006<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  40<br />y:   0.80462098<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  41<br />y:   1.99147852<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  42<br />y:   3.78004764<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  43<br />y:   3.40851996<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  44<br />y:   4.46409299<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  45<br />y:   2.57864969<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  46<br />y:   2.86031411<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  47<br />y:   4.08629945<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  48<br />y:   4.44071736<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  49<br />y:   4.00953213<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  50<br />y:   4.42801112<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  51<br />y:   7.23938280<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  52<br />y:   8.13592573<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  53<br />y:   8.96339620<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  54<br />y:   9.24591581<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  55<br />y:   9.31803579<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  56<br />y:  10.22631515<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  57<br />y:  10.22734342<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  58<br />y:   9.67262380<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  59<br />y:   9.34745704<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  60<br />y:   8.13110133<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  61<br />y:   9.44473225<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  62<br />y:  10.25260312<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  63<br />y:  11.35518605<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  64<br />y:  12.94257461<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  65<br />y:  12.12060949<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  66<br />y:  13.21764975<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  67<br />y:  14.17476406<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  68<br />y:  14.49098500<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  69<br />y:  13.87323005<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  70<br />y:  12.88878017<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  71<br />y:  13.68952667<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  72<br />y:  12.55345970<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  73<br />y:  12.26599550<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  74<br />y:  13.31748602<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  75<br />y:  14.15464210<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  76<br />y:  14.54606210<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  77<br />y:  12.45144824<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  78<br />y:  13.10494562<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  79<br />y:  13.93327650<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  80<br />y:  16.85800128<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  81<br />y:  16.53228089<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  82<br />y:  16.04068560<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  83<br />y:  15.88589716<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  84<br />y:  14.54635725<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  85<br />y:  15.95917152<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  86<br />y:  15.45481589<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  87<br />y:  14.31991849<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  88<br />y:  14.90111790<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  89<br />y:  15.18206329<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  90<br />y:  15.88759231<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  91<br />y:  16.33924587<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  92<br />y:  15.83738309<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  93<br />y:  16.80492885<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  94<br />y:  17.42680800<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  95<br />y:  18.22277010<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  96<br />y:  18.59965135<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  97<br />y:  18.72681980<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  98<br />y:  17.55940753<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t:  99<br />y:  17.84905383<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 100<br />y:  19.53079306<br />sim_number: sim_number 9<br />sim_number: sim_number 9","t: 101<br />y:  19.55410031<br />sim_number: sim_number 9<br />sim_number: sim_number 9"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(231,107,243,1)","dash":"solid"},"hoveron":"points","name":"sim_number 9","legendgroup":"sim_number 9","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"y":[0,0.126997890618731,0.872885801144263,0.204156243539388,1.71657053271068,1.75245687195902,2.44170735883367,3.67409393868457,5.51821821572091,5.39071237725699,4.19059857745073,1.73174121740722,2.91484036744396,1.25457002972598,2.11068132730904,1.7439193488168,2.04581011176052,0.775924441950983,0.948331832224614,0.646952711526091,1.42908863371665,-0.749632665352039,-0.657719535242456,-1.54977723505204,-2.60595194100755,-1.6039853182645,-2.03634699261924,-2.11819754692171,-1.05566750661083,-1.4367621866292,-0.83687291846331,-2.00501970090125,-1.48355713913243,-0.193016784873742,0.0863264522276882,-0.412450809133929,0.351975710012454,1.71203795193249,1.13041310721691,1.48390970830844,1.51322581663836,3.95723272361356,3.80177099496668,4.10324051358418,3.86413648799876,2.30134612552035,2.85096090407873,0.647578825958505,3.4188859971736,4.66706700652399,4.87875669227455,3.70762135376345,2.12577872021338,0.867976542889484,1.5273086377767,2.69072387763448,1.1107362498383,-0.0917001364816925,0.271737735832752,0.132468773726395,1.43403661624539,3.35418878448993,2.42107326518813,1.45043442053885,0.42067814215245,1.10111913030816,2.21860468747258,3.01853583695714,2.62262458706425,2.43422105150369,4.82046816803963,3.93647687155419,4.28890953510021,3.94039442504635,3.87469194035146,5.42225324327736,6.00588603173605,5.10595252561494,4.9400293948174,3.14488478555741,2.90107647232464,1.41967856269737,-0.0813788009252234,-0.336168454333135,-3.09601085934579,-3.33078195638035,-2.27066720668042,-1.85927519167636,-2.42864075354253,-2.34450949392617,-2.13444583267055,-1.85215885504581,-3.46194880419687,-2.31812700590766,-1.83413780097837,-2.33077764900005,-1.92777555601997,-1.09454383935161,1.68685391557491,1.54876729161474,1.97525612176363],"text":["t:   1<br />y:   0.00000000<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   2<br />y:   0.12699789<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   3<br />y:   0.87288580<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   4<br />y:   0.20415624<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   5<br />y:   1.71657053<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   6<br />y:   1.75245687<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   7<br />y:   2.44170736<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   8<br />y:   3.67409394<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:   9<br />y:   5.51821822<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  10<br />y:   5.39071238<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  11<br />y:   4.19059858<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  12<br />y:   1.73174122<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  13<br />y:   2.91484037<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  14<br />y:   1.25457003<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  15<br />y:   2.11068133<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  16<br />y:   1.74391935<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  17<br />y:   2.04581011<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  18<br />y:   0.77592444<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  19<br />y:   0.94833183<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  20<br />y:   0.64695271<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  21<br />y:   1.42908863<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  22<br />y:  -0.74963267<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  23<br />y:  -0.65771954<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  24<br />y:  -1.54977724<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  25<br />y:  -2.60595194<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  26<br />y:  -1.60398532<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  27<br />y:  -2.03634699<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  28<br />y:  -2.11819755<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  29<br />y:  -1.05566751<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  30<br />y:  -1.43676219<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  31<br />y:  -0.83687292<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  32<br />y:  -2.00501970<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  33<br />y:  -1.48355714<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  34<br />y:  -0.19301678<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  35<br />y:   0.08632645<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  36<br />y:  -0.41245081<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  37<br />y:   0.35197571<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  38<br />y:   1.71203795<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  39<br />y:   1.13041311<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  40<br />y:   1.48390971<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  41<br />y:   1.51322582<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  42<br />y:   3.95723272<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  43<br />y:   3.80177099<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  44<br />y:   4.10324051<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  45<br />y:   3.86413649<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  46<br />y:   2.30134613<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  47<br />y:   2.85096090<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  48<br />y:   0.64757883<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  49<br />y:   3.41888600<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  50<br />y:   4.66706701<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  51<br />y:   4.87875669<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  52<br />y:   3.70762135<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  53<br />y:   2.12577872<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  54<br />y:   0.86797654<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  55<br />y:   1.52730864<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  56<br />y:   2.69072388<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  57<br />y:   1.11073625<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  58<br />y:  -0.09170014<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  59<br />y:   0.27173774<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  60<br />y:   0.13246877<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  61<br />y:   1.43403662<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  62<br />y:   3.35418878<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  63<br />y:   2.42107327<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  64<br />y:   1.45043442<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  65<br />y:   0.42067814<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  66<br />y:   1.10111913<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  67<br />y:   2.21860469<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  68<br />y:   3.01853584<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  69<br />y:   2.62262459<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  70<br />y:   2.43422105<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  71<br />y:   4.82046817<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  72<br />y:   3.93647687<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  73<br />y:   4.28890954<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  74<br />y:   3.94039443<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  75<br />y:   3.87469194<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  76<br />y:   5.42225324<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  77<br />y:   6.00588603<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  78<br />y:   5.10595253<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  79<br />y:   4.94002939<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  80<br />y:   3.14488479<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  81<br />y:   2.90107647<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  82<br />y:   1.41967856<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  83<br />y:  -0.08137880<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  84<br />y:  -0.33616845<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  85<br />y:  -3.09601086<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  86<br />y:  -3.33078196<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  87<br />y:  -2.27066721<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  88<br />y:  -1.85927519<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  89<br />y:  -2.42864075<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  90<br />y:  -2.34450949<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  91<br />y:  -2.13444583<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  92<br />y:  -1.85215886<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  93<br />y:  -3.46194880<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  94<br />y:  -2.31812701<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  95<br />y:  -1.83413780<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  96<br />y:  -2.33077765<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  97<br />y:  -1.92777556<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  98<br />y:  -1.09454384<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t:  99<br />y:   1.68685392<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 100<br />y:   1.54876729<br />sim_number: sim_number 10<br />sim_number: sim_number 10","t: 101<br />y:   1.97525612<br />sim_number: sim_number 10<br />sim_number: sim_number 10"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(255,98,188,1)","dash":"solid"},"hoveron":"points","name":"sim_number 10","legendgroup":"sim_number 10","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.7625570776256,"r":7.30593607305936,"b":40.1826484018265,"l":43.1050228310502},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"title":{"text":"Brownian Motion","font":{"color":"rgba(0,0,0,1)","family":"","size":17.5342465753425},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-4,106],"tickmode":"array","ticktext":["0","25","50","75","100"],"tickvals":[0,25,50,75,100],"categoryorder":"array","categoryarray":["0","25","50","75","100"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"t","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-26.6257676550012,21.753141637258],"tickmode":"array","ticktext":["-20","-10","0","10","20"],"tickvals":[-20,-10,0,10,20],"categoryorder":"array","categoryarray":["-20","-10","0","10","20"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"y","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"2f146aa43c0f":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"2f146aa43c0f","visdat":{"2f146aa43c0f":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>And with the augmenting functions</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">rn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">31</span>)</span>
<span id="cb14-2">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb14-3"><span class="at" style="color: #657422;">date_col =</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(<span class="at" style="color: #657422;">from =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-01-01"</span>),</span>
<span id="cb14-4">                      <span class="at" style="color: #657422;">to =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-01-31"</span>),</span>
<span id="cb14-5">                      <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"day"</span>),</span>
<span id="cb14-6"> <span class="at" style="color: #657422;">value =</span> rn</span>
<span id="cb14-7">)</span>
<span id="cb14-8"></span>
<span id="cb14-9"><span class="fu" style="color: #4758AB;">ts_brownian_motion_augment</span>(</span>
<span id="cb14-10">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb14-11">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb14-12">  <span class="at" style="color: #657422;">.value_col =</span> value,</span>
<span id="cb14-13">  <span class="at" style="color: #657422;">.time =</span> <span class="dv" style="color: #AD0000;">30</span>,</span>
<span id="cb14-14">  <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">30</span></span>
<span id="cb14-15">) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-16">  <span class="fu" style="color: #4758AB;">ts_brownian_motion_plot</span>(date_col, value, <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="plotly html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-e8d0959b540918151e06" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-e8d0959b540918151e06">{"x":{"data":[{"x":[18993,18994,18995,18996,18997,18998,18999,19000,19001,19002,19003,19004,19005,19006,19007,19008,19009,19010,19011,19012,19013,19014,19015,19016,19017,19018,19019,19020,19021,19022,19023],"y":[-0.859784491035353,0.756033732508727,0.608928483614112,-0.81164807393549,-1.14117304121622,0.613156422171569,-1.94778845537465,-0.213817095833888,-0.0971183072516412,0.424840242901053,1.06888936399923,-1.24934907536018,-1.38711855074388,1.03515741512271,-0.928289555839724,-0.587035738824518,-0.509422989530578,0.273863658519358,-0.564865174200536,-1.24320119060828,-0.836652910845568,1.69504633445988,-0.547644882687813,0.525627038180498,0.171471972355451,-0.292918315572716,-0.223544840876197,1.6326093054506,-0.413766454249566,1.15156569946516,0.981604090001992],"text":["date_col: 2022-01-01<br />value: -8.597845e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-02<br />value:  7.560337e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-03<br />value:  6.089285e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-04<br />value: -8.116481e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-05<br />value: -1.141173e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-06<br />value:  6.131564e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-07<br />value: -1.947788e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-08<br />value: -2.138171e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-09<br />value: -9.711831e-02<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-10<br />value:  4.248402e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-11<br />value:  1.068889e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-12<br />value: -1.249349e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-13<br />value: -1.387119e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-14<br />value:  1.035157e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-15<br />value: -9.282896e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-16<br />value: -5.870357e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-17<br />value: -5.094230e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-18<br />value:  2.738637e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-19<br />value: -5.648652e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-20<br />value: -1.243201e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-21<br />value: -8.366529e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-22<br />value:  1.695046e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-23<br />value: -5.476449e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-24<br />value:  5.256270e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-25<br />value:  1.714720e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-26<br />value: -2.929183e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-27<br />value: -2.235448e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-28<br />value:  1.632609e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-29<br />value: -4.137665e-01<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-30<br />value:  1.151566e+00<br />sim_number: actual_data<br />sim_number: actual_data","date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: actual_data<br />sim_number: actual_data"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(248,118,109,1)","dash":"solid"},"hoveron":"points","name":"actual_data","legendgroup":"actual_data","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,2.09706984924469,2.44107204640457,3.04710967232169,1.62109054415638,2.27696380332775,3.33359277457783,4.40098354456531,4.56268418507312,3.98677879113767,3.60892655655343,4.8604629059001,5.52562496917534,6.09193435457864,6.16761096441766,7.33417874794952,7.92572357898916,7.20815998798712,8.45405145004161,8.98906415424248,8.692277321605,7.32901863380857,6.00342523336143,5.54292170349065,5.36537116489309,1.90603179099845,2.55908435471131,2.69559225463381,2.55214446162031,2.13011534742062,2.65106704654268],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-01<br />value:  2.097070e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-02<br />value:  2.441072e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-03<br />value:  3.047110e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-04<br />value:  1.621091e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-05<br />value:  2.276964e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-06<br />value:  3.333593e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-07<br />value:  4.400984e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-08<br />value:  4.562684e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-09<br />value:  3.986779e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-10<br />value:  3.608927e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-11<br />value:  4.860463e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-12<br />value:  5.525625e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-13<br />value:  6.091934e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-14<br />value:  6.167611e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-15<br />value:  7.334179e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-16<br />value:  7.925724e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-17<br />value:  7.208160e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-18<br />value:  8.454051e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-19<br />value:  8.989064e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-20<br />value:  8.692277e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-21<br />value:  7.329019e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-22<br />value:  6.003425e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-23<br />value:  5.542922e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-24<br />value:  5.365371e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-25<br />value:  1.906032e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-26<br />value:  2.559084e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-27<br />value:  2.695592e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-02-28<br />value:  2.552144e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-03-01<br />value:  2.130115e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1","date_col: 2022-03-02<br />value:  2.651067e+00<br />sim_number: sim_number 1<br />sim_number: sim_number 1"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(240,127,75,1)","dash":"solid"},"hoveron":"points","name":"sim_number 1","legendgroup":"sim_number 1","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,1.01527424161116,1.53265705622399,1.58160092165563,1.80059001606698,2.37446406011305,1.62832064220882,1.66956922124721,3.15293899544094,4.40549463254441,5.16073940324638,6.20813170968514,5.92362306598106,6.37766970903563,6.52522272282958,7.80555498811304,6.74730254407792,6.41193289151475,5.34737733544729,6.03846028758326,5.29628985571855,6.08725943148445,4.39026363224916,4.63207750329234,4.923988719061,4.11382251279953,4.75707000013049,5.8820108917834,6.77898908067223,6.28632026359259,7.00340493191707],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-01<br />value:  1.015274e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-02<br />value:  1.532657e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-03<br />value:  1.581601e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-04<br />value:  1.800590e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-05<br />value:  2.374464e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-06<br />value:  1.628321e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-07<br />value:  1.669569e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-08<br />value:  3.152939e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-09<br />value:  4.405495e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-10<br />value:  5.160739e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-11<br />value:  6.208132e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-12<br />value:  5.923623e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-13<br />value:  6.377670e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-14<br />value:  6.525223e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-15<br />value:  7.805555e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-16<br />value:  6.747303e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-17<br />value:  6.411933e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-18<br />value:  5.347377e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-19<br />value:  6.038460e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-20<br />value:  5.296290e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-21<br />value:  6.087259e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-22<br />value:  4.390264e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-23<br />value:  4.632078e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-24<br />value:  4.923989e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-25<br />value:  4.113823e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-26<br />value:  4.757070e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-27<br />value:  5.882011e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-02-28<br />value:  6.778989e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-03-01<br />value:  6.286320e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2","date_col: 2022-03-02<br />value:  7.003405e+00<br />sim_number: sim_number 2<br />sim_number: sim_number 2"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(229,135,9,1)","dash":"solid"},"hoveron":"points","name":"sim_number 2","legendgroup":"sim_number 2","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,-0.0603314461857398,0.326478728960787,1.37933018273441,0.279509246900431,0.596345880367176,-0.497019875182694,-0.174499976392994,-0.411313621282853,1.29649501870372,0.690125757660539,-0.377512999835534,-0.083852174233032,-0.118691704231161,-0.239164687144237,0.313946208076072,-0.471197957353386,-1.03350738514284,-0.551894729298185,-1.03501370804803,-1.13629430064402,-2.07167303319716,-2.449601296222,-3.02961624192564,-3.71688731594053,-3.57283041428639,-2.4821095237667,-2.55262420826452,-1.90863061603279,-2.42820975711376,-3.61763667896147],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-01<br />value: -6.033145e-02<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-02<br />value:  3.264787e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-03<br />value:  1.379330e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-04<br />value:  2.795092e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-05<br />value:  5.963459e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-06<br />value: -4.970199e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-07<br />value: -1.745000e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-08<br />value: -4.113136e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-09<br />value:  1.296495e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-10<br />value:  6.901258e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-11<br />value: -3.775130e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-12<br />value: -8.385217e-02<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-13<br />value: -1.186917e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-14<br />value: -2.391647e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-15<br />value:  3.139462e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-16<br />value: -4.711980e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-17<br />value: -1.033507e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-18<br />value: -5.518947e-01<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-19<br />value: -1.035014e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-20<br />value: -1.136294e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-21<br />value: -2.071673e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-22<br />value: -2.449601e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-23<br />value: -3.029616e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-24<br />value: -3.716887e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-25<br />value: -3.572830e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-26<br />value: -2.482110e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-27<br />value: -2.552624e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-02-28<br />value: -1.908631e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-03-01<br />value: -2.428210e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3","date_col: 2022-03-02<br />value: -3.617637e+00<br />sim_number: sim_number 3<br />sim_number: sim_number 3"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(217,143,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 3","legendgroup":"sim_number 3","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.000776668494746335,-1.48925229457273,-2.16034358833501,-1.56893466368729,-0.834542056144895,0.401917389035194,1.50775775955058,1.33924142102839,0.961672322730999,2.39679494843582,1.7005194188696,2.48949385947592,1.41625439504311,2.02757006261181,1.43586383411572,2.27794791363,2.71433114549162,1.57251494781624,0.837679466347611,0.169054044093788,1.07465834409089,1.36712195911716,2.05578837341134,2.2715538656898,2.96407514527497,5.02205941010188,5.55582020317628,6.11630570734793,6.73125666047553,6.60744043246579],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-01<br />value:  7.766685e-04<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-02<br />value: -1.489252e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-03<br />value: -2.160344e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-04<br />value: -1.568935e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-05<br />value: -8.345421e-01<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-06<br />value:  4.019174e-01<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-07<br />value:  1.507758e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-08<br />value:  1.339241e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-09<br />value:  9.616723e-01<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-10<br />value:  2.396795e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-11<br />value:  1.700519e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-12<br />value:  2.489494e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-13<br />value:  1.416254e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-14<br />value:  2.027570e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-15<br />value:  1.435864e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-16<br />value:  2.277948e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-17<br />value:  2.714331e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-18<br />value:  1.572515e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-19<br />value:  8.376795e-01<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-20<br />value:  1.690540e-01<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-21<br />value:  1.074658e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-22<br />value:  1.367122e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-23<br />value:  2.055788e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-24<br />value:  2.271554e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-25<br />value:  2.964075e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-26<br />value:  5.022059e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-27<br />value:  5.555820e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-02-28<br />value:  6.116306e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-03-01<br />value:  6.731257e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4","date_col: 2022-03-02<br />value:  6.607440e+00<br />sim_number: sim_number 4<br />sim_number: sim_number 4"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(203,151,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 4","legendgroup":"sim_number 4","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,-1.49851450708663,-0.650547849247329,-0.169159093786492,-2.30288397135685,-2.84382467682239,-1.86077307545136,-1.65343189090793,-1.89290834260361,-2.71542034062574,-2.54736628609649,-4.00382662118202,-3.48300504210376,-4.64999971110918,-5.77695822399547,-5.74797318815546,-7.3175056446853,-6.50831459559697,-7.20707997314108,-8.31235133407558,-9.17491715972361,-9.8596597305403,-10.8407799525688,-10.8815022760424,-10.5773159115575,-9.48000886081541,-8.01396918842764,-6.54744023311669,-6.71729057548973,-5.53084726330965,-6.35623940606911],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-01<br />value: -1.498515e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-02<br />value: -6.505478e-01<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-03<br />value: -1.691591e-01<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-04<br />value: -2.302884e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-05<br />value: -2.843825e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-06<br />value: -1.860773e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-07<br />value: -1.653432e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-08<br />value: -1.892908e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-09<br />value: -2.715420e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-10<br />value: -2.547366e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-11<br />value: -4.003827e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-12<br />value: -3.483005e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-13<br />value: -4.650000e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-14<br />value: -5.776958e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-15<br />value: -5.747973e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-16<br />value: -7.317506e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-17<br />value: -6.508315e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-18<br />value: -7.207080e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-19<br />value: -8.312351e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-20<br />value: -9.174917e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-21<br />value: -9.859660e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-22<br />value: -1.084078e+01<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-23<br />value: -1.088150e+01<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-24<br />value: -1.057732e+01<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-25<br />value: -9.480009e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-26<br />value: -8.013969e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-27<br />value: -6.547440e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-02-28<br />value: -6.717291e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-03-01<br />value: -5.530847e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5","date_col: 2022-03-02<br />value: -6.356239e+00<br />sim_number: sim_number 5<br />sim_number: sim_number 5"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(186,158,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 5","legendgroup":"sim_number 5","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,2.26033601173561,2.41511718203914,2.0339455084554,1.95958538069535,3.13297960856818,4.6235202311328,3.90234707877108,3.03325848348606,3.5322615476519,3.63253482216252,2.13888738262445,2.35406446286327,3.23204250259716,3.83146057124173,2.63128263298624,2.99208745896909,1.6598260656921,1.58413921532545,2.20499694521246,0.427257716624969,0.66248629371597,0.0681737232061475,0.051581731095985,1.05458861517594,1.21482543942866,0.208595081460684,-0.49728430620725,-2.19474863821636,-0.847249518454054,0.200999535425648],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-01<br />value:  2.260336e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-02<br />value:  2.415117e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-03<br />value:  2.033946e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-04<br />value:  1.959585e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-05<br />value:  3.132980e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-06<br />value:  4.623520e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-07<br />value:  3.902347e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-08<br />value:  3.033258e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-09<br />value:  3.532262e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-10<br />value:  3.632535e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-11<br />value:  2.138887e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-12<br />value:  2.354064e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-13<br />value:  3.232043e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-14<br />value:  3.831461e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-15<br />value:  2.631283e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-16<br />value:  2.992087e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-17<br />value:  1.659826e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-18<br />value:  1.584139e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-19<br />value:  2.204997e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-20<br />value:  4.272577e-01<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-21<br />value:  6.624863e-01<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-22<br />value:  6.817372e-02<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-23<br />value:  5.158173e-02<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-24<br />value:  1.054589e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-25<br />value:  1.214825e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-26<br />value:  2.085951e-01<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-27<br />value: -4.972843e-01<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-02-28<br />value: -2.194749e+00<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-03-01<br />value: -8.472495e-01<br />sim_number: sim_number 6<br />sim_number: sim_number 6","date_col: 2022-03-02<br />value:  2.009995e-01<br />sim_number: sim_number 6<br />sim_number: sim_number 6"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(167,164,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 6","legendgroup":"sim_number 6","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.325048937927761,0.395790063509159,0.253608538891143,-0.0435054408599792,0.03119055889234,0.621319682946432,1.98361304978139,1.68693467823769,0.463397029151523,0.558059939329715,0.482573526309421,1.03932103431957,2.18081463299865,2.36266555078212,1.92130157057074,1.0487185246182,-0.631968986256571,-0.542109849046148,-0.637780292847555,-0.776660933182643,-0.103355094020498,2.18929353094534,0.810788417660742,1.62102373776771,2.77491440993749,3.0739297464601,2.29184486453565,3.65843087237788,3.51334642885715,3.19346327932055],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-01<br />value:  3.250489e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-02<br />value:  3.957901e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-03<br />value:  2.536085e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-04<br />value: -4.350544e-02<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-05<br />value:  3.119056e-02<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-06<br />value:  6.213197e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-07<br />value:  1.983613e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-08<br />value:  1.686935e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-09<br />value:  4.633970e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-10<br />value:  5.580599e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-11<br />value:  4.825735e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-12<br />value:  1.039321e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-13<br />value:  2.180815e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-14<br />value:  2.362666e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-15<br />value:  1.921302e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-16<br />value:  1.048719e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-17<br />value: -6.319690e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-18<br />value: -5.421098e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-19<br />value: -6.377803e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-20<br />value: -7.766609e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-21<br />value: -1.033551e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-22<br />value:  2.189294e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-23<br />value:  8.107884e-01<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-24<br />value:  1.621024e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-25<br />value:  2.774914e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-26<br />value:  3.073930e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-27<br />value:  2.291845e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-02-28<br />value:  3.658431e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-03-01<br />value:  3.513346e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7","date_col: 2022-03-02<br />value:  3.193463e+00<br />sim_number: sim_number 7<br />sim_number: sim_number 7"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(144,170,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 7","legendgroup":"sim_number 7","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.509757950276906,0.903007284753473,0.36738600580072,0.275250805873825,1.33298795646032,2.6018360092436,2.43224354250148,1.32292853630234,2.14666507989655,2.92355378469682,3.78973790075094,5.0253882726326,4.34151128372171,2.83285916386139,2.15801491388838,3.51261639876063,2.7107224951581,1.53249574582899,1.10173240669437,0.728260443679767,0.390343071174794,1.10077228220357,-0.246395311574026,0.193316324929655,-0.00803116631290778,0.92170685872324,1.18954046404208,0.628737835991616,1.42551272132841,2.25975715633722],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-01<br />value:  5.097580e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-02<br />value:  9.030073e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-03<br />value:  3.673860e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-04<br />value:  2.752508e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-05<br />value:  1.332988e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-06<br />value:  2.601836e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-07<br />value:  2.432244e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-08<br />value:  1.322929e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-09<br />value:  2.146665e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-10<br />value:  2.923554e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-11<br />value:  3.789738e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-12<br />value:  5.025388e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-13<br />value:  4.341511e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-14<br />value:  2.832859e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-15<br />value:  2.158015e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-16<br />value:  3.512616e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-17<br />value:  2.710722e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-18<br />value:  1.532496e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-19<br />value:  1.101732e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-20<br />value:  7.282604e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-21<br />value:  3.903431e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-22<br />value:  1.100772e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-23<br />value: -2.463953e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-24<br />value:  1.933163e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-25<br />value: -8.031166e-03<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-26<br />value:  9.217069e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-27<br />value:  1.189540e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-02-28<br />value:  6.287378e-01<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-03-01<br />value:  1.425513e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8","date_col: 2022-03-02<br />value:  2.259757e+00<br />sim_number: sim_number 8<br />sim_number: sim_number 8"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(116,176,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 8","legendgroup":"sim_number 8","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,1.98942710234528,0.894686621802117,1.14125191087702,-0.591824356078438,-2.10311924461942,-0.697804206720369,-0.88619981437271,-1.31033450275333,-1.74518213522569,-1.12106040617906,-2.23141859892963,-3.43737658020871,-3.1827697514051,-3.57804918990013,-4.1011821407758,-4.499631371838,-5.1711389684611,-4.99980429393306,-5.62336917945214,-5.64844042862467,-5.39391356390489,-6.56589227246214,-6.56956539370611,-6.05192906542757,-7.1584531581192,-4.96084565784302,-3.83258102376852,-4.97450728762659,-6.4928032071429,-7.06188425855621],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-01<br />value:  1.989427e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-02<br />value:  8.946866e-01<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-03<br />value:  1.141252e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-04<br />value: -5.918244e-01<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-05<br />value: -2.103119e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-06<br />value: -6.978042e-01<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-07<br />value: -8.861998e-01<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-08<br />value: -1.310335e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-09<br />value: -1.745182e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-10<br />value: -1.121060e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-11<br />value: -2.231419e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-12<br />value: -3.437377e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-13<br />value: -3.182770e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-14<br />value: -3.578049e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-15<br />value: -4.101182e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-16<br />value: -4.499631e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-17<br />value: -5.171139e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-18<br />value: -4.999804e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-19<br />value: -5.623369e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-20<br />value: -5.648440e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-21<br />value: -5.393914e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-22<br />value: -6.565892e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-23<br />value: -6.569565e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-24<br />value: -6.051929e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-25<br />value: -7.158453e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-26<br />value: -4.960846e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-27<br />value: -3.832581e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-02-28<br />value: -4.974507e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-03-01<br />value: -6.492803e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9","date_col: 2022-03-02<br />value: -7.061884e+00<br />sim_number: sim_number 9<br />sim_number: sim_number 9"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(76,180,0,1)","dash":"solid"},"hoveron":"points","name":"sim_number 9","legendgroup":"sim_number 9","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.0452784861366945,-1.25260385796832,-1.19347309159756,-2.55746336727775,-2.1855591285158,-2.46224516475836,-3.35344919316708,-4.08243144317474,-4.00983118296095,-4.90257217432261,-4.36778664196787,-3.91889019221753,-4.47130117803741,-4.76001382782352,-6.75512108009155,-5.51853453134377,-5.22703766315707,-5.00499264762321,-4.50260156305487,-3.79893217880307,-3.10535015685455,-2.77455161004317,-0.733024496192701,-0.139757234884373,-0.642530012372801,-1.09518691218288,-1.06789022563553,-1.07864784232495,-0.804284722913054,-1.43170306492755],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-01<br />value:  4.527849e-02<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-02<br />value: -1.252604e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-03<br />value: -1.193473e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-04<br />value: -2.557463e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-05<br />value: -2.185559e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-06<br />value: -2.462245e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-07<br />value: -3.353449e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-08<br />value: -4.082431e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-09<br />value: -4.009831e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-10<br />value: -4.902572e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-11<br />value: -4.367787e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-12<br />value: -3.918890e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-13<br />value: -4.471301e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-14<br />value: -4.760014e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-15<br />value: -6.755121e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-16<br />value: -5.518535e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-17<br />value: -5.227038e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-18<br />value: -5.004993e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-19<br />value: -4.502602e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-20<br />value: -3.798932e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-21<br />value: -3.105350e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-22<br />value: -2.774552e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-23<br />value: -7.330245e-01<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-24<br />value: -1.397572e-01<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-25<br />value: -6.425300e-01<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-26<br />value: -1.095187e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-27<br />value: -1.067890e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-02-28<br />value: -1.078648e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-03-01<br />value: -8.042847e-01<br />sim_number: sim_number 10<br />sim_number: sim_number 10","date_col: 2022-03-02<br />value: -1.431703e+00<br />sim_number: sim_number 10<br />sim_number: sim_number 10"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,184,37,1)","dash":"solid"},"hoveron":"points","name":"sim_number 10","legendgroup":"sim_number 10","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,-0.0715115607965393,0.587804169609913,1.99747049377641,2.80973139717469,2.50278059799447,2.58526019408932,2.68532604765284,1.74056527062123,0.975459356486793,0.50160684339511,0.0244904295728936,0.556573685917184,0.437888854178934,0.525738388463519,-1.38185567309357,-0.997066872603582,-0.0287846597929797,0.0645280637455962,-0.975876044676169,-0.710249355942729,0.997546413168873,-0.675259731175282,-0.890193344156698,-0.498510476783888,1.98892177572548,1.93863033738516,1.20318736339239,-0.702132467315375,0.0123529418457476,2.26980300950367],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-01<br />value: -7.151156e-02<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-02<br />value:  5.878042e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-03<br />value:  1.997470e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-04<br />value:  2.809731e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-05<br />value:  2.502781e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-06<br />value:  2.585260e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-07<br />value:  2.685326e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-08<br />value:  1.740565e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-09<br />value:  9.754594e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-10<br />value:  5.016068e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-11<br />value:  2.449043e-02<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-12<br />value:  5.565737e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-13<br />value:  4.378889e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-14<br />value:  5.257384e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-15<br />value: -1.381856e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-16<br />value: -9.970669e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-17<br />value: -2.878466e-02<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-18<br />value:  6.452806e-02<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-19<br />value: -9.758760e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-20<br />value: -7.102494e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-21<br />value:  9.975464e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-22<br />value: -6.752597e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-23<br />value: -8.901933e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-24<br />value: -4.985105e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-25<br />value:  1.988922e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-26<br />value:  1.938630e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-27<br />value:  1.203187e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-02-28<br />value: -7.021325e-01<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-03-01<br />value:  1.235294e-02<br />sim_number: sim_number 11<br />sim_number: sim_number 11","date_col: 2022-03-02<br />value:  2.269803e+00<br />sim_number: sim_number 11<br />sim_number: sim_number 11"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,188,83,1)","dash":"solid"},"hoveron":"points","name":"sim_number 11","legendgroup":"sim_number 11","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,1.29611357160068,2.13208058011403,0.41404939854669,0.680196391028225,0.731792621595034,-0.505653311443577,0.724270099779275,-0.385424612953217,-0.138514539048225,-0.143009556517711,-1.40708611352173,-0.548533671090688,-1.40390867543314,-1.13260584326501,-0.809078826975425,-0.337997611517846,-0.573234301806639,0.19652277045703,-0.661647822899313,-0.957280895521704,-0.964822655307176,-0.613656986115105,0.0260811762355599,0.638391794748534,-0.564569341292425,-0.368420764956431,-0.463068961293733,-1.52200951417498,-2.08326712368933,-1.12280981276532],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-01<br />value:  1.296114e+00<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-02<br />value:  2.132081e+00<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-03<br />value:  4.140494e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-04<br />value:  6.801964e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-05<br />value:  7.317926e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-06<br />value: -5.056533e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-07<br />value:  7.242701e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-08<br />value: -3.854246e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-09<br />value: -1.385145e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-10<br />value: -1.430096e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-11<br />value: -1.407086e+00<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-12<br />value: -5.485337e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-13<br />value: -1.403909e+00<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-14<br />value: -1.132606e+00<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-15<br />value: -8.090788e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-16<br />value: -3.379976e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-17<br />value: -5.732343e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-18<br />value:  1.965228e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-19<br />value: -6.616478e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-20<br />value: -9.572809e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-21<br />value: -9.648227e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-22<br />value: -6.136570e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-23<br />value:  2.608118e-02<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-24<br />value:  6.383918e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-25<br />value: -5.645693e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-26<br />value: -3.684208e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-27<br />value: -4.630690e-01<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-02-28<br />value: -1.522010e+00<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-03-01<br />value: -2.083267e+00<br />sim_number: sim_number 12<br />sim_number: sim_number 12","date_col: 2022-03-02<br />value: -1.122810e+00<br />sim_number: sim_number 12<br />sim_number: sim_number 12"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,190,114,1)","dash":"solid"},"hoveron":"points","name":"sim_number 12","legendgroup":"sim_number 12","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,-0.343821748560069,-0.797980018325398,-1.18453758521642,-1.53177480354867,-2.63242253294102,-2.54538764894012,-1.65469630939737,-2.55877665489803,-1.42652112527602,-1.22046752305436,-2.03548765621495,-1.43112679051908,-1.0780933425963,-2.27920789971527,-2.3503943917043,-1.9365837926119,-2.7608357918966,-3.16321797689064,-4.23782412433771,-3.90030369460935,-4.47899127844597,-3.14097598548163,-3.17578821402652,-3.4351885598125,-2.84457067687395,-1.6052093702577,-0.661869768761019,-0.0998939927743269,1.13207860943491,3.37384609207152],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-01<br />value: -3.438217e-01<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-02<br />value: -7.979800e-01<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-03<br />value: -1.184538e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-04<br />value: -1.531775e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-05<br />value: -2.632423e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-06<br />value: -2.545388e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-07<br />value: -1.654696e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-08<br />value: -2.558777e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-09<br />value: -1.426521e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-10<br />value: -1.220468e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-11<br />value: -2.035488e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-12<br />value: -1.431127e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-13<br />value: -1.078093e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-14<br />value: -2.279208e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-15<br />value: -2.350394e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-16<br />value: -1.936584e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-17<br />value: -2.760836e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-18<br />value: -3.163218e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-19<br />value: -4.237824e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-20<br />value: -3.900304e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-21<br />value: -4.478991e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-22<br />value: -3.140976e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-23<br />value: -3.175788e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-24<br />value: -3.435189e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-25<br />value: -2.844571e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-26<br />value: -1.605209e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-27<br />value: -6.618698e-01<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-02-28<br />value: -9.989399e-02<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-03-01<br />value:  1.132079e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13","date_col: 2022-03-02<br />value:  3.373846e+00<br />sim_number: sim_number 13<br />sim_number: sim_number 13"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,192,141,1)","dash":"solid"},"hoveron":"points","name":"sim_number 13","legendgroup":"sim_number 13","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,-0.0792699186141737,-0.404712891708615,-0.600881940196129,-1.37329425102027,-1.19337060095043,0.0750147142566713,0.9949719076504,2.70888484587118,2.26926786761778,2.13940363100395,1.9127568541968,1.75904039431556,1.37421140110261,0.35275479952241,0.528255529572117,0.0836938363601971,-0.258096203666978,-0.45298235852854,-0.665468552054738,-1.78001814744304,-1.9823338768162,-1.8454358006192,-0.588010645772823,0.804907208488833,2.52864578504524,2.29914880689009,3.04679155144326,2.48049176393217,1.02707320973373,0.840005142760139],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-01<br />value: -7.926992e-02<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-02<br />value: -4.047129e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-03<br />value: -6.008819e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-04<br />value: -1.373294e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-05<br />value: -1.193371e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-06<br />value:  7.501471e-02<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-07<br />value:  9.949719e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-08<br />value:  2.708885e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-09<br />value:  2.269268e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-10<br />value:  2.139404e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-11<br />value:  1.912757e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-12<br />value:  1.759040e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-13<br />value:  1.374211e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-14<br />value:  3.527548e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-15<br />value:  5.282555e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-16<br />value:  8.369384e-02<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-17<br />value: -2.580962e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-18<br />value: -4.529824e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-19<br />value: -6.654686e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-20<br />value: -1.780018e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-21<br />value: -1.982334e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-22<br />value: -1.845436e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-23<br />value: -5.880106e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-24<br />value:  8.049072e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-25<br />value:  2.528646e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-26<br />value:  2.299149e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-27<br />value:  3.046792e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-02-28<br />value:  2.480492e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-03-01<br />value:  1.027073e+00<br />sim_number: sim_number 14<br />sim_number: sim_number 14","date_col: 2022-03-02<br />value:  8.400051e-01<br />sim_number: sim_number 14<br />sim_number: sim_number 14"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,193,165,1)","dash":"solid"},"hoveron":"points","name":"sim_number 14","legendgroup":"sim_number 14","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,2.662713440924,2.88929943650964,2.64331473117369,4.21980802146085,5.40874037577535,6.543254146056,7.46869025586737,7.92770290263587,6.70138244991051,6.49755638189878,8.99108967275468,9.34176886130823,8.78305408385574,9.36185932313564,9.79267695786329,10.8912806077256,11.7785351996201,12.9700997808551,12.6625667420358,13.1586202591124,12.7027156076055,12.5058155252111,12.8684538332242,12.9016506769529,12.8221412789877,13.911251368541,14.046247364691,13.0713960654777,14.3847716349917,14.6000061429113],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-01<br />value:  2.662713e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-02<br />value:  2.889299e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-03<br />value:  2.643315e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-04<br />value:  4.219808e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-05<br />value:  5.408740e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-06<br />value:  6.543254e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-07<br />value:  7.468690e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-08<br />value:  7.927703e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-09<br />value:  6.701382e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-10<br />value:  6.497556e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-11<br />value:  8.991090e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-12<br />value:  9.341769e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-13<br />value:  8.783054e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-14<br />value:  9.361859e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-15<br />value:  9.792677e+00<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-16<br />value:  1.089128e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-17<br />value:  1.177854e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-18<br />value:  1.297010e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-19<br />value:  1.266257e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-20<br />value:  1.315862e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-21<br />value:  1.270272e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-22<br />value:  1.250582e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-23<br />value:  1.286845e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-24<br />value:  1.290165e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-25<br />value:  1.282214e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-26<br />value:  1.391125e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-27<br />value:  1.404625e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-02-28<br />value:  1.307140e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-03-01<br />value:  1.438477e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15","date_col: 2022-03-02<br />value:  1.460001e+01<br />sim_number: sim_number 15<br />sim_number: sim_number 15"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,192,186,1)","dash":"solid"},"hoveron":"points","name":"sim_number 15","legendgroup":"sim_number 15","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.0288822164689083,-0.0279538826719646,0.345853511456013,1.14959543588747,1.64935558457596,1.37349633166359,2.03775625970864,2.59999983503604,2.35273902319452,2.66339227254488,2.63347536967074,3.41722983636829,3.50096554820229,2.42514261448088,2.74316437833707,3.01635647747802,1.12673798319886,1.13034741932896,2.90131593843595,4.57020923290998,3.55116725189537,2.52956447176536,1.67392452469298,3.06993590170558,2.39173157192857,1.24455094703178,1.63099589654115,0.711482048832155,1.63908658236822,1.25333834368295],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-01<br />value:  2.888222e-02<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-02<br />value: -2.795388e-02<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-03<br />value:  3.458535e-01<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-04<br />value:  1.149595e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-05<br />value:  1.649356e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-06<br />value:  1.373496e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-07<br />value:  2.037756e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-08<br />value:  2.600000e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-09<br />value:  2.352739e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-10<br />value:  2.663392e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-11<br />value:  2.633475e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-12<br />value:  3.417230e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-13<br />value:  3.500966e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-14<br />value:  2.425143e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-15<br />value:  2.743164e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-16<br />value:  3.016356e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-17<br />value:  1.126738e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-18<br />value:  1.130347e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-19<br />value:  2.901316e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-20<br />value:  4.570209e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-21<br />value:  3.551167e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-22<br />value:  2.529564e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-23<br />value:  1.673925e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-24<br />value:  3.069936e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-25<br />value:  2.391732e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-26<br />value:  1.244551e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-27<br />value:  1.630996e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-02-28<br />value:  7.114820e-01<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-03-01<br />value:  1.639087e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16","date_col: 2022-03-02<br />value:  1.253338e+00<br />sim_number: sim_number 16<br />sim_number: sim_number 16"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,190,206,1)","dash":"solid"},"hoveron":"points","name":"sim_number 16","legendgroup":"sim_number 16","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,1.32221349078453,2.50643430511776,1.63645989299667,1.7098418253069,1.05184139030516,0.928886673330505,-0.358217855537033,-0.000117603906527278,0.670410664103938,-0.176674804046676,-1.14607078977417,-2.68294094136212,-1.57055107074819,-2.20831185916097,-3.56322532814068,-2.99798773663034,-4.66009986804836,-4.00496999023215,-2.65126227255791,-2.59728021709101,-1.91966759570576,0.103642493107368,-1.37576016534549,-2.04854834134652,-2.44883758257231,-2.79825708852332,-4.21445493640516,-5.29367025337753,-5.46462726059228,-4.99417656667122],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-01<br />value:  1.322213e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-02<br />value:  2.506434e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-03<br />value:  1.636460e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-04<br />value:  1.709842e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-05<br />value:  1.051841e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-06<br />value:  9.288867e-01<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-07<br />value: -3.582179e-01<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-08<br />value: -1.176039e-04<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-09<br />value:  6.704107e-01<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-10<br />value: -1.766748e-01<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-11<br />value: -1.146071e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-12<br />value: -2.682941e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-13<br />value: -1.570551e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-14<br />value: -2.208312e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-15<br />value: -3.563225e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-16<br />value: -2.997988e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-17<br />value: -4.660100e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-18<br />value: -4.004970e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-19<br />value: -2.651262e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-20<br />value: -2.597280e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-21<br />value: -1.919668e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-22<br />value:  1.036425e-01<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-23<br />value: -1.375760e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-24<br />value: -2.048548e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-25<br />value: -2.448838e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-26<br />value: -2.798257e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-27<br />value: -4.214455e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-02-28<br />value: -5.293670e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-03-01<br />value: -5.464627e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17","date_col: 2022-03-02<br />value: -4.994177e+00<br />sim_number: sim_number 17<br />sim_number: sim_number 17"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,186,224,1)","dash":"solid"},"hoveron":"points","name":"sim_number 17","legendgroup":"sim_number 17","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,1.83936756131731,2.94950572209948,2.82772305834121,2.29921135256444,3.2910947453088,3.69433132658409,5.54292444281226,6.36240599070039,5.5952211767079,5.46785143175091,5.31710219876033,4.81724326794069,4.73615435457104,4.20514867610962,5.60698716334215,6.15564242849665,6.90993056936348,7.32646729908701,5.72599549579767,6.21756376612592,5.80015318678786,5.82831218699976,5.01670637565436,5.10622040671171,4.7217512215846,5.84801708620576,6.61457244758356,7.46477554051793,7.49165853250847,7.88002005380519],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-01<br />value:  1.839368e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-02<br />value:  2.949506e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-03<br />value:  2.827723e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-04<br />value:  2.299211e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-05<br />value:  3.291095e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-06<br />value:  3.694331e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-07<br />value:  5.542924e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-08<br />value:  6.362406e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-09<br />value:  5.595221e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-10<br />value:  5.467851e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-11<br />value:  5.317102e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-12<br />value:  4.817243e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-13<br />value:  4.736154e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-14<br />value:  4.205149e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-15<br />value:  5.606987e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-16<br />value:  6.155642e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-17<br />value:  6.909931e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-18<br />value:  7.326467e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-19<br />value:  5.725995e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-20<br />value:  6.217564e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-21<br />value:  5.800153e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-22<br />value:  5.828312e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-23<br />value:  5.016706e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-24<br />value:  5.106220e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-25<br />value:  4.721751e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-26<br />value:  5.848017e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-27<br />value:  6.614572e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-02-28<br />value:  7.464776e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-03-01<br />value:  7.491659e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18","date_col: 2022-03-02<br />value:  7.880020e+00<br />sim_number: sim_number 18<br />sim_number: sim_number 18"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,180,239,1)","dash":"solid"},"hoveron":"points","name":"sim_number 18","legendgroup":"sim_number 18","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.0849977539617015,-0.578200263438157,0.261911624399939,-0.808049302410861,-2.29539934849846,-1.88655411898595,-1.83611702075022,-1.1214259863216,0.571535510788035,0.6702008156422,-0.402917097249449,-0.93278701567906,-0.913038369936079,-1.7154402907945,-1.35396375137595,-0.542965808920212,0.0234377319215494,-1.23775091704474,-2.0346984921623,-3.25552787244616,-3.28876384050496,-1.5893886102649,-1.97532259774775,-0.204244189303676,-1.70215573155997,-0.231441606735861,-0.701722290404448,-1.06296381423516,-0.0073236822792812,-1.18844710718292],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-01<br />value:  8.499775e-02<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-02<br />value: -5.782003e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-03<br />value:  2.619116e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-04<br />value: -8.080493e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-05<br />value: -2.295399e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-06<br />value: -1.886554e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-07<br />value: -1.836117e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-08<br />value: -1.121426e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-09<br />value:  5.715355e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-10<br />value:  6.702008e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-11<br />value: -4.029171e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-12<br />value: -9.327870e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-13<br />value: -9.130384e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-14<br />value: -1.715440e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-15<br />value: -1.353964e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-16<br />value: -5.429658e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-17<br />value:  2.343773e-02<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-18<br />value: -1.237751e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-19<br />value: -2.034698e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-20<br />value: -3.255528e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-21<br />value: -3.288764e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-22<br />value: -1.589389e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-23<br />value: -1.975323e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-24<br />value: -2.042442e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-25<br />value: -1.702156e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-26<br />value: -2.314416e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-27<br />value: -7.017223e-01<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-02-28<br />value: -1.062964e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-03-01<br />value: -7.323682e-03<br />sim_number: sim_number 19<br />sim_number: sim_number 19","date_col: 2022-03-02<br />value: -1.188447e+00<br />sim_number: sim_number 19<br />sim_number: sim_number 19"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(0,173,251,1)","dash":"solid"},"hoveron":"points","name":"sim_number 19","legendgroup":"sim_number 19","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.966722415312998,1.43196051606079,0.0779079523542705,-1.23550696160385,-2.06790226397136,-2.85489485393952,-2.96636736811014,-1.59295352249192,-1.86405889315715,-1.66690752921921,-1.61348333118996,-1.86094369125666,-3.40759454067249,-4.52111317539492,-5.48337119326169,-6.10924220982625,-5.07363603759261,-5.34027306343404,-5.48250488277718,-5.58748496863397,-5.52264347798617,-4.86690679818899,-3.54041470558173,-3.6195062906454,-3.43401857425936,-4.34362946797147,-4.89835130454886,-4.79036358790762,-4.78736669094963,-7.15752174403358],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-01<br />value:  9.667224e-01<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-02<br />value:  1.431961e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-03<br />value:  7.790795e-02<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-04<br />value: -1.235507e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-05<br />value: -2.067902e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-06<br />value: -2.854895e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-07<br />value: -2.966367e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-08<br />value: -1.592954e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-09<br />value: -1.864059e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-10<br />value: -1.666908e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-11<br />value: -1.613483e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-12<br />value: -1.860944e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-13<br />value: -3.407595e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-14<br />value: -4.521113e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-15<br />value: -5.483371e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-16<br />value: -6.109242e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-17<br />value: -5.073636e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-18<br />value: -5.340273e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-19<br />value: -5.482505e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-20<br />value: -5.587485e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-21<br />value: -5.522643e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-22<br />value: -4.866907e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-23<br />value: -3.540415e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-24<br />value: -3.619506e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-25<br />value: -3.434019e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-26<br />value: -4.343629e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-27<br />value: -4.898351e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-02-28<br />value: -4.790364e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-03-01<br />value: -4.787367e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20","date_col: 2022-03-02<br />value: -7.157522e+00<br />sim_number: sim_number 20<br />sim_number: sim_number 20"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(30,163,255,1)","dash":"solid"},"hoveron":"points","name":"sim_number 20","legendgroup":"sim_number 20","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.403684474983031,2.4504985401953,1.80201011342026,2.12801525347238,2.93542804888819,3.33107101977509,4.11021863152892,4.23852578023895,5.36301493775357,3.18609087531385,3.23548465495324,2.53173300244532,2.72109765891053,2.83048345539343,2.90853215099615,2.27475086894595,2.60281140028803,3.6540818932521,4.7642444652018,3.36988987513145,4.77137008434279,4.64867330345057,3.80346177518526,3.87925206887537,3.51058381360612,4.5286299851004,4.82531582167838,4.01527213717138,3.02271887859884,3.85053285546301],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-01<br />value:  4.036845e-01<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-02<br />value:  2.450499e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-03<br />value:  1.802010e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-04<br />value:  2.128015e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-05<br />value:  2.935428e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-06<br />value:  3.331071e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-07<br />value:  4.110219e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-08<br />value:  4.238526e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-09<br />value:  5.363015e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-10<br />value:  3.186091e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-11<br />value:  3.235485e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-12<br />value:  2.531733e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-13<br />value:  2.721098e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-14<br />value:  2.830483e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-15<br />value:  2.908532e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-16<br />value:  2.274751e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-17<br />value:  2.602811e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-18<br />value:  3.654082e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-19<br />value:  4.764244e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-20<br />value:  3.369890e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-21<br />value:  4.771370e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-22<br />value:  4.648673e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-23<br />value:  3.803462e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-24<br />value:  3.879252e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-25<br />value:  3.510584e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-26<br />value:  4.528630e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-27<br />value:  4.825316e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-02-28<br />value:  4.015272e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-03-01<br />value:  3.022719e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21","date_col: 2022-03-02<br />value:  3.850533e+00<br />sim_number: sim_number 21<br />sim_number: sim_number 21"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(116,152,255,1)","dash":"solid"},"hoveron":"points","name":"sim_number 21","legendgroup":"sim_number 21","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.518214933408764,0.123244434004802,-0.158443530345073,-1.50551876931453,-2.02226552896541,-1.70874442567799,-2.49223317531535,-2.71808279555796,-4.75101336573344,-4.27761899424433,-3.36187008195588,-2.27524917183445,-4.14288141473862,-3.37298090476147,-3.15178554620732,-3.70179625757749,-1.63141353118066,-1.14479655017335,-1.29414221308647,-0.61556381994741,-0.792092994355991,-0.318413282107511,-1.44975046843439,-1.5956824240729,-0.708202121151168,-0.932902676182301,-0.579402721592793,0.944185596552548,2.81294334245254,2.32160656708644],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-01<br />value:  5.182149e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-02<br />value:  1.232444e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-03<br />value: -1.584435e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-04<br />value: -1.505519e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-05<br />value: -2.022266e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-06<br />value: -1.708744e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-07<br />value: -2.492233e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-08<br />value: -2.718083e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-09<br />value: -4.751013e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-10<br />value: -4.277619e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-11<br />value: -3.361870e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-12<br />value: -2.275249e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-13<br />value: -4.142881e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-14<br />value: -3.372981e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-15<br />value: -3.151786e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-16<br />value: -3.701796e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-17<br />value: -1.631414e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-18<br />value: -1.144797e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-19<br />value: -1.294142e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-20<br />value: -6.155638e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-21<br />value: -7.920930e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-22<br />value: -3.184133e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-23<br />value: -1.449750e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-24<br />value: -1.595682e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-25<br />value: -7.082021e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-26<br />value: -9.329027e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-27<br />value: -5.794027e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-02-28<br />value:  9.441856e-01<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-03-01<br />value:  2.812943e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22","date_col: 2022-03-02<br />value:  2.321607e+00<br />sim_number: sim_number 22<br />sim_number: sim_number 22"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(160,140,255,1)","dash":"solid"},"hoveron":"points","name":"sim_number 22","legendgroup":"sim_number 22","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.81483551099143,-0.10988405460219,-0.0791357937476212,0.257866583524014,0.863027528733103,-0.338179739314598,-1.59937344056428,-0.857675074063946,-0.00102639601942573,-0.862147868250234,-0.825342391176111,0.177835060377909,0.27461793342077,1.45789709601597,1.25551339748461,1.32991770404807,2.03201089100327,2.18893933953294,2.78995720293582,0.481380498096953,0.343085531938384,1.10295111535823,1.34193746646622,1.45764740351919,1.48012265629643,1.25411198153864,2.30249721085283,0.81031820828787,1.13549956200687,0.698493181474992],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-01<br />value:  8.148355e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-02<br />value: -1.098841e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-03<br />value: -7.913579e-02<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-04<br />value:  2.578666e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-05<br />value:  8.630275e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-06<br />value: -3.381797e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-07<br />value: -1.599373e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-08<br />value: -8.576751e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-09<br />value: -1.026396e-03<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-10<br />value: -8.621479e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-11<br />value: -8.253424e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-12<br />value:  1.778351e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-13<br />value:  2.746179e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-14<br />value:  1.457897e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-15<br />value:  1.255513e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-16<br />value:  1.329918e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-17<br />value:  2.032011e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-18<br />value:  2.188939e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-19<br />value:  2.789957e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-20<br />value:  4.813805e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-21<br />value:  3.430855e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-22<br />value:  1.102951e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-23<br />value:  1.341937e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-24<br />value:  1.457647e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-25<br />value:  1.480123e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-26<br />value:  1.254112e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-27<br />value:  2.302497e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-02-28<br />value:  8.103182e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-03-01<br />value:  1.135500e+00<br />sim_number: sim_number 23<br />sim_number: sim_number 23","date_col: 2022-03-02<br />value:  6.984932e-01<br />sim_number: sim_number 23<br />sim_number: sim_number 23"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(192,127,255,1)","dash":"solid"},"hoveron":"points","name":"sim_number 23","legendgroup":"sim_number 23","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,-0.626569680835475,-0.261056225090384,-0.0990218577067254,0.64821659185527,-1.90197378144004,-1.31994032475144,0.506776404288202,0.458851315765566,0.696511031883538,-0.251754898424088,0.348789823761708,-1.358465568223,-0.815476821961916,-1.05229626362643,-0.640430491607113,0.132167934906165,0.302637912271771,0.445738262196042,1.30563767792648,1.7276544762114,2.61658166702541,2.59063267674477,2.51548214156051,4.25872705463891,5.17057221853438,4.16316124451876,3.76788085789094,3.00056498124635,3.49434776034315,4.0069408321868],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-01<br />value: -6.265697e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-02<br />value: -2.610562e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-03<br />value: -9.902186e-02<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-04<br />value:  6.482166e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-05<br />value: -1.901974e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-06<br />value: -1.319940e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-07<br />value:  5.067764e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-08<br />value:  4.588513e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-09<br />value:  6.965110e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-10<br />value: -2.517549e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-11<br />value:  3.487898e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-12<br />value: -1.358466e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-13<br />value: -8.154768e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-14<br />value: -1.052296e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-15<br />value: -6.404305e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-16<br />value:  1.321679e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-17<br />value:  3.026379e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-18<br />value:  4.457383e-01<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-19<br />value:  1.305638e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-20<br />value:  1.727654e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-21<br />value:  2.616582e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-22<br />value:  2.590633e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-23<br />value:  2.515482e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-24<br />value:  4.258727e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-25<br />value:  5.170572e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-26<br />value:  4.163161e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-27<br />value:  3.767881e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-02-28<br />value:  3.000565e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-03-01<br />value:  3.494348e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24","date_col: 2022-03-02<br />value:  4.006941e+00<br />sim_number: sim_number 24<br />sim_number: sim_number 24"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(216,115,252,1)","dash":"solid"},"hoveron":"points","name":"sim_number 24","legendgroup":"sim_number 24","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,2.13354336898818,2.27131926455136,3.43116420731921,3.3802257230252,3.46512858414723,2.78071060743722,2.5441484691038,3.31356943797583,3.47922632667697,3.61337714928463,2.78207876496578,1.90178575753898,1.26779847953116,1.31765829269404,1.15136760189828,0.421911956977088,-0.463229374979234,0.722854666351381,1.56186905529363,1.25436175453054,-0.431083213989139,-1.49416234995454,-1.07955912363842,-3.19131105786414,-3.88914475603997,-3.91442439548704,-3.85093116676498,-3.84658653903484,-3.19495807811232,-3.77973781099546],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-01<br />value:  2.133543e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-02<br />value:  2.271319e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-03<br />value:  3.431164e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-04<br />value:  3.380226e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-05<br />value:  3.465129e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-06<br />value:  2.780711e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-07<br />value:  2.544148e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-08<br />value:  3.313569e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-09<br />value:  3.479226e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-10<br />value:  3.613377e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-11<br />value:  2.782079e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-12<br />value:  1.901786e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-13<br />value:  1.267798e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-14<br />value:  1.317658e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-15<br />value:  1.151368e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-16<br />value:  4.219120e-01<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-17<br />value: -4.632294e-01<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-18<br />value:  7.228547e-01<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-19<br />value:  1.561869e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-20<br />value:  1.254362e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-21<br />value: -4.310832e-01<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-22<br />value: -1.494162e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-23<br />value: -1.079559e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-24<br />value: -3.191311e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-25<br />value: -3.889145e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-26<br />value: -3.914424e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-27<br />value: -3.850931e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-02-28<br />value: -3.846587e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-03-01<br />value: -3.194958e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25","date_col: 2022-03-02<br />value: -3.779738e+00<br />sim_number: sim_number 25<br />sim_number: sim_number 25"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(234,106,240,1)","dash":"solid"},"hoveron":"points","name":"sim_number 25","legendgroup":"sim_number 25","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.889648258543829,1.10516513635277,-0.881353744755313,-1.20179740814815,-0.470810775779601,-1.40040459185888,-0.786266164204512,-0.806977523118048,-2.38400930964022,-3.53909754213432,-3.10803972314373,-2.09527417519458,-0.638028060513144,-0.599080830780234,-1.76165480887836,-2.2227320817168,-1.66171864696437,-1.47835390633213,-3.07695063756728,-3.49680004860783,-3.20024689690935,-3.50941789475669,-3.29724384442531,-2.63911335687131,-1.99279285333916,-2.0969371436585,-1.24281755736154,-1.93542721122823,-3.96425845820883,-2.5635144403809],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-01<br />value:  8.896483e-01<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-02<br />value:  1.105165e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-03<br />value: -8.813537e-01<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-04<br />value: -1.201797e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-05<br />value: -4.708108e-01<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-06<br />value: -1.400405e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-07<br />value: -7.862662e-01<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-08<br />value: -8.069775e-01<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-09<br />value: -2.384009e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-10<br />value: -3.539098e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-11<br />value: -3.108040e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-12<br />value: -2.095274e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-13<br />value: -6.380281e-01<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-14<br />value: -5.990808e-01<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-15<br />value: -1.761655e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-16<br />value: -2.222732e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-17<br />value: -1.661719e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-18<br />value: -1.478354e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-19<br />value: -3.076951e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-20<br />value: -3.496800e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-21<br />value: -3.200247e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-22<br />value: -3.509418e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-23<br />value: -3.297244e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-24<br />value: -2.639113e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-25<br />value: -1.992793e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-26<br />value: -2.096937e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-27<br />value: -1.242818e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-02-28<br />value: -1.935427e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-03-01<br />value: -3.964258e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26","date_col: 2022-03-02<br />value: -2.563514e+00<br />sim_number: sim_number 26<br />sim_number: sim_number 26"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(247,99,225,1)","dash":"solid"},"hoveron":"points","name":"sim_number 26","legendgroup":"sim_number 26","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.452974200421747,0.140870537483094,0.217554686498004,0.436852764468752,1.86759229436262,2.02387390720465,2.36407333672597,3.20463880209997,5.30378250465602,6.03518074310563,5.84382165932158,6.14587736790268,7.06780133805642,6.62421992504934,8.14441989434485,7.60127655401154,6.06742052431118,5.38657590365217,5.49073528915565,5.54374504640013,6.48272088449203,4.4311077152939,3.91901334317684,3.52357537339997,2.31046980683386,2.90245874063842,2.5062371195612,1.73264057461808,1.3801869546038,1.99244464529934],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-01<br />value:  4.529742e-01<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-02<br />value:  1.408705e-01<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-03<br />value:  2.175547e-01<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-04<br />value:  4.368528e-01<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-05<br />value:  1.867592e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-06<br />value:  2.023874e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-07<br />value:  2.364073e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-08<br />value:  3.204639e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-09<br />value:  5.303783e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-10<br />value:  6.035181e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-11<br />value:  5.843822e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-12<br />value:  6.145877e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-13<br />value:  7.067801e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-14<br />value:  6.624220e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-15<br />value:  8.144420e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-16<br />value:  7.601277e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-17<br />value:  6.067421e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-18<br />value:  5.386576e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-19<br />value:  5.490735e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-20<br />value:  5.543745e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-21<br />value:  6.482721e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-22<br />value:  4.431108e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-23<br />value:  3.919013e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-24<br />value:  3.523575e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-25<br />value:  2.310470e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-26<br />value:  2.902459e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-27<br />value:  2.506237e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-02-28<br />value:  1.732641e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-03-01<br />value:  1.380187e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27","date_col: 2022-03-02<br />value:  1.992445e+00<br />sim_number: sim_number 27<br />sim_number: sim_number 27"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(254,97,206,1)","dash":"solid"},"hoveron":"points","name":"sim_number 27","legendgroup":"sim_number 27","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,2.62687259656914,1.81091573903382,1.59266612891861,3.1213528387215,4.0112388519565,4.6685634479101,4.51382711519173,4.99790146405919,4.46574582576871,5.26621819588327,4.5799485212321,4.64231034526554,3.85308267669669,3.83160395867989,2.80382778316408,1.95744829160868,1.90337677393073,1.62511346711085,1.82222601111692,1.50585935466876,1.24691523431271,1.69394988401271,1.9466806793093,1.55247391214844,1.02941183907744,-0.875141685212983,-0.703102132501028,-0.573737374390697,-1.32722806122696,-0.112294996567144],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-01<br />value:  2.626873e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-02<br />value:  1.810916e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-03<br />value:  1.592666e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-04<br />value:  3.121353e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-05<br />value:  4.011239e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-06<br />value:  4.668563e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-07<br />value:  4.513827e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-08<br />value:  4.997901e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-09<br />value:  4.465746e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-10<br />value:  5.266218e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-11<br />value:  4.579949e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-12<br />value:  4.642310e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-13<br />value:  3.853083e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-14<br />value:  3.831604e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-15<br />value:  2.803828e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-16<br />value:  1.957448e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-17<br />value:  1.903377e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-18<br />value:  1.625113e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-19<br />value:  1.822226e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-20<br />value:  1.505859e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-21<br />value:  1.246915e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-22<br />value:  1.693950e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-23<br />value:  1.946681e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-24<br />value:  1.552474e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-25<br />value:  1.029412e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-26<br />value: -8.751417e-01<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-27<br />value: -7.031021e-01<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-02-28<br />value: -5.737374e-01<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-03-01<br />value: -1.327228e+00<br />sim_number: sim_number 28<br />sim_number: sim_number 28","date_col: 2022-03-02<br />value: -1.122950e-01<br />sim_number: sim_number 28<br />sim_number: sim_number 28"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(255,98,186,1)","dash":"solid"},"hoveron":"points","name":"sim_number 28","legendgroup":"sim_number 28","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,0.0467481867581379,-0.0797411509643961,-0.454009993194372,-1.08512855978963,0.274132698917375,1.04166331708889,2.04042163600499,2.3195336307656,2.88322132960202,1.59156368092093,2.17645340847597,1.94109072529326,1.02152869496017,1.29230444661748,-0.0293444506684233,0.61946164623491,0.0691122449130182,1.0739132922512,2.02073727520749,2.64167053702268,2.72756642289068,4.36253869581254,4.26718101985673,3.95659931397131,3.81879182066289,2.62023748259131,1.90536136670692,2.24074734973675,2.2276998253409,2.58443682638989],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-01<br />value:  4.674819e-02<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-02<br />value: -7.974115e-02<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-03<br />value: -4.540100e-01<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-04<br />value: -1.085129e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-05<br />value:  2.741327e-01<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-06<br />value:  1.041663e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-07<br />value:  2.040422e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-08<br />value:  2.319534e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-09<br />value:  2.883221e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-10<br />value:  1.591564e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-11<br />value:  2.176453e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-12<br />value:  1.941091e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-13<br />value:  1.021529e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-14<br />value:  1.292304e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-15<br />value: -2.934445e-02<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-16<br />value:  6.194616e-01<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-17<br />value:  6.911224e-02<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-18<br />value:  1.073913e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-19<br />value:  2.020737e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-20<br />value:  2.641671e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-21<br />value:  2.727566e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-22<br />value:  4.362539e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-23<br />value:  4.267181e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-24<br />value:  3.956599e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-25<br />value:  3.818792e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-26<br />value:  2.620237e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-27<br />value:  1.905361e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-02-28<br />value:  2.240747e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-03-01<br />value:  2.227700e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29","date_col: 2022-03-02<br />value:  2.584437e+00<br />sim_number: sim_number 29<br />sim_number: sim_number 29"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(255,103,163,1)","dash":"solid"},"hoveron":"points","name":"sim_number 29","legendgroup":"sim_number 29","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035,19036,19037,19038,19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053],"y":[0.981604090001992,1.68100765704635,2.44470920020941,2.25885061604566,0.616988804776316,0.256104541864114,0.118908046653052,0.308530320519298,0.285762070931974,0.884148728499799,-0.80671153460925,-1.52876888621905,-1.72718424292336,-2.13178959430285,-1.84699210580434,-2.13120623589704,-3.24754718640553,-3.09534506515639,-4.22292009612381,-5.81764002017215,-6.48253150163658,-7.33752896221098,-8.20573464320163,-9.4481173400949,-8.48911613141032,-8.56379428676066,-7.31982877090156,-7.52662416782742,-8.19965750660126,-9.54173892635102,-10.2899982644794],"text":["date_col: 2022-01-31<br />value:  9.816041e-01<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-01<br />value:  1.681008e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-02<br />value:  2.444709e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-03<br />value:  2.258851e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-04<br />value:  6.169888e-01<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-05<br />value:  2.561045e-01<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-06<br />value:  1.189080e-01<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-07<br />value:  3.085303e-01<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-08<br />value:  2.857621e-01<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-09<br />value:  8.841487e-01<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-10<br />value: -8.067115e-01<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-11<br />value: -1.528769e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-12<br />value: -1.727184e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-13<br />value: -2.131790e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-14<br />value: -1.846992e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-15<br />value: -2.131206e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-16<br />value: -3.247547e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-17<br />value: -3.095345e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-18<br />value: -4.222920e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-19<br />value: -5.817640e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-20<br />value: -6.482532e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-21<br />value: -7.337529e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-22<br />value: -8.205735e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-23<br />value: -9.448117e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-24<br />value: -8.489116e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-25<br />value: -8.563794e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-26<br />value: -7.319829e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-27<br />value: -7.526624e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-02-28<br />value: -8.199658e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-03-01<br />value: -9.541739e+00<br />sim_number: sim_number 30<br />sim_number: sim_number 30","date_col: 2022-03-02<br />value: -1.029000e+01<br />sim_number: sim_number 30<br />sim_number: sim_number 30"],"type":"scatter","mode":"lines","line":{"width":1.88976377952756,"color":"rgba(254,110,137,1)","dash":"solid"},"hoveron":"points","name":"sim_number 30","legendgroup":"sim_number 30","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.7625570776256,"r":7.30593607305936,"b":40.1826484018265,"l":43.1050228310502},"font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"title":{"text":"Brownian Motion","font":{"color":"rgba(0,0,0,1)","family":"","size":17.5342465753425},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[18990,19056],"tickmode":"array","ticktext":["Jan 01","Jan 15","Feb 01","Feb 15","Mar 01"],"tickvals":[18993,19007,19024,19038,19052],"categoryorder":"array","categoryarray":["Jan 01","Jan 15","Feb 01","Feb 15","Mar 01"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"date_col","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-12.15557769699,15.874081563859],"tickmode":"array","ticktext":["-10","-5","0","5","10","15"],"tickvals":[-10,-5,0,5,10,15],"categoryorder":"array","categoryarray":["-10","-5","0","5","10","15"],"nticks":null,"ticks":"","tickcolor":null,"ticklen":3.65296803652968,"tickwidth":0,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"value","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":null,"bordercolor":null,"borderwidth":0,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"2f147e6f69df":{"x":{},"y":{},"colour":{},"type":"scatter"}},"cur_data":"2f147e6f69df","visdat":{"2f147e6f69df":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>And with a static <code>ggplot2</code> plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">rn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">31</span>)</span>
<span id="cb15-2">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb15-3"><span class="at" style="color: #657422;">date_col =</span> <span class="fu" style="color: #4758AB;">seq.Date</span>(<span class="at" style="color: #657422;">from =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-01-01"</span>),</span>
<span id="cb15-4">                      <span class="at" style="color: #657422;">to =</span> <span class="fu" style="color: #4758AB;">as.Date</span>(<span class="st" style="color: #20794D;">"2022-01-31"</span>),</span>
<span id="cb15-5">                      <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"day"</span>),</span>
<span id="cb15-6"> <span class="at" style="color: #657422;">value =</span> rn</span>
<span id="cb15-7">)</span>
<span id="cb15-8"></span>
<span id="cb15-9"><span class="fu" style="color: #4758AB;">ts_brownian_motion_augment</span>(</span>
<span id="cb15-10">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb15-11">  <span class="at" style="color: #657422;">.date_col =</span> date_col,</span>
<span id="cb15-12">  <span class="at" style="color: #657422;">.value_col =</span> value,</span>
<span id="cb15-13">  <span class="at" style="color: #657422;">.time =</span> <span class="dv" style="color: #AD0000;">30</span>,</span>
<span id="cb15-14">  <span class="at" style="color: #657422;">.num_sims =</span> <span class="dv" style="color: #AD0000;">30</span></span>
<span id="cb15-15">) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb15-16">  <span class="fu" style="color: #4758AB;">ts_brownian_motion_plot</span>(date_col, value)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-30/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Thank you for reading, and Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>timeseries</category>
  <category>healthyrts</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-30/index.html</guid>
  <pubDate>Mon, 30 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Service Line Grouping with {healthyR}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyr-2023-01-27/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Healthcare data analysis can be a complex and time-consuming task, but it doesn’t have to be. Meet <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a>, your new go-to R package for all things healthcare data analysis. With <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a>, you can easily and efficiently analyze your healthcare data, and make sense of the information it contains.</p>
<p>One of the key features of <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> is the <a href="https://www.spsanderson.com/healthyR/reference/service_line_augment.html">service_line_augment()</a> function. This function is designed to help you quickly and easily append a vector to a <code>data.frame</code> or <code>tibble</code> that is passed to the <code>.data</code> parameter. In order to use this function, you will need a <code>data.frame</code> or <code>tibble</code> with a <strong>principal diagnosis</strong> column, a <strong>principal procedure</strong> column, and a column for the <strong>DRG number</strong>. These are needed so that the function can join the <em>dx_cc_mapping</em> and <em>px_cc_mapping</em> columns to provide the <strong>service line</strong>.</p>
<p>The <a href="https://www.spsanderson.com/healthyR/reference/service_line_augment.html">service_line_augment()</a> function is especially useful for analyzing healthcare data that is coded using ICD Version 10. This version of the ICD coding system is widely used in the healthcare industry, and the <a href="https://www.spsanderson.com/healthyR/reference/service_line_augment.html">service_line_augment()</a> function is specifically designed to work with it. With this function, you can quickly and easily append a vector to your data.frame or tibble that provides the service line for each visit.</p>
<p>In addition to the <a href="https://www.spsanderson.com/healthyR/reference/service_line_augment.html">service_line_augment()</a> function, <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> also includes a wide range of other useful tools and functions for healthcare data analysis. Whether you’re looking to analyze claims data, clinical data, or any other type of healthcare data, <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> has you covered.</p>
<p>So why wait? Download <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a> today and start making sense of your healthcare data! With <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a>, you can easily and efficiently analyze your healthcare data, and make sense of the information it contains.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">service_line_augment</span>(.data, .dx_col, .px_col, .drg_col)</span></code></pre></div>
</div>
<p>Now let’s look at the arguments to the parameters.</p>
<ul>
<li><code>.data</code> - The data being passed that will be augmented by the function.</li>
<li><code>.dx_col</code> - The column containing the Principal Diagnosis for the discharge.</li>
<li><code>.px_col</code> - The column containing the Principal Coded Procedure for the discharge. It is possible that this could be blank.</li>
<li><code>.drg_col</code> - The DRG Number coded to the inpatient discharge.</li>
</ul>
<p>Now for some examples.</p>
</section>
<section id="example" class="level1">
<h1>Example</h1>
<p>First if you have not already, install <a href="https://www.spsanderson.com/healthyR/"><code>{healthyR}</code></a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"healthyR"</span>)</span></code></pre></div>
</div>
<p>Here we go.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR)</span>
<span id="cb3-2"></span>
<span id="cb3-3">df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb3-4">  <span class="at" style="color: #657422;">dx_col =</span> <span class="st" style="color: #20794D;">"F10.10"</span>,</span>
<span id="cb3-5">  <span class="at" style="color: #657422;">px_col =</span> <span class="cn" style="color: #8f5902;">NA</span>,</span>
<span id="cb3-6">  <span class="at" style="color: #657422;">drg_col =</span> <span class="st" style="color: #20794D;">"896"</span></span>
<span id="cb3-7">)</span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;">service_line_augment</span>(</span>
<span id="cb3-10">  <span class="at" style="color: #657422;">.data =</span> df,</span>
<span id="cb3-11">  <span class="at" style="color: #657422;">.dx_col =</span> dx_col,</span>
<span id="cb3-12">  <span class="at" style="color: #657422;">.px_col =</span> px_col,</span>
<span id="cb3-13">  <span class="at" style="color: #657422;">.drg_col =</span> drg_col</span>
<span id="cb3-14">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 × 4
  dx_col px_col drg_col service_line 
  &lt;chr&gt;  &lt;lgl&gt;  &lt;chr&gt;   &lt;chr&gt;        
1 F10.10 NA     896     alcohol_abuse</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>weeklytip</category>
  <category>augment</category>
  <category>healthyr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-healthyr-2023-01-27/index.html</guid>
  <pubDate>Fri, 27 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Transforming Your Data: A Guide to Popular Methods and How to Implement Them with {healthyR.ai}</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Transforming data refers to the process of changing the scale or distribution of a variable in order to make it more suitable for analysis. There are many different methods for transforming data, and each has its own specific use case.</p>
<ol type="1">
<li>Box-Cox: This is a method for transforming data that is positively skewed (i.e., has a long tail to the right) into a more normal distribution. It uses a power transformation to adjust the scale of the data.</li>
<li>Basis Spline: This is a type of non-parametric regression that uses splines (piecewise polynomials) to model the relationship between a dependent variable and one or more independent variables.</li>
<li>Log: This is a method for transforming data that is positively skewed (i.e., has a long tail to the right) into a more normal distribution. It uses the logarithm function to adjust the scale of the data.</li>
<li>Logit: This is a method for transforming binary data (i.e., data with only two possible values) into a continuous scale. It uses the logistic function to adjust the scale of the data.</li>
<li>Natural Spline: This is a type of non-parametric regression that uses splines (piecewise polynomials) to model the relationship between a dependent variable and one or more independent variables, where the splines are chosen to be as smooth as possible.</li>
<li>Rectified Linear Unit (ReLU): This is a type of activation function used in artificial neural networks. It is used to introduce non-linearity in the output of a neuron.</li>
<li>Square Root: This is a method for transforming data that is positively skewed (i.e., has a long tail to the right) into a more normal distribution. It uses the square root function to adjust the scale of the data.</li>
<li>Yeo-Johnson: This is a power transformation that works well for data that is positively or negatively skewed. It is a generalization of the Box-Cox transformation and handles zero and negative data.</li>
</ol>
<p>The R library <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a> provides a function called <a href="https://www.spsanderson.com/healthyR.ai/reference/hai_data_transform.html"><code>hai_data_transform()</code></a> that allows users to easily apply any of these transforms to their data. The function takes in the data and the type of transformation as arguments, and returns the transformed data. This makes it easy for users to experiment with different transformations and see which one works best for their data.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Let’s take a look at the full function call.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb1-2">  <span class="at" style="color: #657422;">.recipe_object =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-3">  ...,</span>
<span id="cb1-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"log"</span>,</span>
<span id="cb1-5">  <span class="at" style="color: #657422;">.bc_limits =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb1-6">  <span class="at" style="color: #657422;">.bc_num_unique =</span> <span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb1-7">  <span class="at" style="color: #657422;">.bs_deg_free =</span> <span class="cn" style="color: #8f5902;">NULL</span>,</span>
<span id="cb1-8">  <span class="at" style="color: #657422;">.bs_degree =</span> <span class="dv" style="color: #AD0000;">3</span>,</span>
<span id="cb1-9">  <span class="at" style="color: #657422;">.log_base =</span> <span class="fu" style="color: #4758AB;">exp</span>(<span class="dv" style="color: #AD0000;">1</span>),</span>
<span id="cb1-10">  <span class="at" style="color: #657422;">.log_offset =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-11">  <span class="at" style="color: #657422;">.logit_offset =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-12">  <span class="at" style="color: #657422;">.ns_deg_free =</span> <span class="dv" style="color: #AD0000;">2</span>,</span>
<span id="cb1-13">  <span class="at" style="color: #657422;">.rel_shift =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb1-14">  <span class="at" style="color: #657422;">.rel_reverse =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb1-15">  <span class="at" style="color: #657422;">.rel_smooth =</span> <span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb1-16">  <span class="at" style="color: #657422;">.yj_limits =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb1-17">  <span class="at" style="color: #657422;">.yj_num_unique =</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb1-18">)</span></code></pre></div>
</div>
<p>Now let’s go over the arguments to the parameters.</p>
<ul>
<li><code>.recipe_object</code> - The data that you want to process</li>
<li><code>...</code> - One or more selector functions to choose variables to be imputed. When used with imp_vars, these dots indicate which variables are used to predict the missing data in each variable. See selections() for more details</li>
<li><code>.type_of_scale</code> - This is a quoted argument and can be one of the following:
<ul>
<li>“boxcox”</li>
<li>“bs”</li>
<li>“log”</li>
<li>“logit”</li>
<li>“ns”</li>
<li>“relu”</li>
<li>“sqrt”</li>
<li>“yeojohnson</li>
</ul></li>
<li><code>.bc_limits</code> - A length 2 numeric vector defining the range to compute the transformation parameter lambda.</li>
<li><code>.bc_num_unique</code> - An integer to specify minimum required unique values to evaluate for a transformation</li>
<li><code>.bs_deg_free</code> - The degrees of freedom for the spline. As the degrees of freedom for a spline increase, more flexible and complex curves can be generated. When a single degree of freedom is used, the result is a rescaled version of the original data.</li>
<li><code>.bs_degree</code> - Degree of polynomial spline (integer).</li>
<li><code>.log_base</code> - A numeric value for the base.</li>
<li><code>.log_offset</code> - An optional value to add to the data prior to logging (to avoid log(0))</li>
<li><code>.logit_offset</code> - A numeric value to modify values of the columns that are either one or zero. They are modifed to be x - offset or offset respectively.</li>
<li><code>.ns_deg_free</code> - The degrees of freedom for the natural spline. As the degrees of freedom for a natural spline increase, more flexible and complex curves can be generated. When a single degree of freedom is used, the result is a rescaled version of the original data.</li>
<li><code>.rel_shift</code> - A numeric value dictating a translation to apply to the data.</li>
<li><code>.rel_reverse</code> - A logical to indicate if the left hinge should be used as opposed to the right hinge.</li>
<li><code>.rel_smooth</code> - A logical indicating if hte softplus function, a smooth approximation to the rectified linear transformation, should be used.</li>
<li><code>.yj_limits</code> - A length 2 numeric vector defining the range to compute the transformation parameter lambda.</li>
<li><code>.yj_num_unique</code> - An integer where data that have less possible values will not be evaluated for a transformation.</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s look over some examples. For an example data set we are going to pick on the <strong>mtcars</strong> data set as the histogram will prove to be skewed which makes it a good candidate to test these transformations on.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"healthyR.ai"</span>)</span></code></pre></div>
</div>
<p>Now that we have <a href="https://www.spsanderson.com/healthyR.ai/"><code>{healthyR.ai}</code></a> installed we can get to work. It does use the <code>{recipes}</code> package underneath so you will need to have that installed as well. Let’s look at the histogram of <strong>mtcars</strong> now.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">mpg_vec <span class="ot" style="color: #003B4F;">&lt;-</span> mtcars<span class="sc" style="color: #5E5E5E;">$</span>mpg</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;">hist</span>(mpg_vec)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(mpg_vec))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-3-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>First up, Box-Cox</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">library</span>(healthyR.ai)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">library</span>(recipes)</span>
<span id="cb5-3"></span>
<span id="cb5-4">ro <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">recipe</span>(mpg <span class="sc" style="color: #5E5E5E;">~</span> wt, <span class="at" style="color: #657422;">data =</span> mtcars)</span>
<span id="cb5-5"></span>
<span id="cb5-6">boxcox_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb5-7">  <span class="at" style="color: #657422;">.recipe_object =</span> ro,</span>
<span id="cb5-8">  mpg,</span>
<span id="cb5-9">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"boxcox"</span></span>
<span id="cb5-10">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;">pull</span>(mpg)</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(boxcox_vec))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Basis Spline</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">bs_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb6-2">  <span class="at" style="color: #657422;">.recipe_object =</span> ro,</span>
<span id="cb6-3">  mpg,</span>
<span id="cb6-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"bs"</span></span>
<span id="cb6-5">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>()</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(bs_vec<span class="sc" style="color: #5E5E5E;">$</span>mpg_bs_1))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(bs_vec<span class="sc" style="color: #5E5E5E;">$</span>mpg_bs_2))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-5-2.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(bs_vec<span class="sc" style="color: #5E5E5E;">$</span>mpg_bs_3))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-5-3.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Log</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">log_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb9-2">  <span class="at" style="color: #657422;">.recipe_object =</span> ro,</span>
<span id="cb9-3">  mpg,</span>
<span id="cb9-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"log"</span></span>
<span id="cb9-5">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;">pull</span>(mpg)</span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(log_vec))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Yeo-Johnson</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">yj_vec <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hai_data_transform</span>(</span>
<span id="cb10-2">  <span class="at" style="color: #657422;">.recipe_object =</span> ro,</span>
<span id="cb10-3">  mpg,</span>
<span id="cb10-4">  <span class="at" style="color: #657422;">.type_of_scale =</span> <span class="st" style="color: #20794D;">"yeojohnson"</span></span>
<span id="cb10-5">)<span class="sc" style="color: #5E5E5E;">$</span>scale_rec_obj <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;">get_juiced_data</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;">pull</span>(mpg)</span>
<span id="cb10-8"></span>
<span id="cb10-9"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">density</span>(yj_vec))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>transforms</category>
  <category>healthyrai</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-26/index.html</guid>
  <pubDate>Thu, 26 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Simplifying List Filtering in R with purrr’s keep()</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-25/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>The <a href="https://purrr.tidyverse.org/"><code>{purrr}</code></a> package in R is a powerful tool for working with lists and other data structures. One particularly useful function in the package is <a href="https://purrr.tidyverse.org/reference/keep.html"><code>keep()</code></a>, which allows you to filter a list by keeping only the elements that meet certain conditions.</p>
<p>The <code>keep()</code> function takes two arguments: the list to filter, and a function that returns a logical value indicating whether each element of the list should be kept. The function can be specified as an anonymous function or a named function, and it should take a single argument (the current element of the list).</p>
<p>For example, let’s say we have a list of numbers and we want to keep only the even numbers. We could use the keep() function with an anonymous function that checks the remainder of the current element divided by 2:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(purrr)</span>
<span id="cb1-2"></span>
<span id="cb1-3">numbers <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">3</span>, <span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">6</span>)</span>
<span id="cb1-4">even_numbers <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">keep</span>(numbers, <span class="cf" style="color: #003B4F;">function</span>(x) x <span class="sc" style="color: #5E5E5E;">%%</span> <span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb1-5">even_numbers</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2 4 6</code></pre>
</div>
</div>
<p>We see that this keeps <strong>[1] 2 4 6</strong>.</p>
<p>The purrr package also provides a convenient shorthand for this operation, <code>.p</code>, which can be used inside the keep function to return the element.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">even_numbers <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">keep</span>(numbers, <span class="sc" style="color: #5E5E5E;">~</span> .x <span class="sc" style="color: #5E5E5E;">%%</span> <span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>)</span>
<span id="cb3-2">even_numbers</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2 4 6</code></pre>
</div>
</div>
<p>You can also use the <code>keep()</code> function to filter a list of other types of objects, such as strings or lists. For example, you could use it to keep only the strings that are longer than a certain length:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">words <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"cat"</span>, <span class="st" style="color: #20794D;">"dog"</span>, <span class="st" style="color: #20794D;">"elephant"</span>, <span class="st" style="color: #20794D;">"bird"</span>)</span>
<span id="cb5-2">long_words <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">keep</span>(words, <span class="cf" style="color: #003B4F;">function</span>(x) <span class="fu" style="color: #4758AB;">nchar</span>(x) <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-3">long_words</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "elephant"</code></pre>
</div>
</div>
<p>We see that this keeps “elephant” &amp; “bird”.</p>
<p>In summary, the <code>{purrr}</code> package’s <code>keep()</code> function is a powerful tool for filtering lists in R, and the <code>.p</code> parameter can be used as a shorthand. It can be used to keep only the items in a list that meet a user-given condition, and it can be used with a variety of data types.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>Here is the <code>keep()</code> function and it’s parameters.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">keep</span>(.x, .p, ...)</span></code></pre></div>
</div>
<p>Here are the arguments to the parameters.</p>
<ul>
<li><code>.x</code> - A list or vector.</li>
<li><code>.p</code> - A predicate function (i.e.&nbsp;a function that returns either TRUE or FALSE) specified in one of the following ways:
<ul>
<li>A named function, e.g.&nbsp;is.character.</li>
<li>An anonymous function, e.g.&nbsp;<code>\(x) all(x &lt; 0)</code> or <code>function(x) all(x &lt; 0)</code>.</li>
<li>A formula, e.g.&nbsp;<code>~ all(.x &lt; 0)</code>. You must use <code>.x</code> to refer to the first argument). Only recommended if you require backward compatibility with older versions of R.</li>
</ul></li>
<li><code>...</code> - Additional arguments passed on to .p.</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>I recently came across wanting to filter a list that is given as an argument to a parameter. The function I am working for my upcoming <a href="https://www.spsanderson.com/tidyAML/"><code>{tidyAML}</code></a> package has a function called <a href="https://www.spsanderson.com/tidyAML/reference/create_workflow_set.html"><code>create_workflow_set()</code></a> that has a parameter <code>.recipe_list</code> which is set to <code>list()</code>. The user must only place recipes in this list or else I want it to fail. So I was able to write a quick check using <code>keep()</code> like so:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;"># Checks ----</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;"># only keep() recipes</span></span>
<span id="cb8-3">rec_list <span class="ot" style="color: #003B4F;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">keep</span>(rec_list, <span class="sc" style="color: #5E5E5E;">~</span> <span class="fu" style="color: #4758AB;">inherits</span>(.x, <span class="st" style="color: #20794D;">"recipe"</span>))</span></code></pre></div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <category>purrr</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-25/index.html</guid>
  <pubDate>Wed, 25 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Making Non Stationary Data Stationary</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>In the most basic sense for time series, a series is stationary if the properties of the generating process (the process that generates the data) do not change over time, the process remains constant. This does not mean the data does not change, it simply means the process does not change. You can bake a vanilla cake or a chocolate cake but you still cook it in the oven.</p>
<p>A non-stationary time series is like a toy car that doesn’t run in a straight line. Sometimes it goes fast and sometimes it goes slow, so it’s hard to predict what it will do next. But, just like how you can fix a toy car by adjusting it, we can fix a non-stationary time series by making it <em>“stationary.”</em></p>
<p>One way we can do this is by taking the <em>difference</em> in the time series vector. This is like taking the toy car apart and looking at how each piece moves. By subtracting one piece from another, we can see if they are moving at the same speed or not. If they are not, we can adjust them so they are moving at the same speed. This makes it easier to predict what the toy car will do next because it’s moving at a steady pace.</p>
<p>Another way we can make a non-stationary time series stationary is by taking the second difference of the log of the data. This is like looking at the toy car from a different angle. By taking the log of the data, we can see how much each piece has changed over time. Then, by taking the second difference, we can see if the changes are happening at the same rate or not. If they are not, we can adjust them so they are happening at the same rate.</p>
<p>In simple terms, these methods help to stabilize the time series by making the data move at a consistent speed, which allows for better predictions.</p>
<p>In summary, a non-stationary time series is like a toy car that doesn’t run in a straight line. By taking the difference in the time series vector or taking the second difference of the log of the data, we can fix the toy car and make it run in a straight line. This is helpful for making accurate predictions.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>We are going to use the <a href="https://rdrr.io/cran/aTSA/man/adf.test.html"><code>adf.test()</code></a> function from the <a href="https://rdrr.io/cran/aTSA/"><code>{aTSA}</code></a> library. Here is the function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">adf.test</span>(x, <span class="at" style="color: #657422;">nlag =</span> <span class="cn" style="color: #8f5902;">NULL</span>, <span class="at" style="color: #657422;">output =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</div>
<p>Here are the arugments to the parameters.</p>
<ul>
<li><code>x</code>- a numeric vector or time series.</li>
<li><code>alternative</code> - the lag order with default to calculate the test statistic. See details for the default.</li>
<li><code>output</code> - a logical value indicating to print the test results in R console. The default is TRUE.</li>
</ul>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>As an example, we are going to use the <code>R</code> built in data set <strong>AirPassengers</strong> as our timeseries. This data is both <em>cyclical</em> and <em>trending</em> so it is good for this purpose.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">library</span>(aTSA)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">plot</span>(AirPassengers)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Now that we know what it looks like, lets see if it is stationary right off the bat.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">adf.test</span>(AirPassengers)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag      ADF p.value
[1,]   0  0.04712   0.657
[2,]   1 -0.35240   0.542
[3,]   2 -0.00582   0.641
[4,]   3  0.26034   0.718
[5,]   4  0.82238   0.879
Type 2: with drift no trend 
     lag    ADF p.value
[1,]   0 -1.748   0.427
[2,]   1 -2.345   0.194
[3,]   2 -1.811   0.402
[4,]   3 -1.536   0.509
[5,]   4 -0.986   0.701
Type 3: with drift and trend 
     lag   ADF p.value
[1,]   0 -4.64    0.01
[2,]   1 -7.65    0.01
[3,]   2 -7.09    0.01
[4,]   3 -6.94    0.01
[5,]   4 -5.95    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
</div>
<p>So we can see that right off the bat that <strong>“Type 1”</strong> and <strong>“Type 2”</strong> fail as there is significant trend in this data as we can plainly see. Let’s see what happens when we take a simpmle <code>diff()</code> of the series.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">diff</span>(AirPassengers))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Looking like its still going to fail, but let’s run the test anyways.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">adf.test</span>(<span class="fu" style="color: #4758AB;">diff</span>(AirPassengers))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag   ADF p.value
[1,]   0 -8.58    0.01
[2,]   1 -8.68    0.01
[3,]   2 -8.13    0.01
[4,]   3 -8.48    0.01
[5,]   4 -6.59    0.01
Type 2: with drift no trend 
     lag   ADF p.value
[1,]   0 -8.58    0.01
[2,]   1 -8.69    0.01
[3,]   2 -8.17    0.01
[4,]   3 -8.60    0.01
[5,]   4 -6.70    0.01
Type 3: with drift and trend 
     lag   ADF p.value
[1,]   0 -8.55    0.01
[2,]   1 -8.66    0.01
[3,]   2 -8.14    0.01
[4,]   3 -8.57    0.01
[5,]   4 -6.69    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
</div>
<p>The adf.test comes back with a <em>p.value &lt;= 0.01</em> as the data is no longer presenting a trend, but as we can plainly see, the data has non constant variance overtime which we know we need. Here we will use the <a href="https://www.spsanderson.com/TidyDensity/"><code>{TidyDensity}</code></a> package to use the <code>cvar()</code> (cumulative variance) function to see the ongoing variance.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">library</span>(TidyDensity)</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cvar</span>(<span class="fu" style="color: #4758AB;">diff</span>(AirPassengers)), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Reject the null that the data is <em>stationary</em>. So lets proceed with a diff diff log of the data and see what we get. First let’s visualize.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">log</span>(AirPassengers))))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="fu" style="color: #4758AB;">cvar</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">log</span>(AirPassengers)))), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index_files/figure-html/unnamed-chunk-7-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Looking good!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">adf.test</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">diff</span>(<span class="fu" style="color: #4758AB;">log</span>(AirPassengers))))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag    ADF p.value
[1,]   0 -15.90    0.01
[2,]   1 -12.78    0.01
[3,]   2  -9.28    0.01
[4,]   3 -10.76    0.01
[5,]   4  -9.72    0.01
Type 2: with drift no trend 
     lag    ADF p.value
[1,]   0 -15.85    0.01
[2,]   1 -12.73    0.01
[3,]   2  -9.24    0.01
[4,]   3 -10.73    0.01
[5,]   4  -9.68    0.01
Type 3: with drift and trend 
     lag    ADF p.value
[1,]   0 -15.79    0.01
[2,]   1 -12.68    0.01
[3,]   2  -9.21    0.01
[4,]   3 -10.68    0.01
[5,]   4  -9.64    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
</div>
<p>Voila!</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ol type="1">
<li>https://towardsdatascience.com/stationarity-in-time-series-analysis-90c94f27322</li>
<li>https://www.statology.org/dickey-fuller-test-in-r/</li>
</ol>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <category>timeseries</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-24/index.html</guid>
  <pubDate>Tue, 24 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>ADF and Phillips-Perron Tests for Stationarity using lists</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-23/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>A time series is a set of data points collected at regular intervals of time. Sometimes, the data points in a time series change over time in a predictable way. This is called a stationary time series. Other times, the data points change in an unpredictable way. This is called a non-stationary time series.</p>
<p>Imagine you are playing a game of catch with a friend. If you throw the ball back and forth at the same speed and distance, that’s like a stationary time series. But if you keep throwing the ball harder and farther, that’s like a non-stationary time series.</p>
<p>There are two tests that we can use to see if a time series is stationary or non-stationary. The first test is called the ADF test, which stands for Augmented Dickey-Fuller test. The second test is called the Phillips-Perron test.</p>
<p>The ADF test looks at the data points and checks to see if the average value of the data points is the same over time. If the average value is the same, then the time series is stationary. If the average value is not the same, then the time series is non-stationary.</p>
<p>The Phillips-Perron test is similar to the ADF test, but it is a bit more advanced. It checks to see if the data points are changing in a predictable way. If the data points are changing in a predictable way, then the time series is stationary. If the data points are changing in an unpredictable way, then the time series is non-stationary.</p>
<p>So, in short, The ADF test checks if the mean of the time series is constant over time and Phillips-Perron test checks if the variance of the time series is constant over time.</p>
<p>Now, you can use these two tests to see if the time series you are studying is stationary or non-stationary, just like how you can use the game of catch to see if your throws are the same or different.</p>
</section>
<section id="function" class="level1">
<h1>Function</h1>
<p>To perform these test we can use two libraries, one is the <code>{tseries}</code> library for the <code>adf.test()</code> and the other is the <code>{aTSA}</code> for the <code>pp.test()</code></p>
<p>Let’s see some examples.</p>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Let’s first make our time series obejcts and place them in a list.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tseries)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(aTSA)</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;"># create time series objects</span></span>
<span id="cb1-5">ts1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>), <span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1990</span>,<span class="dv" style="color: #AD0000;">1</span>), <span class="at" style="color: #657422;">frequency =</span> <span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb1-6">ts2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>), <span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1995</span>,<span class="dv" style="color: #AD0000;">1</span>), <span class="at" style="color: #657422;">frequency =</span> <span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb1-7">ts3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ts</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>), <span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">2000</span>,<span class="dv" style="color: #AD0000;">1</span>), <span class="at" style="color: #657422;">frequency =</span> <span class="dv" style="color: #AD0000;">12</span>)</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;"># create list of time series</span></span>
<span id="cb1-10">ts_list <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(ts1, ts2, ts3)</span></code></pre></div>
</div>
<p>Now let’s make our functions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># function to test for stationarity</span></span>
<span id="cb2-2">adf_is_stationary <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x) {</span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;">adf.test</span>(x)<span class="sc" style="color: #5E5E5E;">$</span>p.value <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="fl" style="color: #AD0000;">0.05</span></span>
<span id="cb2-4">}</span>
<span id="cb2-5"></span>
<span id="cb2-6">pp_is_stationary <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x) {</span>
<span id="cb2-7">  pp_df <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">pp.test</span>(x) <span class="sc" style="color: #5E5E5E;">|&gt;</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>() </span>
<span id="cb2-8">  pp_df<span class="sc" style="color: #5E5E5E;">$</span>p.value <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="fl" style="color: #AD0000;">0.05</span></span>
<span id="cb2-9">}</span></code></pre></div>
</div>
<p>Time to use <code>lapply()</code>!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># apply function to each time series in list</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">lapply</span>(ts_list, adf_is_stationary)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag    ADF p.value
[1,]   0 -10.97    0.01
[2,]   1  -7.70    0.01
[3,]   2  -5.23    0.01
[4,]   3  -4.05    0.01
[5,]   4  -4.03    0.01
Type 2: with drift no trend 
     lag    ADF p.value
[1,]   0 -11.48    0.01
[2,]   1  -8.32    0.01
[3,]   2  -5.81    0.01
[4,]   3  -4.59    0.01
[5,]   4  -4.63    0.01
Type 3: with drift and trend 
     lag    ADF p.value
[1,]   0 -11.42    0.01
[2,]   1  -8.28    0.01
[3,]   2  -5.77    0.01
[4,]   3  -4.56    0.01
[5,]   4  -4.59    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 
Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag    ADF p.value
[1,]   0 -10.60    0.01
[2,]   1  -7.88    0.01
[3,]   2  -5.96    0.01
[4,]   3  -5.26    0.01
[5,]   4  -4.90    0.01
Type 2: with drift no trend 
     lag    ADF p.value
[1,]   0 -10.64    0.01
[2,]   1  -7.98    0.01
[3,]   2  -6.08    0.01
[4,]   3  -5.41    0.01
[5,]   4  -5.08    0.01
Type 3: with drift and trend 
     lag    ADF p.value
[1,]   0 -10.58    0.01
[2,]   1  -7.94    0.01
[3,]   2  -6.06    0.01
[4,]   3  -5.39    0.01
[5,]   4  -5.07    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 
Augmented Dickey-Fuller Test 
alternative: stationary 
 
Type 1: no drift no trend 
     lag   ADF p.value
[1,]   0 -9.19    0.01
[2,]   1 -6.65    0.01
[3,]   2 -5.41    0.01
[4,]   3 -5.33    0.01
[5,]   4 -4.77    0.01
Type 2: with drift no trend 
     lag   ADF p.value
[1,]   0 -9.14    0.01
[2,]   1 -6.62    0.01
[3,]   2 -5.39    0.01
[4,]   3 -5.30    0.01
[5,]   4 -4.75    0.01
Type 3: with drift and trend 
     lag   ADF p.value
[1,]   0 -9.11    0.01
[2,]   1 -6.59    0.01
[3,]   2 -5.36    0.01
[4,]   3 -5.29    0.01
[5,]   4 -4.73    0.01
---- 
Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
logical(0)

[[2]]
logical(0)

[[3]]
logical(0)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">lapply</span>(ts_list, pp_is_stationary)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Phillips-Perron Unit Root Test 
alternative: stationary 
 
Type 1: no drift no trend 
 lag Z_rho p.value
   3  -111    0.01
----- 
 Type 2: with drift no trend 
 lag Z_rho p.value
   3  -110    0.01
----- 
 Type 3: with drift and trend 
 lag Z_rho p.value
   3  -110    0.01
--------------- 
Note: p-value = 0.01 means p.value &lt;= 0.01 
Phillips-Perron Unit Root Test 
alternative: stationary 
 
Type 1: no drift no trend 
 lag Z_rho p.value
   3  -101    0.01
----- 
 Type 2: with drift no trend 
 lag Z_rho p.value
   3  -101    0.01
----- 
 Type 3: with drift and trend 
 lag Z_rho p.value
   3  -101    0.01
--------------- 
Note: p-value = 0.01 means p.value &lt;= 0.01 
Phillips-Perron Unit Root Test 
alternative: stationary 
 
Type 1: no drift no trend 
 lag Z_rho p.value
   3 -92.9    0.01
----- 
 Type 2: with drift no trend 
 lag Z_rho p.value
   3 -92.9    0.01
----- 
 Type 3: with drift and trend 
 lag Z_rho p.value
   3   -93    0.01
--------------- 
Note: p-value = 0.01 means p.value &lt;= 0.01 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] FALSE FALSE FALSE

[[2]]
[1] FALSE FALSE FALSE

[[3]]
[1] FALSE FALSE FALSE</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <category>timeseries</category>
  <category>lapply</category>
  <guid>https://www.spsanderson.com/steveondata/posts/rtip-2023-01-23/index.html</guid>
  <pubDate>Mon, 23 Jan 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Another Post on Lists</title>
  <dc:creator>Steven P. Sanderson II, MPH</dc:creator>
  <link>https://www.spsanderson.com/steveondata/posts/weekly-rtip-lists-2023-01-20/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Manipulating lists in R is a powerful tool for organizing and analyzing data. Here are a few common ways to manipulate lists:</p>
<ol type="1">
<li>Indexing: Lists can be indexed using square brackets “[ ]” and numeric indices. For example, to access the first element of a list called “mylist”, you would use the expression “mylist[1]”.</li>
<li>Subsetting: Lists can be subsetted using the same square bracket notation, but with a logical vector indicating which elements to keep. For example, to select all elements of “mylist” that are greater than 5, you would use the expression “mylist[mylist &gt; 5]”.</li>
<li>Modifying elements: Elements of a list can be modified by assigning new values to them using the assignment operator “&lt;-”. For example, to change the third element of “mylist” to 10, you would use the expression “mylist[3] &lt;- 10”.</li>
<li>Adding elements: New elements can be added to a list using the concatenation operator “c()” or the “append()” function. For example, to add the number 7 to the end of “mylist”, you would use the expression “mylist &lt;- c(mylist, 7)”.</li>
<li>Removing elements: Elements can be removed from a list using the “-” operator. For example, to remove the second element of “mylist”, you would use the expression “mylist &lt;- mylist[-2]”.</li>
</ol>
</section>
<section id="examples" class="level1">
<h1>Examples</h1>
<p>Here is an example of how these methods can be used to manipulate a list in R:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">mylist <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>,<span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;"># Indexing</span></span>
<span id="cb1-4">mylist[[<span class="dv" style="color: #AD0000;">1</span>]] <span class="co" style="color: #5E5E5E;"># Returns 1</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># Subsetting</span></span>
<span id="cb3-2">mylist[mylist <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">3</span>] <span class="co" style="color: #5E5E5E;"># Returns 4 &amp; 5</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 4

[[2]]
[1] 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># Modifying elements</span></span>
<span id="cb5-2">mylist[[<span class="dv" style="color: #AD0000;">3</span>]] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb5-3">mylist <span class="co" style="color: #5E5E5E;"># Returns 1 2 10 4 5 7</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 10

[[4]]
[1] 4

[[5]]
[1] 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># Adding elements</span></span>
<span id="cb7-2">mylist <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(mylist, <span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb7-3">mylist <span class="co" style="color: #5E5E5E;"># Returns 1 2 10 4 5 7</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 10

[[4]]
[1] 4

[[5]]
[1] 5

[[6]]
[1] 7</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># Removing elements</span></span>
<span id="cb9-2">mylist[<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">3</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 4

[[4]]
[1] 5

[[5]]
[1] 7</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">mylist <span class="co" style="color: #5E5E5E;"># Returns 1 2 4 5 7</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 10

[[4]]
[1] 4

[[5]]
[1] 5

[[6]]
[1] 7</code></pre>
</div>
</div>
<p>Voila!</p>


</section>

 ]]></description>
  <category>code</category>
  <category>rtip</category>
  <category>lists</category>
  <guid>https://www.spsanderson.com/steveondata/posts/weekly-rtip-lists-2023-01-20/index.html</guid>
  <pubDate>Fri, 20 Jan 2023 05:00:00 GMT</pubDate>
</item>
</channel>
</rss>
