---
title: "Analyzing Time Series Growth with `ts_growth_rate_vec()` in healthyR.ts"
author: "Steven P. Sanderson II, MPH"
date: "2023-10-16"
categories: [rtip, healthyrts, timeseries]
---

# Introduction

Time series data is essential for understanding trends and making forecasts in various fields, from finance to healthcare. Analyzing the growth rate of time series data is a crucial step in uncovering valuable insights. In the world of R programming, the `healthyR.ts` library introduces a powerful tool to calculate growth rates and log-differenced growth rates with the `ts_growth_rate_vec()` function. In this blog post, we'll explore how this function works and how it can be used for effective time series analysis.

# Understanding `ts_growth_rate_vec()`:

The `ts_growth_rate_vec()` function is part of the `healthyR.ts` library, designed to work with numeric vectors or time series data. It calculates the growth rate or log-differenced growth rate of the provided data, offering valuable insights into the underlying trends and patterns.

# Syntax

Here is the function syntax:

```R
ts_growth_rate_vec(
  .x, 
  .scale = 100, 
  .power = 1, 
  .log_diff = FALSE, 
  .lags = 1
)
```

*   `.x` - A numeric vector
*   `.scale` - A numeric value that is used to scale the output
*   `.power` - A numeric value that is used to raise the output to a power
*   `.log_diff` - A logical value that determines whether the output is a log difference
*   `.lags` - An integer that determines the number of lags to use

You can find the [documentation here](https://www.spsanderson.com/healthyR.ts/reference/ts_growth_rate_vec.html)

# Examples

Let's first take a look at the data we are going to be working with in this post, `AirPassengers`.

```{r}
AirPassengers
plot(AirPassengers)
```

Let's load in the {healthyR.ts} library and see some examples to illustrate its functionality:

```{r message=FALSE, warning=FALSE}
library(healthyR.ts)
```

1. Calculating Basic Growth Rate:

```{r}
ts_growth_rate_vec(AirPassengers) |> head(12)
plot(ts(ts_growth_rate_vec(AirPassengers)))
```

The output provides growth rates for the AirPassengers dataset. This basic calculation can help you understand how the data is evolving over time. The growth rates are calculated from one point to the next, giving you an idea of the speed at which the values are changing.

2. Applying Scaling and Power Transformation:

```{r}
ts_growth_rate_vec(AirPassengers, .log_diff = TRUE) |> head(12)
plot(ts(ts_growth_rate_vec(AirPassengers, .log_diff = TRUE)))
```

This example introduces the option to apply scaling and a power transformation. The resulting growth rates can help uncover trends that might not be apparent in the original data. Using a log-differenced growth rate is particularly useful for capturing the percentage change, making it easier to interpret the data.

3. Handling Lagged Data:

```{r}
ts_growth_rate_vec(AirPassengers, .lags = -1) |> head(12)
plot.ts(ts_growth_rate_vec(AirPassengers, .lags = -1))
```

In this case, the function calculates the log differences of the time series with lags. This is helpful when you want to observe the changes between data points at different time intervals. It can reveal patterns that might not be apparent in the basic growth rate calculation.

4. Combining Scaling, Transformation, and Lags:

```{r}
ts_growth_rate_vec(AirPassengers, .log_diff = TRUE, .lags = -1) |> head(12)
plot.ts(ts_growth_rate_vec(AirPassengers, .log_diff = TRUE, .lags = -1))
```

This example combines all the mentioned features to provide a comprehensive analysis of the data. It's a powerful way to understand how the growth rate is affected by various factors, such as scaling and time lags.

# Conclusion:

The `ts_growth_rate_vec()` function in the `healthyR.ts` library is a versatile tool for time series analysis. Whether you need a basic growth rate, want to apply scaling and transformation, or work with lagged data, this function has you covered. It's a valuable asset for R programmers, helping them uncover hidden insights within time series data.

Incorporating this function into your data analysis workflow can provide you with a deeper understanding of how values change over time. Whether you're working with financial data, healthcare data, or any other time series dataset, `ts_growth_rate_vec()` is a powerful addition to your R programming toolkit. Start exploring your time series data today and discover the trends and patterns that lie within.