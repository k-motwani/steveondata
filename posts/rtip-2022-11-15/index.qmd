---
title: "Auto Prep data for XGBoost with {healthyR.ai}"
author: "Steven P. Sanderson II, MPH"
date: "2022-11-15"
categories: [code, rtip, healthyrai, xgboost]
---

# Introduction

Sometimes we may want to quickly format some data in order to just pass it through some algorithm just to see what happens, how crazy are things, just to get an idea of what may lie ahead...a lot of prep.

With my _r package_ `{healthyR.ai}` there is a set of __prepper__ functions that will automatically do a __'best effort'__ to format you data to be used in the algorithm you choose (should it be supported).

Today we will talk about [`[hai_xgboost_data_prepper()`](https://www.spsanderson.com/healthyR.ai/reference/hai_xgboost_data_prepper.html)

# Function

Let's take a look at the function call.

```{r fns, eval=FALSE}
hai_xgboost_data_prepper(.data, .recipe_formula)
```

Now let's go over the arguments that are passed to the function.

*  `.data` - The data that you are passing to the function. Can be any type of data that is accepted by the data parameter of the recipes::reciep() function.
*  `.recipe_formula` - The formula that is going to be passed. For example if you are using the diamonds data then the formula would most likely be something like price ~ .

# Example

Let's go over some examples.

```{r example1, warning=FALSE, message=FALSE}
library(ggplot2)
library(healthyR.ai)

# Regression
hai_xgboost_data_prepper(.data = diamonds, .recipe_formula = price ~ .)
reg_obj <- hai_xgboost_data_prepper(diamonds, price ~ .)
get_juiced_data(reg_obj)

# Classification
hai_xgboost_data_prepper(Titanic, Survived ~ .)
cla_obj <- hai_xgboost_data_prepper(Titanic, Survived ~ .)
get_juiced_data(cla_obj)

```

Voila!