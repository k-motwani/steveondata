---
title: "Working with Lists"
author: "Steven P. Sanderson II, MPH"
date: "2022-11-29"
categories: [code, rtip, lists, lapply]
---

# Introduction

In __R__ there are many times where we will work with _lists_. I won't go into why lists are great or really the structure of a list but rather simply working with them.

# Example

First let's make a list.

```{r list_object}
l <- list(
  letters,
  1:26,
  rnorm(26)
)

l
```

Now let's look at somethings we can do with lists. First, let's see if we can get the class of each item in the list. We are going to use `lapply()` for this.

```{r ex1}
lapply(l, class)
```

Now, let's perform some simple operations on each item of the list.

```{r ex2, warning=FALSE, message=FALSE}
lapply(l, length)
try(lapply(l, sum))
```

Ok so we see taking the sum of the first element of the list in `lapply()` did not work because of a class type mismatch. Let's see how we can get around this an only apply the `sum` function to a `numeric` type. To do this we can rely on [`{purrr}`](https://purrr.tidyverse.org/) by using a function [`map_if()`](https://purrr.tidyverse.org/reference/map_if.html?q=map_if#null)

```{r ex3, message=FALSE}
library(purrr)

map_if(l, is.numeric, sum)
```

```{r ex4}
map_if(l, is.numeric, mean)
```

Voila!