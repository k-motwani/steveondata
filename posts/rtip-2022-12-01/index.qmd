---
title: "Extract Boilerplate Workflow Metrics with {healthyR.ai}"
author: "Steven P. Sanderson II, MPH"
date: "2022-12-01"
categories: [code, rtip, healthyrai]
---

# Introduction

When working with the `{tidymodels}` framework there are ways to pull model metrics from a `workflow`, since [`{healthyR.ai}`](https://www.spsanderson.com/healthyR.ai/) is built on and around the `{tidyverse}` and `{tidymodels}` we can do the same. This post will focus on the function [`hai_auto_wflw_metrics()`](https://www.spsanderson.com/healthyR.ai/reference/hai_auto_wflw_metrics.html)

# Function

Let's take a look at the function call.

```{r eval=FALSE}
hai_auto_wflw_metrics(.data)
```

The only parameter is `.data` and this is strictly the output object of one of the [`hai_auto_` boiler plate functions](https://www.spsanderson.com/healthyR.ai/reference/index.html#boiler-plate-functions)

# Example

Since this function requires the input from an `hai_auto` function, we will walk through an example with the __iris__ data set. We are going to use the `hai_auto_knn()` to classify the `Species`.

```{r ex1, warning=FALSE, message=FALSE}
library(healthyR.ai)

data <- iris

rec_obj <- hai_knn_data_prepper(data, Species ~ .)

auto_knn <- hai_auto_knn(
  .data = data,
  .rec_obj = rec_obj,
  .best_metric = "f_meas",
  .model_type = "classification",
  .grid_size = 2,
  .num_cores = 4
)

hai_auto_wflw_metrics(auto_knn)
```

As we see this pulls out the full metric table from the workflow.

Voila!