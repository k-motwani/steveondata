---
title: "Auto K-Means with {healthyR.ai"
author: "Steven P. Sanderson II, MPH"
date: "2023-01-16"
categories: [code, rtip, kmeans, healthyrai]
---

# Introduction

Today's post is going to center around the automatic k-means functionality of [`{healthyR.ai}`](https://www.spsanderson.com/healthyR.ai). I am not going to get into what it is or how it works, but rather the function call itself and how it works and what it puts out. The function is called [`hai_kmeans_automl`](https://www.spsanderson.com/healthyR.ai/reference/hai_kmeans_automl.html). This function is a wrapper around the `h2o::h2o.kmeans()` function, but also does some processing to enhance the output at the end. Let's get to it!

# Function

Here is the full function call.

```{r eval=FALSE}
hai_kmeans_automl(
  .data,
  .split_ratio = 0.8,
  .seed = 1234,
  .centers = 10,
  .standardize = TRUE,
  .print_model_summary = TRUE,
  .predictors,
  .categorical_encoding = "auto",
  .initialization_mode = "Furthest",
  .max_iterations = 100
)
```

Now let's go over the function arguments:

*  `.data` - The data that is to be passed for clustering.
*  `.split_ratio` - The ratio for training and testing splits.
*  `.seed` - The default is 1234, but can be set to any integer.
*  `.centers` - The default is 1. Specify the number of clusters (groups of data) in a data set.
*  `.standardize` - The default is set to TRUE. When TRUE all numeric columns will be set to zero mean and unit variance.
*  `.print_model_summary` - This is a boolean and controls if the model summary is printed to the console. The default is TRUE.
*  `.predictors` -  This must be in the form of c("column_1", "column_2", ... "column_n")
*  `.categorical_encoding` - Can be one of the following:
    *  "auto"
    *  "enum"
    *  "one_hot_explicit"
    *  "binary"
    *  "eigen"
    *  "label_encoder"
    *  "sort_by_response"
    *  "enum_limited"
*  `.initialization_mode` - This can be one of the following:
    *  "Random"
    *  "Furthest (default)
    *  "PlusPlus"
*  `.max_iterations` - The default is 100. This specifies the number of training iterations

# Examples

Time for some examples.

```{r warning=FALSE, message=FALSE, eval=FALSE}
library(healthyR.ai)
library(h2o)

h2o.init()

output <- hai_kmeans_automl(
  .data = iris,
  .predictors = c(
    "Sepal.Width", "Sepal.Length", "Petal.Width", "Petal.Length"
    ),
  .standardize = TRUE,
  .split_ratio = .8
)

h2o.shutdown(prompt = FALSE)
```

```{r warning=FALSE, message=FALSE, include=FALSE}
library(healthyR.ai)
library(h2o)

h2o.init()

output <- hai_kmeans_automl(
  .data = iris,
  .predictors = c(
    "Sepal.Width", "Sepal.Length", "Petal.Width", "Petal.Length"
    ),
  .standardize = TRUE,
  .split_ratio = .8
)

h2o.shutdown(prompt = FALSE)
```

Now let's take a look at the output. There are going to be 4 pieces of main output. Here they are:

1. `data`
2. `auto_kmeans_obj`
3. `model_id`
4. `scree_plt`

Let's take a look at each one. First the `data` output which itself has 6 different objects in it.

```{r warning=FALSE, message=FALSE}
output$data
```

Now lets take a look at the `auto_kmeans_obj`

```{r warning=FALSE, message=FALSE}
output$auto_kmeans_obj
```
The model id:

```{r warning=FALSE, message=FALSE}
output$model_id
```

And finally the `scree_plt`.

```{r warning=FALSE, message=FALSE}
output$scree_plt
```

Voila!