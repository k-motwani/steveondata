---
title: "Geometric Brownian Motion with {healthyR.ts}"
author: "Steven P. Sanderson II, MPH"
date: "2023-01-18"
categories: [code, rtip, timeseries, healthyrts]
---

# Introduction

Geometric Brownian motion (GBM) is a widely used model in financial analysis for modeling the behavior of stock prices. It is a stochastic process that describes the evolution of a stock price over time, assuming that the stock price follows a random walk with a drift term and a volatility term.

One of the advantages of GBM is that it can capture the randomness and volatility of stock prices, which is a key feature of financial markets. GBM can also be used to estimate the expected return and volatility of a stock, which are important inputs for financial decision making.

Another advantage of GBM is that it can be used to generate simulations of future stock prices. These simulations can be used to estimate the probability of different outcomes, such as the probability of a stock price reaching a certain level in the future. This can be useful for risk management and for evaluating investment strategies.

GBM is also very easy to implement, making it a popular choice among financial analysts and traders.

The equation for GBM is: $$
dS(t) = μS(t)dt + σS(t)dW(t)
$$ Where:

$dS(t)$ is the change in the stock price at time $t$

$S(t)$ is the stock price at time $t$

$μ$ is the expected return of the stock

$σ$ is the volatility of the stock

$dW(t)$ is a Wiener process (a random variable that describes the rate of change of a random variable over time)

It's important to keep in mind that GBM is a model and not always a perfect fit to real-world stock prices. However, it's a widely accepted model due to its capability to captures the key characteristics of stock prices and its mathematical tractability.

Attention R users! Are you looking for a reliable and accurate way to model stock prices? We have some exciting news for you! The next release of the R package [`{healthyR.ts}`](https://www.spsanderson.com/healthyR.ts/) will include a new function, `ts_geometric_brownian_motion()`. This powerful function utilizes the geometric Brownian motion model to simulate stock prices, providing you with valuable insights and predictions for your financial analysis.

# Function

Let's take a look at the full function call.

```{r eval=FALSE}
ts_geometric_brownian_motion(
  .num_sims = 100,
  .time = 25,
  .mean = 0,
  .sigma = 0.1,
  .initial_value = 100,
  .delta_time = 1/365,
  .return_tibble = TRUE
)
```

Now let's go over the arguments to the parameters.

*  `.num_sims` - Total number of simulations.
*  `.time` - Total time of the simulation.
*  `.mean` - Expected return
*  `.sigma` - Volatility
*  `.initial_value` - Integer representing the initial value.
*  `.delta_time` - Time step size.
*  `.return_tibble` The default is TRUE. If set to FALSE then an object of class matrix will be returned.


# Example

Let's go over a few examples.

```{r, warning=FALSE, message=FALSE}
library(healthyR.ts)

ts_geometric_brownian_motion()
```

Now without returning a `tibble` object.

```{r warning=FALSE, message=FALSE}
ts_geometric_brownian_motion(.num_sims = 5, .return_tibble = FALSE)
```

Let's visualize the GBM at different levels of volatility.

```{r warning=FALSE, message=FALSE}
library(dplyr)
library(ggplot2)

gbm <- rbind(
  ts_geometric_brownian_motion(.sigma = 0.05) %>%
    mutate(volatility = as.factor("A) Sigma = 5%")),
  ts_geometric_brownian_motion(.sigma = 0.1) %>%
    mutate(volatility = as.factor("B) Sigma = 10%")),
  ts_geometric_brownian_motion(.sigma = .15) %>%
    mutate(volatility = as.factor("C) Sigma = 15%")),
  ts_geometric_brownian_motion(.sigma = .2) %>%
    mutate(volatility = as.factor("D) Sigma = 20%"))
)

gbm %>%
  ggplot(aes(x = t, y = y, group = sim_number, color = sim_number)) + 
  facet_wrap(~ volatility, scales = "free") +
  geom_line() +
  theme_minimal() +
  theme(legend.position = "none")
```

Voila!