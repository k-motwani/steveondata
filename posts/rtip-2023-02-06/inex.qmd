---
title: "Cumulative Measurement Functions with {TidyDensity}"
author: "Steven P. Sanderson II, MPH"
date: "2023-02-06"
categories: [code, rtip, tidydensity]
---

# Introduction

If you're looking for an easy-to-use package to calculate cumulative statistics in R, you may want to check out the TidyDensity package. This package offers several functions to calculate cumulative measurements, including mean, median, standard deviation, variance, skewness, kurtosis, harmonic mean, and geometric mean.

*  `cgmean()`: Cumulative Geometric Mean

The `cgmean()` function calculates the cumulative geometric mean of a set of values. This is the nth root of the product of the first n elements of the set. It's a useful measurement for sets of values that are multiplied together, such as growth rates.

*  `chmean()`: Cumulative Harmonic Mean

The `chmean()` function calculates the cumulative harmonic mean of a set of values. This is the inverse of the arithmetic mean of the reciprocals of the values. It's commonly used for sets of values that represent rates, such as speeds.

*  `ckurtosis()`: Cumulative Kurtosis

The `ckurtosis()` function calculates the cumulative kurtosis of a set of values. Kurtosis is a measure of the peakedness of a distribution, relative to a normal distribution. The cumulative kurtosis calculates the kurtosis of a set of values up to a specific point in the set.

*  `cmean()`: Cumulative Mean

The `cmean()` function calculates the cumulative mean of a set of values. It's a measure of the average of the values up to a specific point in the set.

*  `cmedian()`: Cumulative Median

The `cmedian()` function calculates the cumulative median of a set of values. It's the value that separates the lower half of the set from the upper half, up to a specific point in the set.

*  `csd()`: Cumulative Standard Deviation

The `csd()` function calculates the cumulative standard deviation of a set of values. Standard deviation is a measure of the spread of values in a set. The cumulative standard deviation calculates the standard deviation up to a specific point in the set.

*  `cskewness()`: Cumulative Skewness

The `cskewness()` function calculates the cumulative skewness of a set of values. Skewness is a measure of the asymmetry of a distribution. The cumulative skewness calculates the skewness up to a specific point in the set.

*  `cvar()`: Cumulative Variance

The `cvar()` function calculates the cumulative variance of a set of values. Variance is a measure of the spread of values in a set. The cumulative variance calculates the variance up to a specific point in the set.

In conclusion, the [`{TidyDensity}`](https://www.spsanderson.com/TidyDensity/) package offers several functions for calculating cumulative statistics, including mean, median, standard deviation, variance, skewness, kurtosis, harmonic mean, and geometric mean. These functions make it easy to calculate cumulative statistics for sets of values in R.

# Functions

All of the functions perform work strictly on a vector. Because of this I will not go over the function calls separately because they all follow the vectorized for of `fun(.x)` where __`.x`__ is the argument passed to the cumulative function.

# Examples

Here I will go over some examples of each function use the _AirPassengers_ data set.

```{r warning=FALSE, message=FALSE}
library(TidyDensity)

v <- AirPassengers
```

Let's start at the top.

Cumulative Geometric Mean:

```{r}
head(cgmean(v))
tail(cgmean(v))

plot(cgmean(v), type = "l")
```

Cumulative Harmonic Mean:

```{r}
head(chmean(v))
tail(chmean(v))

plot(chmean(v), type = "l")
```

Cumulative Kurtosis:

```{r}
head(ckurtosis(v))
tail(ckurtosis(v))

plot(ckurtosis(v), type = "l")
```

Cumulative Mean:

```{r}
head(cmean(v))
tail(cmean(v))

plot(cmean(v), type = "l")
```

Cumulative Median:

```{r}
head(cmedian(v))
tail(cmedian(v))

plot(cmedian(v), type = "l")
```

Cumulative Standard Deviation:

```{r}
head(csd(v))
tail(csd(v))

plot(csd(v), type = "l")
```

Cumulative Skewness:

```{r}
head(cskewness(v))
tail(cskewness(v))

plot(cskewness(v), type = "l")
```

Cumulative Variance:

```{r}
head(cvar(v))
tail(cvar(v))

plot(cvar(v), type = "l")
```

Voila!