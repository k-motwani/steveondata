---
title: "Time Series Lag Correlation Plots"
author: "Steven P. Sanderson II, MPH"
date: "2022-11-11"
categories: [code, rtip, healthyrts, weeklytip]
image: healthyrts_logo.png
---

# Introduction

In time series analysis there is something called a lag. This simply means we take a look at some past event from some point in time *t*. This is a non-statistical method for looking at a relationship between a timeseries and its lags.

[`{healthyR.ts}`](https://www.spsanderson.com/healthyR.ts/) has a function called [`ts_lag_correlation()`](https://www.spsanderson.com/healthyR.ts/reference/ts_lag_correlation.html). This function, as described by it's name, provides more than just a simple lag plot.

This function provides a lot of extra information for the end user. First let's go over the function call.

# Function

## Function Call

Here is the full call:

```{r fns, eval=FALSE}
ts_lag_correlation(
  .data,
  .date_col,
  .value_col,
  .lags = 1,
  .heatmap_color_low = "white",
  .heatmap_color_hi = "steelblue"
)
```

Here are the arguments that get supplied to the different parameters.

-   `.data` - A tibble of time series data
-   `.date_col` - A date column
-   `.value_col` - The value column being analyzed
-   `.lags` - This is a vector of integer lags, ie 1 or c(1,6,12)
-   `.heatmap_color_low` - What color should the low values of the heatmap of the correlation matrix be, the default is **'white'**
-   `.heatmap_color_hi` - What color should the low values of the heatmap of the correlation matrix be, the default is **'steelblue'**

## Function Return

The function itself returns a list object. The list has the following elements in it:

_Data Elements_

*  `lag_list`
*  `lag_tbl`
*  `correlation_lag_matrix`
*  `correlation_lag_tbl`

_Plot Elements_

*  `lag_plot`
*  `plotly_lag_plot`
*  `correlation_heatmap`
*  `plotly_heatmap`

# Example

Let's take a look at an example. We are going to use the built in data set of __AirPassengers__.

```{r example, warning=FALSE, message=FALSE}
library(healthyR.ts)
library(dplyr)

df <- ts_to_tbl(AirPassengers) %>% select(-index)
lags <- c(1,3,6,12)

output <- ts_lag_correlation(
  .data = df,
  .date_col = date_col,
  .value_col = value,
  .lags = lags
)
```

Now that we have our output, let's examine each piece of it.

## Data Elements

Here are the data elements.

```{r}
output$data$lag_list
```

This is a list of all the tibbles of the different lags that were chosen.

```{r}
output$data$lag_tbl
```

This is the long lag `tibble` with all of the lags in it.

```{r}
output$data$correlation_lag_matrix
```

This is the correlation matrix.

```{r}
output$data$correlation_lag_tbl
```

This is the correlation lag `tibble`

## Plot Elements

```{r}
output$plots$lag_plot
```

The Lag Plot itself.

```{r}
output$plots$plotly_lag_plot
```

A plotly version of the lag plot.


```{r}
output$plots$correlation_heatmap
```

A heatmap of the correlations.

```{r}
output$plots$plotly_heatmap
```

A plotly version of the correlation heatmap.

_Voila!_